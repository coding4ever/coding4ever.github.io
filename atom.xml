<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2015-04-13T08:39:56+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Membuat Laporan Crystal Reports .NET Dengan Model Data-Push]]></title>
    <link href="http://coding4ever.net/blog/2015/04/12/membuat-laporan-crystal-reports-net-dengan-model-data-push/"/>
    <updated>2015-04-12T23:58:08+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/12/membuat-laporan-crystal-reports-net-dengan-model-data-push</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/04/sap-cr.jpg" width="120" height="100">Ketika memutuskan untuk menggunakan Crystal Reports‎ sebagai tool untuk membuat laporan, ada dua model yang bisa kita gunakan untuk menampilkan data.</p>

<ol>
<li>Pull model – kita membuat koneksi ke database, mengirimkan perintah SQL, menentukan filter dan sisanya akan langsung ditangani oleh Crystal Reports. Cara yang pertama ini adalah cara umum yang biasanya digunakan untuk menampilkan data, dan rata-rata tutorial yang beredar juga menggunakan cara ini.</li>
<li>Push model – dengan cara yang kedua ini kita membuat tabel temporary dengan menggunakan objek DataSet kemudian mengirimkan data dengan format DataSet, DataTable, IDataReader atau IEnumerable dan sisanya akan langsung ditangani oleh Crystal Reports.</li>
</ol>


<!-- more -->


<p>Nah pada postingan kali ini kita akan menggunakan cara yang kedua yaitu Push Model dengan sumber datanya berupa object collection (IEnumerable).</p>

<p>Persiapan tool-tool yang akan digunakan :</p>

<ol>
<li><a href="http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-community">Visual Studio Community 2013</a>, Anda bisa saja menggunakan Visual Studio .NET versi sebelumnya (2010, 2012)</li>
<li><a href="http://coding4ever.net/blog/categories/nuget/">NuGet</a>, untuk memudahkan dalam menambahkan library pihak ketiga. Adapun library pihak ketiga yang digunakan dalam sample ini adalah <a href="http://coding4ever.net/blog/categories/dapper-net/">Dapper .NET</a> dan <a href="http://www.nuget.org/packages/System.Data.SQLite.Core/">System.Data.SQLite Core</a></li>
<li><a href="http://scn.sap.com/docs/DOC-7824">Crystal Reports SP 13</a></li>
<li>Database <a href="http://www.sqlite.org/">SQLite</a></li>
<li>Tipe project WinForm</li>
</ol>


<p>Untuk contoh postingan kali ini, kita hanya menggunakan satu buah tabel dengan struktur seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-01.png"></p>

<p>Setelah semua tool yang dibutuhkan tersedia kita lanjutkan dengan pembuatan project :</p>

<ul>
<li>Buat project baru dengan type WinForm</li>
</ul>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-02.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-03.png"></p>

<ul>
<li>Tambahkan empat folder baru masing-masing dengan nama DataSet, Model, Dao dan Report</li>
</ul>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-04.png"></p>

<p>Folder DataSet digunakan untuk mengelompokkan item-item DataSet yang berfungsi sebagai tabel temporary, folder Model untuk mengelompokkan class-class model atau entity, folder Dao untuk mengelompokkan class-class akses database (Data Acces Object) dan terakhir folder Report untuk mengelompokkan item-item Crystal Reports.</p>

<h3>Class Model/Entity</h3>

<p>Untuk menerapkan konsep OOP (Object-oriented programming) dalam pemrograman database kita perlu membuat sebuah class yang disebut dengan istilah class Model atau Entity. Class ini merupakan representasi dari tabel-tabel yang ada di dalam database. Tujuan dari membuat class ini adalah agar kita bisa melakukan mapping (pemetaan) baris/row dari tabel menjadi kumpulan objek (object collection).</p>

<p>Pemetaan bisa dilakukan secara manual atau bisa juga secara otomatis dengan menggunakan tool-tool ORM dari pihak ketiga seperti <a href="http://coding4ever.net/blog/categories/dapper-net/">Dapper .NET</a> dan <a href="](http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a>. Untuk contoh kali ini kita menggunakan <a href="http://coding4ever.net/blog/categories/dapper-net/">Dapper .NET</a>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-05.png"></p>

<p>Setelah memahami apa itu class model dan bagaimana proses pemetaan record ke objek terjadi, langkah berikutnya adalah menambahkan class model Siswa yang mempunyai struktur sama persis dengan rancangan tabel di awal.</p>

<p>Untuk menambahkan class Model, klik kanan Project -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-06.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-07.png"></p>

<p>Kemudian lengkapi kode class Siswa, seperti gambar berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-08.png"></p>

<h3>Class DAO (Data Access Object)</h3>

<p>Class DAO adalah class yang bertugas untuk menangani operasi database yang dikenal dengan istilah operasi CRUD (Create, Read, Update dan Delete). Di dalam class inilah kita menuliskan perintah-perintah INSERT, UPDATE, DELETE dan SELECT. Sebagai contoh kode dibawah ini akan melakukan mapping (pemetaan) baris/row tabel menjadi kumpulan objek (object collection) secara otomatis.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-09.png"></p>

<p>Contoh pemanggilannya juga gampang :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-10.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-11.png"></p>

<h3>DataSet</h3>

<p>Dengan model data Push kita tidak langsung menghubungkan antara Crystal Reports dengan database, jadi sebagai solusinya kita menggunakan DataSet yang berfungsi sebagai tabel temporary dan menjadi sumber data bagi Crystal Reports.</p>

<p>Untuk menambahkan item DataSet, klik kanan Project -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-12.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-13.png"></p>

<p>Setelah menambahkan item DataSet (DsSiswa), langkah berikutnya adalah menambahkan item DataTable</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-14.png"></p>

<p>Kemudian input informasi DataTablenya seperti gambar berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-15.png"></p>

<p>Khusus untuk nama field dan tipe data dari DataTable yang kita buat, harus disesuaikan dengan nama field dan tipe data tabel.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-01.png"></p>

<h3>Crystal Reports</h3>

<p>Crystal Reports adalah tool yang kita gunakan untuk membuat laporan. Untuk menambahkan item Crystal Report, klik kanan Project -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-16.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-17.png"></p>

<p>Pilih &ldquo;As a Blank Report&rdquo; karena kita akan mendesain report secara manual.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-18.png"></p>

<p>Langkah berikutnya adalah menentukan sumber data yang kita arahkan ke item DataSet yang sudah kita buat pada langkah sebelumnya</p>

<p>Klik kanan Database Fields -> Database Expert …</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-19.png"></p>

<p>Pilih ADO.NET DataSet Siswa</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-20.png"></p>

<p>Drag satu-satu field siswa (nis, nama dan alamat) ke section detail, kemudian dirapikan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-21.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-22.png"></p>

<h3>Crystal Report Viewer</h3>

<p>Setelah semua persiapan selesai, langkah berikutnya adalah menambahkan Crystal Report Viewer yang berfungsi sebagai container untuk untuk menampilkan report.</p>

<p>Aktifkan form kemudian tambahkan Crystal Report Viewer</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-23.png"></p>

<p>Kemudian tambahkan kode berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-24.png"></p>

<p>Dari kode di atas kita bisa melihat tidak ada lagi kode untuk mengeset koneksi database dan perintah SQL yang akan dikirimkan. Cara ini sangat cocok digunakan ketika kita akan membangun sistem dengan arsitektur <a href="http://coding4ever.net/blog/2012/02/01/pembuatan-aplikasi-client-server-dengan-arsitektur-3-tier-part-1/">N-Tier</a>, di mana aplikasi klien sudah tidak terkoneksi lagi secara langsung ke database.</p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti gambar di bawah ini.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-25.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoCRPushModel">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog Lama Coding4ever Aktif Kembali]]></title>
    <link href="http://coding4ever.net/blog/2015/04/11/blog-lama-coding4ever-aktif-kembali/"/>
    <updated>2015-04-11T16:34:41+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/11/blog-lama-coding4ever-aktif-kembali</id>
    <content type="html"><![CDATA[<p>Blog lama coding4ever yang beralamat di <a href="http://coding4ever.wordpress.com/">http://coding4ever.wordpress.com/</a> saya aktifkan lagi dengan mode <strong>Read Only</strong> karena sudah banyak dokumentasi tanya jawabnya, agar pertanyaan yang sama tidak ditanyakan lagi di blog ini.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KR Pulsa Elektrik]]></title>
    <link href="http://coding4ever.net/blog/2014/11/06/kr-pulsa-elektrik/"/>
    <updated>2014-11-06T11:22:30+07:00</updated>
    <id>http://coding4ever.net/blog/2014/11/06/kr-pulsa-elektrik</id>
    <content type="html"><![CDATA[<p>Kangen juga udah lama enggak posting :D</p>

<p><img class="left" src="https://coding4ever.files.wordpress.com/2014/11/krpulsa12.png" width="120" height="100">Kali ini kita akan membahas aplikasi Android yang namanya <a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">KR Pulsa Elektrik</a>. Aplikasi ini digunakan untuk mempermudah transaksi penjualan pulsa, token PLN, pembayaran tagihan dan voucher game.</p>

<p>Aplikasi ini gratis dan 100% buatan saya :D, bisa dibilang sebagai pilot project untuk pengembangan project Android lainnya. Lumayan lah iseng-iseng berhadiah dolar :D.</p>

<!-- more -->


<p>Salah satu fitur andalan aplikasi ini adalah kemudahan dalam pembuatan format perintah yang bisa disesuaikan dengan format perintah masing-masing distributor pulsa.</p>

<p>Fitur andalan lainnya adalah tersedianya server data untuk mendownload data-data referensi seperti <em>data bank, format perintah, operator kartu, harga voucher</em> dan <em>sms center</em> masing-masing distributor, sehingga memudahkan Anda sebagai penjual pulsa untuk bisa langsung melakukan transaksi sesuai dengan pilihan distributor.</p>

<p>Aplikasi ini bisa Anda install secara langsung dengan mengakses link berikut menggunakan smartphone Android Anda.</p>

<p><a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik</a></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/krpulsa23.png"></p>

<p>Berikut cuplikan beberapa screenshoot <a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">KR Pulsa Elektrik</a>, untuk cara penggunaannya bisa Anda download di <a href="http://goo.gl/rV0AHP">sini</a>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/12.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/22.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/32.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/42.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/521.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/62.png"></p>

<p>Selamat <a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 8]]></title>
    <link href="http://coding4ever.net/blog/2014/06/08/entity-framework-part-8/"/>
    <updated>2014-06-08T10:21:10+07:00</updated>
    <id>http://coding4ever.net/blog/2014/06/08/entity-framework-part-8</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Melanjutkan kembali pembahasan tentang <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a>.</p>

<p>Misalkan kita mempunyai struktur tabel seperti gambar di bawah ini.</p>

<!-- more -->


<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/11.png"></p>

<p>Jika kita buatkan class entity dari ketiga tabel di atas, class diagramnya akan terlihat seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/21.png"></p>

<p>Dari gambar class diagram di atas, kita bisa melihat bahwa class <code>Siswa</code>, <code>Guru</code> dan <code>Pegawai</code> mempunyai beberapa property yang sama yaitu <code>Jalan</code>, <code>Kota</code>, <code>Provinsi</code> dan <code>KodePos</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/31.png"></p>

<p>Untuk alasan desain class entity yang lebih baik sebaiknya kita pisahkan property <code>Jalan</code>, <code>Kota</code>, <code>Provinsi</code> dan <code>KodePos</code> ke dalam class tersendiri, misal dengan nama class <code>Alamat</code>, kemudian masing-masing class entity <code>Siswa</code>, <code>Guru</code> dan <code>Pegawai</code> menambahkan property baru dengan tipe <code>class Alamat</code>, sehingga class diagram kita akan menjadi seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/41.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/10.png"></p>

<p>Nah class baru (Alamat) inilah yang akan menjadi pembahasan kita pada postingan kali ini yang dikenal dengan istilah <code>Complex Types</code> atau <code>Value Types</code>.</p>

<p>Sejak awal <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a> sudah mendukung <code>Complex Types</code> atau yang dikenal juga dengan istilah <code>value types</code>.</p>

<p><code>Complex Types</code> atau <code>value types</code> bisa digunakan sebagai tipe data dari sebuah property sehingga ada kemiripan dengan class entity biasa yang sudah kita kenal, yang disebut dengan istilah <code>entity types</code>.</p>

<p>Lalu di mana perbedaannya ?</p>

<p>Di dalam <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a> setiap <code>entity types</code> harus mempunyai <code>property key</code> sedangkan <code>complex types</code> tidak.</p>

<p>Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/51.png"></p>

<h3>Mendefinisikan Complex Types</h3>

<p>Setelah mengetahui perbedaan antara <code>entity types</code> dan <code>complex types</code> kita juga harus mengetahui aturan dalam membuat <code>complex types</code>.</p>

<p>Berikut aturan-aturan yang harus kita penuhi untuk membuat <code>complex types</code>.</p>

<ol>
<li><code>Complex types</code> tidak boleh mempunyai <code>property key</code>.</li>
<li>Semua property yang dimiliki <code>complex types</code> harus bertipe <a href="http://en.wikipedia.org/wiki/Primitive_data_type">primitif</a>.</li>
<li>Ketika digunakan sebagai tipe data oleh class lain, tidak boleh sebagai <code>collection type</code> harus <code>single
instance</code></li>
</ol>


<p>Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/62.png"></p>

<h3>Konfigurasi Mapping (pemetaan) Complex Types</h3>

<p>Untuk menyederhanakan contoh kode program, konfigurasi mapping (pemetaan) <code>complex types</code> di bawah ini menggunakan konfigurasi <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>. Saya sendiri lebih senang menggunakan konfigurasi <a href="http://msdn.microsoft.com/en-us/data/jj591617.aspx">Fluent API</a> dengan tujuan agar class entity kita tetap bersih dari atribut-atribut <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>.</p>

<p>Caranya adalah dengan mengedit class Alamat, kemudian menambahkan atribut <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/71.png"></p>

<p>Terakhir kita coba untuk mengakses property dengan tipe <code>complex types</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/81.png"></p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/91.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework8">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manajemen Proyek Menggunakan Redmine Bagian 1]]></title>
    <link href="http://coding4ever.net/blog/2014/06/02/manajemen-proyek-menggunakan-redmine-bagian-1/"/>
    <updated>2014-06-02T11:27:10+07:00</updated>
    <id>http://coding4ever.net/blog/2014/06/02/manajemen-proyek-menggunakan-redmine-bagian-1</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2014/06/redmine.png">Dalam pengembangan proyek, biasanya dibutuhkan aplikasi untuk mencatat hal-hal yang berhubungan dengan proyek yang sedang dikembangkan. Seperti daftar fitur, bug, dokumentasi dan seterusnya.</p>

<!-- more -->


<p>Selama ini ada beberapa aplikasi proyek manajemen yang biasa saya gunakan :</p>

<ul>
<li><a href="http://coding4ever.net/blog/2013/01/10/todo-list/">ToDo List</a> - Aplikasi berbasis windows yang gratis dan open source. Salah satu kekurangannya adalah aplikasi ini adalah aplikasi standalone, sehingga akan menyulitkan untuk mengelola proyek yang dikerjakan oleh tim.</li>
<li><a href="https://trello.com/">Trello</a> - Aplikasi berbasis web yang simple, gratis dan online. Ini adalah salah satu aplikasi andalan saya sampai saat ini.</li>
<li><a href="http://redmine.org/">Redmine</a> - Aplikasi berbasis web dengan fitur lengkap, gratis dan open source. Untuk menggunakan <a href="http://redmine.org/">Redmine</a> harus dilakukan instalasi terlebih dulu.</li>
</ul>


<p>Pada bagian pertama ini kita hanya akan membahas instalasi <a href="http://redmine.org/">Redmine</a> dengan target database <a href="http://dev.mysql.com/downloads/mysql/">MySQL</a>.</p>

<h3>Instalasi</h3>

<p><a href="http://redmine.org/">Redmine</a> adalah aplikasi proyek manajemen berbasis web yang dikembangkan menggunakan framework <code>Ruby on Rails</code>. Dukungan database pun lumayan banyak seperti <code>SQLite</code>, <code>MySQL</code>, <code>PostgreSQL</code> dan <code>SQL Server</code>.</p>

<p>Untuk menginstall aplikasi berbasis web yang dikembangkan menggunakan framework <code>Ruby on Rails</code> tentu berbeda dengan menginstall aplikasi berbasis web yang dikembangkan menggunakan <code>php</code>.</p>

<p>Untuk saat ini ada banyak tool yang mempermudah proses instalasi <a href="http://redmine.org/">Redmine</a> seperti <a href="http://www.helicontech.com/articles/installing-redmine-on-windows-in-production/">Web Platform Installer</a> dan <a href="http://bitnami.org/stack/redmine">BitNami Redmine Stack</a>. Tapi dipostingan kali ini kita akan melakukan instalasi secara manual.</p>

<p>Oke kita langsung saja, berikut adalah langkah-langkah instalasi <a href="http://redmine.org/">Redmine</a>.</p>

<h3>Prerequisites</h3>

<p>Hal-hal yang perlu kita siapkan sebelum masuk ke proses instalasi <a href="http://redmine.org/">Redmine</a>.</p>

<ul>
<li>Install <code>Ruby</code> dan <code>Development Kit</code>. Untuk mempermudah instalasi anda bisa menggunakan <a href="https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-2.2.3.exe">RailsInstaller</a> yang di dalamnya sudah diikutsertakan paket <code>Ruby</code> dan <code>Development Kit</code>.</li>
<li>Install <a href="http://dev.mysql.com/downloads/mysql/">MySQL</a>.</li>
<li><p>Download <a href="http://dev.mysql.com/downloads/connector/c/">MySQL Connector/C</a>, kemudian ekstrak ke folder <code>C:\mysql-connector</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/1.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/2.png"></p>

<p>kemudian copykan file <code>libmysql.dll</code> yang ada di folder <code>C:\mysql-connector\lib</code> ke folder <code>C:\RailsInstaller\Ruby1.9.3\bin</code></p></li>
<li><p>Install <a href="http://ftp.sunet.se/pub/multimedia/graphics/ImageMagick/binaries/ImageMagick-6.7.7-0-Q16-windows-dll.exe">ImageMagick</a> (optional).
Petunjuk instalasinya ada di<a href="http://www.redmine.org/projects/redmine/wiki/HowTo_install_rmagick_gem_on_Windows">sini</a>.
Tujuan menginstall library ini adalah agar laporan yang dihasilkan <a href="http://redmine.org/">Redmine</a> seperti <code>Gantt chart</code> bisa disimpan dalam format png dan pdf.</p></li>
</ul>


<h3>Instalasi Redmine</h3>

<ul>
<li><p>Download source code terakhir <a href="http://www.redmine.org/projects/redmine/wiki/Download">Redmine</a>, kemudian ekstrak ke folder yang sudah ditentukan misal <code>C:\Redmine</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/3.png"></p></li>
<li><p>Membuat database kosong dengan nama <code>redmine</code>
 <code>CREATE DATABASE redmine CHARACTER SET utf8;</code></p></li>
<li><p>Konfigurasi koneksi database</p>

<p>Copykan file <code>database.yml.example</code> yang ada di folder <code>config</code> ke folder yang sama dengan nama <code>database.yml</code>. Kemudian edit file <code>database.yml</code> menggunakan editor kesayangan anda setelah itu update informasi yang ada di bagian <code>production</code> (database, host, username dan password).</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>production:
</span><span class='line'>  adapter: mysql2
</span><span class='line'>  database: redmine
</span><span class='line'>  host: localhost
</span><span class='line'>  username: user_mysql
</span><span class='line'>  password: password_user_mysql</span></code></pre></td></tr></table></div></figure></p></li>
</ul>


<h4>Langkah-langkah berikut dijalankan melalui command prompt</h4>

<ul>
<li>Aktifkan command prompt</li>
<li><p>Set variabel environment CPATH dan LIBRARY_PATH ImageMagick (optional)
<code>set CPATH=C:\ImageMagick\include</code>  <br/>
<code>set LIBRARY_PATH=C:\ImageMagick\lib</code></p></li>
<li><p>Install library mysql
  <code>gem install mysql2 --platform=ruby -- '--with-mysql-dir="C:\mysql-connector"'</code></p></li>
<li><p>Install <a href="http://bundler.io/">bundler</a><br/>
  <code>gem install bundler</code></p></li>
<li><p>Install semua paket gem yang dibutuhkan   <br/>
  <code>bundle install --without development test</code></p></li>
<li><p>Mengenerate session store secret. Untuk menyimpan cookie dan variabel session        <br/>
  <code>rake generate_secret_token</code></p></li>
<li><p>Membuat objek database  <br/>
  <code>set RAILS_ENV=production</code>  <br/>
  <code>rake db:migrate</code></p></li>
<li><p>Set konfigurasi default  <br/>
  <code>set RAILS_ENV=production</code>  <br/>
  <code>set REDMINE_LANG=en</code>  <br/>
  <code>rake redmine:load_default_data</code></p></li>
</ul>


<p>Setelah instalasi selesai, kita bisa melakukan tes dengan mengetikan skrip berikut :
<code>ruby script/rails server webrick -e production</code></p>

<p>kemudian akses url : <code>http://localhost:3000/</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/5.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/6.png"></p>

<p>Login dengan user dan password <code>admin</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/7.png"></p>

<p>Sampai disini proses instalasi <a href="http://redmine.org/">Redmine</a> sudah berhasil :)</p>

<h3>Mendaftarkan service Redmine ke Windows Service</h3>

<p>Tentu enggak kren klo setiap ingin mengakses <a href="http://redmine.org/">Redmine</a>, kita harus selalu menjalankan skrip <code>ruby script/rails server webrick -e production</code>, jadi ada baiknya service Redminenya kita daftarkan sebagai service Windows.</p>

<p>Berikut langkah-langkah untuk mendaftarkan service <a href="http://redmine.org/">Redmine</a> sebagai Windows Service :</p>

<ul>
<li><p>Aktifkan command prompt kemudian ketik perintah berikut <br/>
  <code>gem install win32-service</code></p></li>
<li><p>Buat file dengan nama <code>service.rb</code> simpan di folder instalasi <code>redmine</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/8.png"></p>

<p>kemudian copas kode berikut :</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">REDMINE_DIR</span> <span class="o">=</span> <span class="s1">&#39;C:\redmine&#39;</span>
</span><span class='line'><span class="no">LOG_FILE</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">REDMINE_DIR</span><span class="si">}</span><span class="se">\\</span><span class="s2">log</span><span class="se">\\</span><span class="s2">service.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;win32/daemon&#39;</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Win32</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">RedmineService</span> <span class="o">&lt;</span> <span class="no">Daemon</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">service_init</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Initializing service </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@server_pid</span> <span class="o">=</span> <span class="no">Process</span><span class="o">.</span><span class="n">spawn</span> <span class="s1">&#39;ruby script/rails s -e production&#39;</span><span class="p">,</span> <span class="ss">:chdir</span> <span class="o">=&gt;</span> <span class="no">REDMINE_DIR</span><span class="p">,</span> <span class="ss">:err</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">service_main</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Service is running </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> with pid </span><span class="si">#{</span><span class="vi">@server_pid</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">while</span> <span class="n">running?</span>
</span><span class='line'>        <span class="nb">sleep</span> <span class="mi">10</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">service_stop</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Stopping server thread </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;taskkill /PID </span><span class="si">#{</span><span class="vi">@server_pid</span><span class="si">}</span><span class="s2"> /T /F&quot;</span>
</span><span class='line'>      <span class="no">Process</span><span class="o">.</span><span class="n">waitall</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Service stopped </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">exit!</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">RedmineService</span><span class="o">.</span><span class="n">mainloop</span>
</span><span class='line'>
</span><span class='line'><span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span><span class="s1">&#39;a+&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot; ***Daemon failure </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> exception=</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="se">\n</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">backtrace</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="vg">$/</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">raise</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li><p>Kembali lagi ke command prompt kemudian ketik perintah berikut
 <code>sc create Redmine binPath= "C:\RailsInstaller\Ruby1.9.3\bin\rubyw -C C:\redmine\ service.rb"</code></p></li>
<li><p>Jalankan service redmine <br/>
  <code>net start Redmine</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/9.png"></p></li>
</ul>


<p>Akhirnya selesai juga :), dan untuk langkah-langkah penggunaan <a href="http://redmine.org/">Redmine</a> insya Alloh akan kita bahas dilain kesempatan.</p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manajemen Password Menggunakan KeePass]]></title>
    <link href="http://coding4ever.net/blog/2014/05/21/manajemen-password-menggunakan-keepass/"/>
    <updated>2014-05-21T15:12:47+07:00</updated>
    <id>http://coding4ever.net/blog/2014/05/21/manajemen-password-menggunakan-keepass</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/05/keepass2.png">Hari ini kita dituntut untuk mengingat banyak password. Ada password Email, FTP, Facebook, Internet Banking, Remote Desktop dan lain sebagainya. Ditambah lagi pekerjaan kita sebagai <code>Software developer</code> berarti ada tambahan password lagi yang harus kita ingat seperti password SQL Server, MySQL, Firebird, Web hosting dan lain-lain.</p>

<!-- more -->


<p>Kita disarankan untuk menggunakan password yang berbeda untuk setiap user. Karena jika kita hanya menggunakan satu password untuk semuanya dan jika seseorang berhasil mendapatkan password kita, berarti kita mempunyai masalah&hellip; ya masalah yang serius, Anda bisa membayangkannya ? Orang tersebut akan memiliki akses ke akun email kita, facebook dan lain sebagainya.</p>

<p><a href="http://keepass.info/">KeePass</a> adalah aplikasi password manager gratis dan open source, yang membantu kita untuk mengelola password dengan cara yang aman. Kita bisa menyimpan semua password dalam satu database. Database ini sendiri dipassword dengan satu password master atau bisa juga dalam bentuk file kunci. Jadi kita hanya perlu mengingat satu password master atau menggunakan file kunci untuk membuka database.</p>

<p>Database <a href="http://keepass.info/">KeePass</a> dienkripsi menggunakan enkripsi yang terbaik dan paling aman untuk saat ini yaitu (<a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES</a> dan <a href="http://en.wikipedia.org/wiki/Twofish">Twofish</a>).</p>

<h3>Instalasi</h3>

<p>Langkah-langkah instalasi seperti berikut :</p>

<ol>
<li>Download <a href="http://keepass.info/download.html">KeePass</a></li>
<li>Lakukan instalasi, kita tinggal mengikuti langkah-langkah yang ada</li>
</ol>


<h3>Cara penggunaan</h3>

<p>Untuk menggunakan <a href="http://keepass.info/">KeePass</a> sangat mudah, berikut langkah-langkahnya :</p>

<ul>
<li>Jalankan aplikasi <a href="http://keepass.info/download.html">KeePass</a>, bisa melalui menu Start -> Programs -> KeePass 2 atau melalui desktop.</li>
<li>Hal pertama yang harus kita lakukan adalah membuat database <a href="http://keepass.info/download.html">KeePass</a>. Caranya dengan mengklik menu File -> New</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/31.png"></p>

<p>   Kemudian tentukan nama database misal <code>DbKeePass</code></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/41.png"></p>

<ul>
<li>Setelah itu kita diminta untuk menentukan password yang digunakan untuk membuka database <code>DbKeePass</code></li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/51.png"></p>

<p>   kemudian klik <code>OK</code> sekali lagi</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/6.png"></p>

<h3>Group Password</h3>

<p>Secara default <a href="http://keepass.info/">KeePass</a> sudah menyediakan beberapa group password seperti group password untuk <code>Windows</code>, <code>Network</code>, <code>Email</code> dan sebagainya.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/7.png"></p>

<p>Untuk menambahkan group baru, kita tinggal klik kanan pada node utama kemudian pilih Add Group</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/8.png"></p>

<p>Setelah itu kita inputkan nama group, misal <code>SQL Server</code></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/9.png"></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/10.png"></p>

<h3>Item Group</h3>

<p>Setelah semua group password yang diperlukan dibuat, berikutnya adalah menambahkan <code>user</code>, <code>password</code> dan <code>link URL</code> (jika halaman web) untuk masing-masing group password.</p>

<p>Misal kita akan menambahkan user dan password facebook di group Internet.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/111.png"></p>

<p>Caranya dengan memilih group Internet kemudian klik kanan area kosong di panel sebelah kanan kemudian pilih Add Entry&hellip;</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/12.png"></p>

<p>Setelah itu inputkan informasi <code>User Name</code>, <code>Password</code> dan <code>URL</code></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/13.png"></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/14.png"></p>

<p>Sampai disini kita bisa mengulangi langkah-langkah sebelumnya untuk mendaftarkan user name dan password lainnya.</p>

<h3>Plugin</h3>

<p><a href="http://keepass.info/">KeePass</a> mempunyai banyak sekali <a href="http://keepass.info/plugins.html">plugin</a> yang bermanfaat, salah satunya adalah <a href="https://github.com/pfn/passifox/">PassIFox</a>, plugin ini memudahkan kita untuk menginputkan secara otomatis <code>user</code> dan <code>password</code> ketika kita mengakses halaman web yang ada form user dan passwordnya.</p>

<p><a href="https://github.com/pfn/passifox/">PassIFox</a> khusus untuk browser <a href="http://www.mozilla.org/en-US/firefox/new/">Firefox</a>, bagi pengguna <a href="https://www.google.com/intl/en/chrome/browser/">Chrome</a> bisa menggunakan <a href="https://chrome.google.com/webstore/detail/chromeipass/ompiailgknfdndiefoaoiligalphfdae">ChromeIPass</a>.</p>

<p>Misal kita mengakses halaman web yang ada form user dan passwordnya seperti <a href="http://wordpress.com/">Wordpress</a>, setelah itu kita klik kanan di inputan <code>Username</code> atau <code>Password</code> kemudian pilih menu <code>Fill User &amp; Pass</code>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/11.png"></p>

<p>Secara otomatis user dan password akan diisikan sesuai dengan data user dan password yang ada pada database <a href="http://keepass.info/">KeePass</a>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/22.png"></p>

<p><a href="https://github.com/pfn/passifox/">PassIFox</a> sendiri membutuhkan plugin yang lain yaitu <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a>.</p>

<h3>Instalasi Plugin <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a> dan <a href="https://github.com/pfn/passifox/">PassIFox</a></h3>

<h4><a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a></h4>

<p>Berikut langkah-langkahnya :</p>

<ul>
<li>Jika aplikasi <a href="http://keepass.info/">KeePass</a> sedang dijalankan, tutup terlebih dulu.</li>
<li>Download <a href="https://passifox.appspot.com/KeePassHttp.plgx">KeePassHttp</a>.</li>
<li>Copykan ke folder instalasi KeePass.</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/15.png"></p>

<ul>
<li>Verifikasi apakah plugin <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a> sudah terinstall dengan benar melalui menu Tools -> Plugins</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/17.png"></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/18.png"></p>

<h4><a href="https://github.com/pfn/passifox/">PassIFox</a></h4>

<p>Setelah instalasi plugin <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a> berhasil, kita lanjutkan dengan menginstall plugin <a href="https://github.com/pfn/passifox/">PassIFox</a>. Adapun langkah-langkahnya seperti berikut :</p>

<ul>
<li>Jika aplikasi <a href="http://keepass.info/">KeePass</a> sedang dijalankan, tutup terlebih dulu.</li>
<li>Aktifkan <code>Firefox Add-ons Manager</code></li>
<li>Pada kota pencarian ketik <code>PassIFox</code></li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/16.png"></p>

<ul>
<li>Setelah instalasi <a href="https://github.com/pfn/passifox/">PassIFox</a>, restart Firefoxnya.</li>
</ul>


<h3>Konfigurasi plugin <a href="https://github.com/pfn/passifox/">PassIFox</a></h3>

<ul>
<li>Jalankan aplikasi <a href="http://keepass.info/">KeePass</a></li>
<li>Buka halaman website yang ada form loginnya misal <a href="https://www.facebook.com/">Facebook</a>, kemudian klik tombol <code>Connect</code> yang ada dipojok kanan atas</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/19.png"></p>

<ul>
<li>Akan tampil dialog konfirmasi, isikan <code>KeePassHttpKey</code> kemudian klik tombol Save</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/20.png"></p>

<p>Langkah-langkah konfigurasi ini hanya sekali saja setelah instalasi awal plugin <a href="https://github.com/pfn/passifox/">PassIFox</a>.</p>

<h3>Uji coba plugin <a href="https://github.com/pfn/passifox/">PassIFox</a></h3>

<ul>
<li>Jalankan aplikasi <a href="http://keepass.info/">KeePass</a></li>
<li>Buka halaman website yang ada form loginnya misal <a href="https://www.facebook.com/">Facebook</a></li>
<li>Akan tampil konfirmasi, jangan lupa untuk mencontreng pilihan <code>Remember this decision</code> agar kotak konfirmasi ini tidak tampil lagi ketika kita mengakses halaman  web yang sama.</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/211.png"></p>

<ul>
<li>Klik kanan inputan user atau password, kemudian pilih menu <code>Fill User &amp; Pass</code></li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/221.png"></p>

<p>dan secara otomatis user dan password akan diisikan sesuai dengan data user dan password yang ada pada database <a href="http://keepass.info/">KeePass</a>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/23.png"></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SMS Gateway Edisi .NET Part 1]]></title>
    <link href="http://coding4ever.net/blog/2014/05/10/sms-gateway-edisi-net-part-1/"/>
    <updated>2014-05-10T10:11:25+07:00</updated>
    <id>http://coding4ever.net/blog/2014/05/10/sms-gateway-edisi-net-part-1</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/05/sms_gateway.png">Postingan pertama di <a href="http://coding4ever.net">domain</a> yang baru :), saya ingin membahas lagi tentang pembuatan aplikasi SMS Gateway. Alasannya sederhana karna salah satu artikel yang paling banyak dibaca di blog ini adalah artikel <a href="http://coding4ever.net/blog/2010/07/12/membuat-sms-gateway-itu-gampang-jangan-dipersulit/">Membuat Sms Gateway Itu Gampang, Jangan Dipersulit !!!</a>.</p>

<p>Jika pada artikel <a href="http://coding4ever.net/blog/2010/07/12/membuat-sms-gateway-itu-gampang-jangan-dipersulit/">Membuat Sms Gateway Itu Gampang, Jangan Dipersulit !!!</a>, kita menggunakan bahasa pemrograman VB 6, untuk postingan kali ini kita akan menggunakan bahasa pemrograman C#.</p>

<!-- more -->


<p>Untuk membaca dan mengirim sms kita akan menggunakan library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a>, yang bisa diinstall via <a href="http://coding4ever.net/blog/categories/nuget/">NuGet</a>.</p>

<p>Sebelum lanjut kita lihat dulu fitur dari library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a> :</p>

<ul>
<li>Manage SMS messages: Send, read, delete, store, import and export messages, get memory status, get/set SMSC.</li>
<li>Manage the phonebook: Create, find, delete, read, import and export phonebook entries, get memory status.</li>
<li>Manage the phone: Read general info, reset configuration, enter PIN</li>
<li>Supports notifications about new messages as well as forwarding them directly to the application.</li>
<li>Detect phone connection/disconnection.</li>
<li>Other SMS message variants also possible, such as alerts and notifications.</li>
<li>Support for Smart Messaging and related messages to create, locate and recombine concatenated text messages, and also to create operator logo messages.</li>
<li>Logging support with 4 levels to assist in troubleshooting.</li>
<li>Support for GSM 7-bit default alphabet and Unicode for the message text.</li>
<li>Supports some operator functions.</li>
<li>Remoting support for sending SMS messages.</li>
<li>SMS batch mode for faster sending of multiple messages.</li>
<li>Execution of custom commands that are not directly supported.</li>
</ul>


<p>Keren bukan untuk ukuran library gratis :)</p>

<p>Pada postingan bagian pertama ini kita hanya akan membahas perintah-perintah dasar yang dibutuhkan untuk membuat aplikasi SMS Gateway, seperti <code>koneksi ke device modem atau hp</code>, <code>membaca sms masuk</code>, dan <code>mengirim sms</code>.</p>

<h3>Membuat Project</h3>

<p>Project yang kita gunakan adalah project berbasis Windows Form.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/1.png"></p>

<h3>Menambahkan Library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a> via <a href="http://coding4ever.net/blog/categories/nuget/">NuGet</a></h3>

<ul>
<li><p>Klik kanan node References -> Manage NuGet Packages &hellip;</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/21.png"></p></li>
<li><p>Pada tab Online pilih nuget.org, pada kotak pencarian ketik <code>gsm</code>, kemudian klik tombol <code>Install</code>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/3.png"></p></li>
</ul>


<p>kemudian tunggu sampai proses instalasi selesai.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/4.png"></p>

<p>Tutup dialog NuGet package, Kemudian cek node references, seharusnya ada empat library baru yang sudah ditambahkan yaitu <code>GSMCommServer</code>, <code>GSMCommShared</code>, <code>GSMCommunication</code> dan <code>PDUConverter</code>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/5.png"></p>

<p>Library <code>PDUConverter</code> bertanggung jawaban untuk melakukan proses <code>decoding</code> pesan sms, sedangkan yang bertugas untuk melakukan komunikasi ke modem atau hp adalah library <code>GSMCommunication</code>.</p>

<p>Untuk library <code>GSMCommServer</code> dan <code>GSMCommShared</code> hanya digunakan jika kita ingin mengaktifkan fitur <a href="http://coding4ever.net/blog/categories/dot-net-remoting/">.NET Remoting</a> untuk mengirim sms.</p>

<p>Setelah semua persiapan selesai, kita bisa langsung mencoba perintah-perintah dasar yang diperlukan untuk pembuatan aplikasi sms gateway.</p>

<h3>1. Konek ke device modem atau hp</h3>

<p>Untuk melakukan koneksi ke modem atau hp, ada beberapa tahapan yang harus kita lakukan :</p>

<ul>
<li>Membuat objek dari class GsmCommMain</li>
<li>Mendaftarkan method ke event <code>MessageReceived</code>, yang dikenal dengan istilah <a href="http://www.codeproject.com/Articles/11657/Understanding-Delegates-in-C">delegate</a>    method.</li>
<li>Memanggil method <code>Open</code>.</li>
</ul>


<p><strong>Membuat objek dari class GsmCommMain</strong></p>

<p>Misal kita akan membuat sebuah objek dari class GsmCommMain dengan nama <code>comm</code>, maka perintahnya yang digunakan adalah :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">port</span> <span class="p">=</span> <span class="s">&quot;COM1&quot;</span><span class="p">;</span> <span class="c1">// port yang digunakan menyesuaikan</span>
</span><span class='line'><span class="kt">var</span> <span class="n">baudRate</span> <span class="p">=</span> <span class="m">9600</span><span class="p">;</span>
</span><span class='line'><span class="kt">var</span> <span class="n">timeout</span> <span class="p">=</span> <span class="m">150</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">comm</span> <span class="p">=</span> <span class="k">new</span> <span class="n">GsmCommMain</span><span class="p">(</span><span class="n">port</span><span class="p">,</span> <span class="n">baudRate</span><span class="p">,</span> <span class="n">timeout</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Mendaftarkan method ke event <code>MessageReceived</code> yang dikenal dengan istilah <a href="http://www.codeproject.com/Articles/11657/Understanding-Delegates-in-C">delegate</a>    method</strong></p>

<p>Salah satu fitur keren yang dimiliki oleh library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a> adalah Event <code>MessageReceived</code>. Dengan adanya event ini kita tidak perlu menggunakan objek timer untuk mengecek apakah ada sms yang masuk.</p>

<p>Event ini tidak bisa kita akses secara langsung, yang perlu kita lakukan adalah membuat sebuah method kemudian mendaftarkannya ke event ini.</p>

<p>Contoh kita membuat sebuah method dengan nama <code>comm_MessageReceived</code>, method ini hanya akan menampilkan notifikasi sms masuk. Untuk selanjutnya method ini bisa kita kembangkan lagi, misal ketika ada sms masuk datanya langsung kita simpan ke database.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">comm_MessageReceived</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MessageReceivedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">obj</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="n">IndicationObject</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">obj</span> <span class="k">is</span> <span class="n">MemoryLocation</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">loc</span> <span class="p">=</span> <span class="p">(</span><span class="n">MemoryLocation</span><span class="p">)</span><span class="n">obj</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;New message received in storage \&quot;{0}\&quot;, index {1}.&quot;</span><span class="p">,</span>
</span><span class='line'>                                <span class="n">loc</span><span class="p">.</span><span class="n">Storage</span><span class="p">,</span> <span class="n">loc</span><span class="p">.</span><span class="n">Index</span><span class="p">);</span>
</span><span class='line'>        <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">obj</span> <span class="k">is</span> <span class="n">ShortMessage</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="p">(</span><span class="n">ShortMessage</span><span class="p">)</span><span class="n">obj</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">pdu</span> <span class="p">=</span> <span class="n">comm</span><span class="p">.</span><span class="n">DecodeReceivedMessage</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;New message received&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kemudian kita daftarkan ke event <code>MessageReceived</code> dengan perintah :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">comm</span><span class="p">.</span><span class="n">MessageReceived</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">MessageReceivedEventHandler</span><span class="p">(</span><span class="n">comm_MessageReceived</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>sehingga ketika ada sms yang masuk method <code>comm_MessageReceived</code> akan otomatis dipanggil.</p>

<p><strong>Memanggil method <code>Open</code></strong></p>

<p>Setelah langkah pertama dan kedua selesai dikerjakan kita bisa langsung memanggil method <code>Open</code> untuk melakukan koneksi ke modem atau hp.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">comm</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="p">(!</span><span class="n">comm</span><span class="p">.</span><span class="n">IsConnected</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msgResult</span> <span class="p">=</span> <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;No phone connected.&quot;</span><span class="p">,</span> <span class="s">&quot;Connection setup&quot;</span><span class="p">,</span>
</span><span class='line'>                                        <span class="n">MessageBoxButtons</span><span class="p">.</span><span class="n">RetryCancel</span><span class="p">,</span> <span class="n">MessageBoxIcon</span><span class="p">.</span><span class="n">Exclamation</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">msgResult</span> <span class="p">==</span> <span class="n">DialogResult</span><span class="p">.</span><span class="n">Cancel</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">comm</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">comm</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>        <span class="n">comm</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. Membaca SMS Masuk</h3>

<p>Method yang digunakan untuk membaca sms adalah method <code>ReadMessages</code>, method ini mempunyai dua parameter yaitu <code>PhoneMessageStatus</code> dan <code>Storage</code>.</p>

<p>Untuk <code>PhoneMessageStatus</code> pilihannya adalah : <code>ReceivedUnread</code>, <code>ReceivedRead</code>, <code>StoredUnsent</code>, <code>StoredSent</code> dan <code>All</code>. Sedangkan <code>Storage</code> pilihannya hanya dua yaitu : <code>SM</code> dan <code>ME</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">btnBacaSMS_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">messages</span> <span class="p">=</span> <span class="n">comm</span><span class="p">.</span><span class="n">ReadMessages</span><span class="p">(</span><span class="n">PhoneMessageStatus</span><span class="p">.</span><span class="n">All</span><span class="p">,</span> <span class="n">PhoneStorageType</span><span class="p">.</span><span class="n">Sim</span><span class="p">);</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">message</span> <span class="k">in</span> <span class="n">messages</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">data</span> <span class="p">=</span> <span class="p">(</span><span class="n">SmsDeliverPdu</span><span class="p">)</span><span class="n">message</span><span class="p">.</span><span class="n">Data</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">var</span> <span class="n">phoneNumber</span> <span class="p">=</span> <span class="n">data</span><span class="p">.</span><span class="n">OriginatingAddress</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="n">data</span><span class="p">.</span><span class="n">UserDataText</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">tanggal</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0:yyyy/MM/dd}&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">.</span><span class="n">SCTimestamp</span><span class="p">.</span><span class="n">ToDateTime</span><span class="p">());</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">jam</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0:HH:mm:ss}&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">.</span><span class="n">SCTimestamp</span><span class="p">.</span><span class="n">ToDateTime</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">lstDaftarSMS</span><span class="p">.</span><span class="n">Items</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0}, {1}, {2}, {3}&quot;</span><span class="p">,</span> <span class="n">tanggal</span><span class="p">,</span> <span class="n">jam</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">,</span> <span class="n">msg</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3. Mengirim SMS</h3>

<p>Untuk mengirim sms kita menggunakan method <code>SendMessage</code> yang membutuhkan objek <a href="http://en.wikipedia.org/wiki/Protocol_data_unit">pdu</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">btnKirimSMS_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="n">txtPesan</span><span class="p">.</span><span class="n">Text</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">phoneNumber</span> <span class="p">=</span> <span class="n">txtNoHp</span><span class="p">.</span><span class="n">Text</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">var</span> <span class="n">pdu</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SmsSubmitPdu</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">,</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">);</span>
</span><span class='line'>    <span class="n">comm</span><span class="p">.</span><span class="n">SendMessage</span><span class="p">(</span><span class="n">pdu</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kode di atas hanya bisa mengirim sms dengan jumlah karakter maksimal 160 karakter, jika ingin lebih kita harus merevisi kode di atas dengan menambahkan beberapa method baru yaitu <code>CreateConcatMessage</code> dan <code>SendMultiple</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="n">OutgoingSmsPdu</span><span class="p">[]</span> <span class="nf">CreateConcatMessage</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">,</span> <span class="kt">string</span> <span class="n">number</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">OutgoingSmsPdu</span><span class="p">[]</span> <span class="n">pdus</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pdus</span> <span class="p">=</span> <span class="n">SmartMessageFactory</span><span class="p">.</span><span class="n">CreateConcatTextMessage</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">number</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">catch</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">pdus</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">SendMultiple</span><span class="p">(</span><span class="n">OutgoingSmsPdu</span><span class="p">[]</span> <span class="n">pdus</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">num</span> <span class="p">=</span> <span class="n">pdus</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Send the created messages</span>
</span><span class='line'>        <span class="n">comm</span><span class="p">.</span><span class="n">EnableTemporarySmsBatchMode</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">foreach</span> <span class="p">(</span><span class="n">OutgoingSmsPdu</span> <span class="n">pdu</span> <span class="k">in</span> <span class="n">pdus</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">comm</span><span class="p">.</span><span class="n">SendMessage</span><span class="p">(</span><span class="n">pdu</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">catch</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Terakhir kode yang ada di method <code>btnKirimSMS_Click</code> juga harus di revisi :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">btnKirimSMS_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="n">txtPesan</span><span class="p">.</span><span class="n">Text</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">phoneNumber</span> <span class="p">=</span> <span class="n">txtNoHp</span><span class="p">.</span><span class="n">Text</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">Length</span> <span class="p">&gt;</span> <span class="m">160</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">pdus</span> <span class="p">=</span> <span class="n">CreateConcatMessage</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">pdus</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="n">SendMultiple</span><span class="p">(</span><span class="n">pdus</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">pdu</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SmsSubmitPdu</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">,</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">);</span>
</span><span class='line'>        <span class="n">comm</span><span class="p">.</span><span class="n">SendMessage</span><span class="p">(</span><span class="n">pdu</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yuph akhirnya selesai juga.</p>

<p>Selamat <a href="https://github.com/k4m4r82/SMSGatewayNET1">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 7]]></title>
    <link href="http://coding4ever.net/blog/2014/04/11/entity-framework-part-7/"/>
    <updated>2014-04-11T10:52:57+07:00</updated>
    <id>http://coding4ever.net/blog/2014/04/11/entity-framework-part-7</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Masih melanjutkan <a href="http://coding4ever.net/blog/2014/04/03/entity-framework-part-6/">postingan</a> sebelumnya, setelah data pembelian berhasil disimpan tentu suatu saat kita ingin menampilkan kembali data tersebut.</p>

<p>Sedikit berbeda dengan postingan yang di<a href="http://coding4ever.net/blog/2014/04/01/entity-framework-part-5/">sini</a>, saya sudah mendemokan bagaimana <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework </a>melakukan query dari sebuah tabel.</p>

<p>Sedangkan pada postingan kali ini, kita akan melihat bagaimana <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> melakukan query dari beberapa tabel sekaligus yang saling berhubungan.</p>

<p>Misal kita ingin menampilkan datanya dengan format seperti berikut :</p>

<!-- more -->


<p><a href="http://coding4ever.files.wordpress.com/2014/04/16.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/16.jpg" alt="1" /></a></p>

<p>Maka ada dua proses yang perlu kita lakukan :</p>

<ol>
<li><p> Mengambil data header (beli dan supplier)</p></li>
<li><p> Mengambil data detail (item beli dan barang)</p></li>
</ol>


<p>Untuk poin pertama, jika menggunakan query konvensional, perintah SQL SELECTnya seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span> <span class="n">Beli</span><span class="p">.</span><span class="n">Nota</span><span class="p">,</span> <span class="n">Beli</span><span class="p">.</span><span class="n">Tanggal</span><span class="p">,</span> <span class="n">Supplier</span><span class="p">.</span><span class="n">SupplierID</span><span class="p">,</span> <span class="n">Supplier</span><span class="p">.</span><span class="n">NamaSupplier</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Supplier</span> <span class="k">INNER</span> <span class="k">JOIN</span> <span class="n">Beli</span> <span class="k">ON</span> <span class="n">Supplier</span><span class="p">.</span><span class="n">SupplierID</span> <span class="o">=</span> <span class="n">Beli</span><span class="p">.</span><span class="n">SupplierID</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">Beli</span><span class="p">.</span><span class="n">Nota</span> <span class="o">=</span> <span class="s1">&#39;N001&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://coding4ever.files.wordpress.com/2014/04/21.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/21.jpg" alt="2" /></a></p>

<p>Sedangkan poin kedua perintahnya seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span> <span class="n">Barang</span><span class="p">.</span><span class="n">BarangID</span><span class="p">,</span> <span class="n">Barang</span><span class="p">.</span><span class="n">NamaBarang</span><span class="p">,</span> <span class="n">ItemBeli</span><span class="p">.</span><span class="n">Jumlah</span><span class="p">,</span> <span class="n">ItemBeli</span><span class="p">.</span><span class="n">HargaBeli</span><span class="p">,</span> <span class="n">ItemBeli</span><span class="p">.</span><span class="n">HargaJual</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Barang</span> <span class="k">INNER</span> <span class="k">JOIN</span> <span class="n">ItemBeli</span> <span class="k">ON</span> <span class="n">Barang</span><span class="p">.</span><span class="n">BarangID</span> <span class="o">=</span> <span class="n">ItemBeli</span><span class="p">.</span><span class="n">BarangID</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">ItemBeli</span><span class="p">.</span><span class="n">Nota</span> <span class="o">=</span> <span class="s1">&#39;N001&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://coding4ever.files.wordpress.com/2014/04/31.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/31.jpg" alt="3" /></a></p>

<p>Selanjutnya kita tinggal implementasikan dalam bentuk kode program (menggunakan ADO.NET) dengan membuat dua buah method masing-masing dengan nama <code>GetPembelianUsingADONET</code> dan <code>GetDetailPembelian</code>.</p>

<p>Method <code>GetPembelianUsingADONET</code> akan mengeksekusi query pertama sedangkan query kedua akan dieksekusi oleh method <code>GetDetailPembelian</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">Beli</span> <span class="nf">GetPembelianUsingADONET</span><span class="p">(</span><span class="kt">string</span> <span class="n">nota</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Beli</span> <span class="n">beli</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ambil data header</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;SELECT Beli.Nota, Beli.Tanggal, Supplier.SupplierID, Supplier.NamaSupplier</span>
</span><span class='line'><span class="s">                    FROM Supplier INNER JOIN Beli ON Supplier.SupplierID = Beli.SupplierID</span>
</span><span class='line'><span class="s">                    WHERE Beli.Nota = @1&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">nota</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">dtr</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">dtr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="c1">// mapping record ke objek supplier</span>
</span><span class='line'>                    <span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SupplierID</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">NamaSupplier</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">]</span>
</span><span class='line'>                    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>                    <span class="c1">// mapping record ke objek beli</span>
</span><span class='line'>                    <span class="n">beli</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Beli</span><span class="p">();</span>
</span><span class='line'>                    <span class="n">beli</span><span class="p">.</span><span class="n">Nota</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Nota&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Nota&quot;</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">beli</span><span class="p">.</span><span class="n">Tanggal</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Tanggal&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">MinValue</span> <span class="p">:</span> <span class="p">(</span><span class="n">DateTime</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Tanggal&quot;</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">beli</span><span class="p">.</span><span class="n">Supplier</span> <span class="p">=</span> <span class="n">supplier</span><span class="p">;</span> <span class="c1">// hubungkan objek supplier dan beli</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">beli</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// ambil data detail</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">daftarItemBeli</span> <span class="p">=</span> <span class="n">GetDetailPembelian</span><span class="p">(</span><span class="n">nota</span><span class="p">,</span> <span class="n">conn</span><span class="p">);</span>
</span><span class='line'>            <span class="n">beli</span><span class="p">.</span><span class="n">ItemBelis</span> <span class="p">=</span> <span class="n">daftarItemBeli</span><span class="p">;</span> <span class="c1">// hubungkan objek beli dg detail beli</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">beli</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">IList</span><span class="p">&lt;</span><span class="n">ItemBeli</span><span class="p">&gt;</span> <span class="n">GetDetailPembelian</span><span class="p">(</span><span class="kt">string</span> <span class="n">nota</span><span class="p">,</span> <span class="n">SqlConnection</span> <span class="n">conn</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">daftarItemBeli</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">ItemBeli</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;SELECT Barang.BarangID, Barang.NamaBarang, ItemBeli.Jumlah, ItemBeli.HargaBeli, ItemBeli.HargaJual</span>
</span><span class='line'><span class="s">                FROM Barang INNER JOIN ItemBeli ON Barang.BarangID = ItemBeli.BarangID</span>
</span><span class='line'><span class="s">                WHERE ItemBeli.Nota = @1&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">nota</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">dtr</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">while</span> <span class="p">(</span><span class="n">dtr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// mapping record ke objek barang</span>
</span><span class='line'>                <span class="kt">var</span> <span class="n">barang</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Barang</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">BarangID</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;BarangID&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;BarangID&quot;</span><span class="p">],</span>
</span><span class='line'>                    <span class="n">NamaBarang</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaBarang&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaBarang&quot;</span><span class="p">]</span>
</span><span class='line'>                <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// mapping record ke objek item beli</span>
</span><span class='line'>                <span class="kt">var</span> <span class="n">itemBeli</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ItemBeli</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">Barang</span> <span class="p">=</span> <span class="n">barang</span><span class="p">,</span> <span class="c1">// hubungkan barang dg item beli</span>
</span><span class='line'>                    <span class="n">Jumlah</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jumlah&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jumlah&quot;</span><span class="p">],</span>
</span><span class='line'>                    <span class="n">HargaBeli</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;HargaBeli&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;HargaBeli&quot;</span><span class="p">],</span>
</span><span class='line'>                    <span class="n">HargaJual</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;HargaJual&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;HargaJual&quot;</span><span class="p">]</span>
</span><span class='line'>                <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">daftarItemBeli</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">itemBeli</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">daftarItemBeli</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Untuk mencoba kode di atas gunakan kode berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">beli</span> <span class="p">=</span> <span class="n">GetPembelianUsingADONET</span><span class="p">(</span><span class="s">&quot;N001&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Nota : {0}\nTanggal : {1}\nSupplier : {2}&quot;</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">beli</span><span class="p">.</span><span class="n">Nota</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">Tanggal</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">Supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\nItem Beli :&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ekstrak item beli</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">beli</span><span class="p">.</span><span class="n">ItemBelis</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Barang : {0}, Jumlah : {1}, Harga Jual : {2}&quot;</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">item</span><span class="p">.</span><span class="n">Barang</span><span class="p">.</span><span class="n">NamaBarang</span><span class="p">,</span> <span class="n">item</span><span class="p">.</span><span class="n">Jumlah</span><span class="p">,</span> <span class="n">item</span><span class="p">.</span><span class="n">HargaJual</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\nPress any key to exit ...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">ReadKey</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Jika kode di atas dijalankan akan menghasilkan output seperti <a href="http://coding4ever.files.wordpress.com/2014/04/16.jpg">gambar pertama</a>.</p>

<p>Trus bagaimana dengan <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> ?</p>

<p>Tool <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> seperti <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a>, dibuat untuk memudahkan hidup kita sebagai pengembang aplikasi. Hidup ini sudah susah kenapa harus dipersulit :D</p>

<p>Oke, kita akan tulis ulang kode di atas menggunakan <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">Beli</span> <span class="nf">GetPembelianUsingEF</span><span class="p">(</span><span class="kt">string</span> <span class="n">nota</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Beli</span> <span class="n">beli</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">beli</span> <span class="p">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Belis</span>
</span><span class='line'>                 <span class="p">.</span><span class="n">Include</span><span class="p">(</span><span class="n">bl</span> <span class="p">=&gt;</span> <span class="n">bl</span><span class="p">.</span><span class="n">Supplier</span><span class="p">)</span>
</span><span class='line'>                 <span class="p">.</span><span class="n">Include</span><span class="p">(</span><span class="n">bl</span> <span class="p">=&gt;</span> <span class="n">bl</span><span class="p">.</span><span class="n">ItemBelis</span><span class="p">.</span><span class="n">Select</span><span class="p">(</span><span class="n">ib</span> <span class="p">=&gt;</span> <span class="n">ib</span><span class="p">.</span><span class="n">Barang</span><span class="p">))</span>
</span><span class='line'>                 <span class="p">.</span><span class="n">Where</span><span class="p">(</span><span class="n">bl</span> <span class="p">=&gt;</span> <span class="n">bl</span><span class="p">.</span><span class="n">Nota</span> <span class="p">==</span> <span class="n">nota</span><span class="p">)</span>
</span><span class='line'>                 <span class="p">.</span><span class="n">SingleOrDefault</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">beli</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Gimana lebih simple bukan ? :)</p>

<p>Dan ingat &hellip;</p>

<blockquote><p>Semakin sedikit kode yang kita tulis, semakin sedikit juga <strong><em>bug</em></strong> yang dihasilkan dan semakin sedikit kode yang kita tulis, semakin mudah juga untuk melakukan <strong><em>maintenance</em></strong>.</p></blockquote>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework7">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 6]]></title>
    <link href="http://coding4ever.net/blog/2014/04/03/entity-framework-part-6/"/>
    <updated>2014-04-03T10:17:31+07:00</updated>
    <id>http://coding4ever.net/blog/2014/04/03/entity-framework-part-6</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Pada <a href="http://coding4ever.net/blog/2014/04/01/entity-framework-part-5/">postingan</a> sebelumnya kita sudah membahas bagaimana <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> menangani sebuah tabel tunggal. Pada kenyataannya hampir semua aplikasi database menggunakan lebih dari satu tabel dan tentunya diantara tabel ini juga mempunyai hubungan (relasi).</p>

<p>Di postingan kali ini kita akan membahas bagaimana <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> menangani dua buah tabel yang saling berhubungan yaitu <em>Beli</em> dan <em>ItemBeli.</em></p>

<!-- more -->


<p><a href="http://coding4ever.files.wordpress.com/2014/04/4.png"><img src="http://coding4ever.files.wordpress.com/2014/04/4.png" alt="4" /></a></p>

<p>Untuk tabel Supplier dan Barang kita abaikan dulu walaupun kedua tabel ini juga terhubung ke tabel Beli dan ItemBeli.</p>

<p>Proses pembelian di dalam sebuah aplikasinya biasa masuk ke dalam modul transaksi. Ada sebuah proses yang penting ketika akan menyimpan data berupa transaksi, apalagi jika data tersebut saling berhubungan.</p>

<p>Proses ini dikenal dengan istilah <em><a href="http://en.wikipedia.org/wiki/Database_transaction">transaction</a>,</em> dan salah satu poin pentingnya adalah <a href="http://en.wikipedia.org/wiki/Atomicity_%28database_systems%29"><em>atomic</em></a>, yaitu beberapa perintah dianggap sebagai satu kesatuan. Kalau satu gagal, yang lain harus dibatalkan. Contoh pada saat transaksi pembelian proses yang terjadi adalah :</p>

<ol>
<li><p> Insert 1 kali ke tabel Beli</p></li>
<li><p> Insert n kali ke tabel ItemBeli</p></li>
<li><p> Menambah stok barang (tidak di bahas di postingan ini), karena bisa juga diselesaikan dengan database <a href="http://en.wikipedia.org/wiki/Database_trigger">trigger</a></p></li>
</ol>


<p>Ketika insert ke tabel ItemBeli gagal, maka tabel Belinya juga harus di batalkan (undo), klo enggak ya datanya jadi enggak konsisten dong, ada nota Beli yang enggak ada item belinya.</p>

<p>Nah kabar gembiranya <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> secara default sudah mendukung <em><a href="http://en.wikipedia.org/wiki/Database_transaction">transaction</a>.</em></p>

<p>Untuk membuat class entity Barang dan ItemBeli berikut class mappingnya sudah tidak dibahas lagi disini, karena saya menggunakan <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a>.</p>

<p>Sebelum kita lanjut ke pembahasan kode program, kita lihat dulu class entity diagram ke empat tabel di atas.<a href="http://coding4ever.files.wordpress.com/2014/04/12.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/12.jpg" alt="1" /></a></p>

<p><strong>Independent association dan Foreign key association</strong></p>

<p>Hubungan dua buah entity atau lebih dikenal dengan istilah asosiasi (association). Asosiasi ini mencakup <em>one-to-one, one-to-many</em> dan <em>many-to-many</em>.</p>

<p>Dari sisi pemrograman Entity Framework, diperkenalkan lagi dua jenis asosiasi. Yang pertama dikenal dengan istilah <a href="http://www.ladislavmrnka.com/2011/05/foreign-key-vs-independent-associations-in-ef-4/"><em>independent association</em></a>, asosiasi ini sudah diperkenalkan sejak Entity Framework versi awal, dan untuk memudahkan kita sebagai pengembang aplikasi, mulai Entity Framework versi 4, tim Entity Framework menambahkan asosiasi kedua yaitu <em><a href="http://www.ladislavmrnka.com/2011/05/foreign-key-vs-independent-associations-in-ef-4/">foreign key association</a></em>.</p>

<p>Dari kedua asosiasi di atas, implementasi <em>foreign key association</em> lebih disarankan dibandingkan <em>independent association</em>, sehingga untuk kode Entity Framework di bawah ini kita juga menggunakan <em>foreign key association</em> :D.</p>

<p>Untuk informasi lebih lanjut mengenai <em>Independent association</em> dan <em>Foreign key association</em> bisa merujuk ke referensi berikut :</p>

<ul>
<li><p><a href="http://it-ebooks.info/book/1619/">Entity Framework 4 in Action</a></p></li>
<li><p><a href="http://it-ebooks.info/book/613/">Programming Entity Framework, 2nd Edition</a></p></li>
<li><p><a href="http://www.ladislavmrnka.com/2011/05/foreign-key-vs-independent-associations-in-ef-4/">Foreign key vs. Independent associations in EF 4</a></p></li>
</ul>


<p>Seperti <a href="http://coding4ever.net/blog/2014/04/01/entity-framework-part-5/">postingan</a> sebelumnya, saya akan menuliskan 2 versi kode sebagai bahan perbandingan yaitu menggunakan ADO.NET secara langsung dan Entity Framework.</p>

<p>Nama method yang akan kita gunakan untuk menambahkan data beli berikut itemnya adalah <em>AddPembelian</em>. Method ini akan menambahkan data di dua tabel sekaligus (Beli dan ItemBeli), sehingga sangat disarankan menggunakan database <em><a href="http://en.wikipedia.org/wiki/Database_transaction">transaction</a>.</em></p>

<p>Untuk ADO.NET fitur <em><a href="http://en.wikipedia.org/wiki/Database_transaction">transaction</a></em> harus ditambahkan secara manual, sedangkan Entity Framework secara default sudah menerapkan fitur <em><a href="http://en.wikipedia.org/wiki/Database_transaction">transaction</a>.</em></p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">AddPembelianUsingADONET</span><span class="p">(</span><span class="n">Beli</span> <span class="n">beli</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// mulai transaksi</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">transaction</span> <span class="p">=</span> <span class="n">conn</span><span class="p">.</span><span class="n">BeginTransaction</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;INSERT INTO Beli (Nota, SupplierID, Tanggal, Keterangan)</span>
</span><span class='line'><span class="s">                        VALUES (@1, @2, @3, @4)&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// insert ke tabel beli</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">,</span> <span class="n">transaction</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">Nota</span><span class="p">);</span>
</span><span class='line'>                <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@2&quot;</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">SupplierID</span><span class="p">);</span>
</span><span class='line'>                <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@3&quot;</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">Tanggal</span><span class="p">);</span>
</span><span class='line'>                <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@4&quot;</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">Keterangan</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">result</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;INSERT INTO ItemBeli (Nota, BarangID, Jumlah, HargaBeli, HargaJual)</span>
</span><span class='line'><span class="s">                    VALUES (@1, @2, @3, @4, @5)&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// insert ke tabel item beli sebanyak n item</span>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">item</span> <span class="k">in</span> <span class="n">beli</span><span class="p">.</span><span class="n">ItemBelis</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">,</span> <span class="n">transaction</span><span class="p">))</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">beli</span><span class="p">.</span><span class="n">Nota</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@2&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">.</span><span class="n">BarangID</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@3&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">.</span><span class="n">Jumlah</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@4&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">.</span><span class="n">HargaBeli</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@5&quot;</span><span class="p">,</span> <span class="n">item</span><span class="p">.</span><span class="n">HargaJual</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">result</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// transaksi selesai</span>
</span><span class='line'>            <span class="c1">// simpan perubahan secara permanen</span>
</span><span class='line'>            <span class="n">transaction</span><span class="p">.</span><span class="n">Commit</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">result</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="c1">// status transaksi berhasil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">catch</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework</strong></p>

<p>Menggunakan Entity Framework ternyata sangat mudah, coba lihat kode berikut setara dengan kode ADO.NET di atas :)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">AddPembelianUsingEF</span><span class="p">(</span><span class="n">Beli</span> <span class="n">beli</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">try</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">db</span><span class="p">.</span><span class="n">Entry</span><span class="p">(</span><span class="n">beli</span><span class="p">).</span><span class="n">State</span> <span class="p">=</span> <span class="n">EntityState</span><span class="p">.</span><span class="n">Added</span><span class="p">;</span>
</span><span class='line'>            <span class="n">db</span><span class="p">.</span><span class="n">SaveChanges</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">result</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">catch</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="c1">// buat objek item beli (3 objek)</span>
</span><span class='line'><span class="kt">var</span> <span class="n">item1</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ItemBeli</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">BarangID</span> <span class="p">=</span> <span class="s">&quot;BB-7421&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Jumlah</span> <span class="p">=</span> <span class="m">5</span><span class="p">,</span>
</span><span class='line'>    <span class="n">HargaBeli</span> <span class="p">=</span> <span class="m">54</span><span class="p">,</span>
</span><span class='line'>    <span class="n">HargaJual</span> <span class="p">=</span> <span class="m">60</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">item2</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ItemBeli</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">BarangID</span> <span class="p">=</span> <span class="s">&quot;BB-8107&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Jumlah</span> <span class="p">=</span> <span class="m">7</span><span class="p">,</span>
</span><span class='line'>    <span class="n">HargaBeli</span> <span class="p">=</span> <span class="m">101</span><span class="p">,</span>
</span><span class='line'>    <span class="n">HargaJual</span> <span class="p">=</span> <span class="m">110</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">item3</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ItemBeli</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">BarangID</span> <span class="p">=</span> <span class="s">&quot;BK-M18B-44&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Jumlah</span> <span class="p">=</span> <span class="m">10</span><span class="p">,</span>
</span><span class='line'>    <span class="n">HargaBeli</span> <span class="p">=</span> <span class="m">540</span><span class="p">,</span>
</span><span class='line'>    <span class="n">HargaJual</span> <span class="p">=</span> <span class="m">693</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// buat objek beli</span>
</span><span class='line'><span class="kt">var</span> <span class="n">beli</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Beli</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Nota</span> <span class="p">=</span> <span class="s">&quot;N001&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">SupplierID</span> <span class="p">=</span> <span class="m">3</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Tanggal</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Keterangan</span> <span class="p">=</span> <span class="s">&quot;Transaksi beli menggunakan Entity Framework&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// tambahkan item beli ke objek beli</span>
</span><span class='line'><span class="n">beli</span><span class="p">.</span><span class="n">ItemBelis</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">item1</span><span class="p">);</span>
</span><span class='line'><span class="n">beli</span><span class="p">.</span><span class="n">ItemBelis</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">item2</span><span class="p">);</span>
</span><span class='line'><span class="n">beli</span><span class="p">.</span><span class="n">ItemBelis</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">item3</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="n">AddPembelianUsingEF</span><span class="p">(</span><span class="n">beli</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\nStatus transaksi : {0}&quot;</span><span class="p">,</span> <span class="n">result</span> <span class="p">==</span> <span class="m">1</span> <span class="p">?</span> <span class="s">&quot;Sukses&quot;</span> <span class="p">:</span> <span class="s">&quot;Gagal&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://coding4ever.files.wordpress.com/2014/04/13.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/13.jpg" alt="1" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/04/2.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/2.jpg" alt="2" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/04/3.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/3.jpg" alt="3" /></a></p>

<p>Tabel Beli terhubung dengan tabel Supplier, sehingga Supplier dengan ID 3 harus sudah ada di tabel Supplier. Begitu juga dengan table ItemBeli yang terhubung dengan tabel Barang, sehingga Barang dengan ID BB-7421, BB-8107 dan BK-M18B-44 juga harus ada di tabel Barang.</p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework6">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 5]]></title>
    <link href="http://coding4ever.net/blog/2014/04/01/entity-framework-part-5/"/>
    <updated>2014-04-01T09:53:25+07:00</updated>
    <id>http://coding4ever.net/blog/2014/04/01/entity-framework-part-5</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Setelah selesai melakukan mapping, baik secara <a href="http://coding4ever.net/blog/2014/03/21/entity-framework-part-2/">manual</a> atau menggunakan tool seperti <a href="http://coding4ever.net/blog/2014/03/26/entity-framework-part-3/">ADO.NET Entity Data Model Designer</a> dan <a href="http://coding4ever.net/blog/2014/03/27/entity-framework-part-4/">Entity Framework Power Tools</a>, kita bisa langsung mencoba method-method dasar aplikasi database yang dikenal dengan istilah method <a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> seperti Save, Update, Delete dan Get.</p>

<p>Ingat tujuan kita menggunakan <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> seperti <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> dalam pengembangan aplikasi database adalah agar kita tidak  lagi berhubungan secara langsung dengan database berikut objek-objeknya seperti tabel, view dan objek database lainnya, sehingga bisa lebih fokus ke aturan bisnis dari aplikasi yang sedang dikembangkan.</p>

<!-- more -->


<p>Dalam paradigma <a href="http://www.google.co.id/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0CCYQFjAA&amp;url=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FObject-oriented_programming&amp;ei=YOk0U--cLsS_rgfhqICQBg&amp;usg=AFQjCNHESpDSeAXQKCKWdjccXfDywTnxtg&amp;bvm=bv.63808443,d.bmk">OOP</a>, semuanya adalah objek. Saya, Anda, Customer, Supplier, Product adalah objek.</p>

<p>Ada beberapa keuntungan yang kita dapatkan ketika berhubungan dengan class dan objek :</p>

<ul>
<li><p>Persistence ignorance - Kita tidak perlu lagi khawatir bagaimana data disimpan ataupun media yang digunakan.</p></li>
<li><p>Strong typing - Kita tidak perlu lagi melakukan konversi secara manual untuk setiap tipe data kolom/field yang ada di dalam sebuah tabel ketika ingin mengambil nilainya.</p></li>
<li><p>Compile-time checking - Class mempunyai daftar property, jika kita mengetikkan nama property yang salah, secara langsung akan mendapatkan kompilasi error. Sehingga tidak perlu menjalankan aplikasi untuk mengetahui kesalahan penulisan kode.</p></li>
<li><p>Ease of development - Editor kode seperti Visual Studio mempunyai fitur IntelliSense untuk mempercepat proses pengembangan aplikasi. IntelliSense memberikan petunjuk kepada pengembang aplikasi tentang daftar property, event dan method yang dimiliki oleh sebuah class. Tetapi jika kita menggunakan DataSet atau DataReader, fitur IntelliSense jadi tidak berfungsi karena penulisan nama field/kolom berbasis teks (string).</p></li>
</ul>


<p>Di bawah ini kita akan membandingkan pembuatan method-method <a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> menggunakan library ADO.NET secara langsung dan menggunakan Entity Framework.</p>

<p>Adapun sebagai targetnya adalah tabel Supplier yang diwakili oleh class Supplier.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/04/1.jpg"><img src="http://coding4ever.files.wordpress.com/2014/04/1.jpg" alt="1" /></a></p>

<p><strong>1. Save - Untuk menambahkan data baru</strong></p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">SaveUsingADONET</span><span class="p">(</span><span class="n">Supplier</span> <span class="n">supplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;INSERT INTO Supplier (NamaSupplier, Jalan, Kota)</span>
</span><span class='line'><span class="s">                    VALUES (@1, @2, @3)&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@2&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">Jalan</span><span class="p">);</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@3&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">Kota</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">result</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework (EF)
</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">SaveUsingEF</span><span class="p">(</span><span class="n">Supplier</span> <span class="n">supplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">db</span><span class="p">.</span><span class="n">Entry</span><span class="p">(</span><span class="n">supplier</span><span class="p">).</span><span class="n">State</span> <span class="p">=</span> <span class="n">EntityState</span><span class="p">.</span><span class="n">Added</span><span class="p">;</span>
</span><span class='line'>        <span class="n">db</span><span class="p">.</span><span class="n">SaveChanges</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">result</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dari dua method di atas, kita bisa melihat bahwa method Save menggunakan Entity Framework (EF) lebih sederhana sehingga mengurangi kesalahan dalam penulisan kode dibandingkan dengan menggunakan ADO.NET secara langsung. Kita tidak lagi menuliskan perintah SQL INSERT yang masih berbasis teks (string).</p>

<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="c1">// buat objek supplier</span>
</span><span class='line'><span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NamaSupplier</span> <span class="p">=</span> <span class="s">&quot;Morgan Bike Accessories&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Jalan</span> <span class="p">=</span> <span class="s">&quot;6387 Scenic Avenue&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Kota</span> <span class="p">=</span> <span class="s">&quot;Bothell&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">result1</span> <span class="p">=</span> <span class="n">SaveUsingADONET</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span><span class='line'><span class="kt">var</span> <span class="n">result2</span> <span class="p">=</span> <span class="n">SaveUsingEF</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>2. Update - Untuk mengupdate data
</strong></p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">UpdateUsingADONET</span><span class="p">(</span><span class="n">Supplier</span> <span class="n">supplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;UPDATE Supplier SET NamaSupplier = @1, Jalan = @2, Kota = @3</span>
</span><span class='line'><span class="s">                    WHERE SupplierID = @4&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@2&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">Jalan</span><span class="p">);</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@3&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">Kota</span><span class="p">);</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@4&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">SupplierID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">result</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework (EF)
</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">UpdateUsingEF</span><span class="p">(</span><span class="n">Supplier</span> <span class="n">supplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">db</span><span class="p">.</span><span class="n">Entry</span><span class="p">(</span><span class="n">supplier</span><span class="p">).</span><span class="n">State</span> <span class="p">=</span> <span class="n">EntityState</span><span class="p">.</span><span class="n">Modified</span><span class="p">;</span>
</span><span class='line'>        <span class="n">db</span><span class="p">.</span><span class="n">SaveChanges</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">result</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="c1">// buat objek supplier</span>
</span><span class='line'><span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SupplierID</span> <span class="p">=</span> <span class="m">34</span><span class="p">,</span>
</span><span class='line'>    <span class="n">NamaSupplier</span> <span class="p">=</span> <span class="s">&quot;Morgan Bike Accessories&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Jalan</span> <span class="p">=</span> <span class="s">&quot;6387 Scenic Avenue&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Kota</span> <span class="p">=</span> <span class="s">&quot;Bothell&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">result1</span> <span class="p">=</span> <span class="n">UpdateUsingADONET</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span><span class='line'><span class="kt">var</span> <span class="n">result2</span> <span class="p">=</span> <span class="n">UpdateUsingEF</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>3. Delete - Untuk menghapus data
</strong></p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">DeleteUsingADONET</span><span class="p">(</span><span class="n">Supplier</span> <span class="n">supplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;DELETE FROM Supplier</span>
</span><span class='line'><span class="s">                    WHERE SupplierID = @1&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">SupplierID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">result</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteNonQuery</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework (EF)
</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="kt">int</span> <span class="nf">DeleteUsingEF</span><span class="p">(</span><span class="n">Supplier</span> <span class="n">supplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">db</span><span class="p">.</span><span class="n">Entry</span><span class="p">(</span><span class="n">supplier</span><span class="p">).</span><span class="n">State</span> <span class="p">=</span> <span class="n">EntityState</span><span class="p">.</span><span class="n">Deleted</span><span class="p">;</span>
</span><span class='line'>        <span class="n">db</span><span class="p">.</span><span class="n">SaveChanges</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">result</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="c1">// buat objek supplier</span>
</span><span class='line'><span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SupplierID</span> <span class="p">=</span> <span class="m">34</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">result1</span> <span class="p">=</span> <span class="n">DeleteUsingADONET</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span><span class='line'><span class="kt">var</span> <span class="n">result2</span> <span class="p">=</span> <span class="n">DeleteUsingEF</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>4. GetAll - Untuk menampilkan semua data
</strong></p>

<p>Method ini akan mengembalikan kumpulan objek supplier, karena objek suppliernya bisa lebih dari satu maka dibutuhkan sebuah wadah (container) untuk menampung kumpulan objek supplier.</p>

<p>Untuk contoh di bawah ini saya menggunakan objek <a href="http://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx">List</a> untuk menampung kumpulan objek supplier.</p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">IList</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;</span> <span class="n">GetAllUsingADONET</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;SELECT SupplierID, NamaSupplier, Jalan, Kota</span>
</span><span class='line'><span class="s">                    FROM Supplier</span>
</span><span class='line'><span class="s">                    ORDER BY NamaSupplier&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">dtr</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">while</span> <span class="p">(</span><span class="n">dtr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SupplierID</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">NamaSupplier</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">Jalan</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jalan&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jalan&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">Kota</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Kota&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Kota&quot;</span><span class="p">]</span>
</span><span class='line'>                    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">daftarSupplier</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">daftarSupplier</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">noUrut</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">GetAllUsingADONET</span><span class="p">();</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">supplier</span> <span class="k">in</span> <span class="n">daftarSupplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}. {1}&quot;</span><span class="p">,</span> <span class="n">noUrut</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">noUrut</span><span class="p">++;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework (EF)</strong></p>

<p>Tidak seperti ADO.NET yang masih menggunakan perintah SQL SELECT untuk mengakses data yang ada di dalam database, Entity Framework menggunakan <a href="http://msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">IList</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;</span> <span class="n">GetAllUsingEF</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Suppliers</span>
</span><span class='line'>                           <span class="p">.</span><span class="n">OrderBy</span><span class="p">(</span><span class="n">s</span> <span class="p">=&gt;</span> <span class="n">s</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">)</span>
</span><span class='line'>                           <span class="p">.</span><span class="n">ToList</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">daftarSupplier</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">noUrut</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">GetAllUsingEF</span><span class="p">();</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">supplier</span> <span class="k">in</span> <span class="n">daftarSupplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}. {1}&quot;</span><span class="p">,</span> <span class="n">noUrut</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">noUrut</span><span class="p">++;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>5. GetByName - Untuk menampilkan data berdasarkan nama Supplier
</strong></p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">IList</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;</span> <span class="n">GetByNameUsingADONET</span><span class="p">(</span><span class="kt">string</span> <span class="n">namaSupplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;SELECT SupplierID, NamaSupplier, Jalan, Kota</span>
</span><span class='line'><span class="s">                    FROM Supplier</span>
</span><span class='line'><span class="s">                    WHERE NamaSupplier LIKE @1</span>
</span><span class='line'><span class="s">                    ORDER BY NamaSupplier&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="s">&quot;%&quot;</span> <span class="p">+</span> <span class="n">namaSupplier</span> <span class="p">+</span> <span class="s">&quot;%&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">dtr</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">while</span> <span class="p">(</span><span class="n">dtr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span>
</span><span class='line'>                    <span class="p">{</span>
</span><span class='line'>                        <span class="n">SupplierID</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">NamaSupplier</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">Jalan</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jalan&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jalan&quot;</span><span class="p">],</span>
</span><span class='line'>                        <span class="n">Kota</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Kota&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Kota&quot;</span><span class="p">]</span>
</span><span class='line'>                    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">daftarSupplier</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">supplier</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">daftarSupplier</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">noUrut</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">GetByNameUsingADONET</span><span class="p">(</span><span class="s">&quot;new&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">supplier</span> <span class="k">in</span> <span class="n">daftarSupplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}. {1}&quot;</span><span class="p">,</span> <span class="n">noUrut</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">noUrut</span><span class="p">++;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework (EF)
</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">IList</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;</span> <span class="n">GetByNameUsingEF</span><span class="p">(</span><span class="kt">string</span> <span class="n">namaSupplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Supplier</span><span class="p">&gt;();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Suppliers</span>
</span><span class='line'>                           <span class="p">.</span><span class="n">Where</span><span class="p">(</span><span class="n">s</span> <span class="p">=&gt;</span> <span class="n">s</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">.</span><span class="n">Contains</span><span class="p">(</span><span class="n">namaSupplier</span><span class="p">))</span>
</span><span class='line'>                           <span class="p">.</span><span class="n">OrderBy</span><span class="p">(</span><span class="n">s</span> <span class="p">=&gt;</span> <span class="n">s</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">)</span>
</span><span class='line'>                           <span class="p">.</span><span class="n">ToList</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">daftarSupplier</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">noUrut</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">GetByNameUsingEF</span><span class="p">(</span><span class="s">&quot;new&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">supplier</span> <span class="k">in</span> <span class="n">daftarSupplier</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}. {1}&quot;</span><span class="p">,</span> <span class="n">noUrut</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">noUrut</span><span class="p">++;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dan method terakhir adalah &hellip;</p>

<p><strong>6. GetByID - Untuk menampilkan data berdasarkan Supplier ID
</strong></p>

<p>Method ini hanya mengembalikan satu objek supplier jika ditemukan, selain itu akan mengembalikan nilai null.</p>

<p><strong>ADO.NET</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">Supplier</span> <span class="nf">GetByIDUsingADONET</span><span class="p">(</span><span class="kt">int</span> <span class="n">supplierID</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Supplier</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="n">GetOpenConnection</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;SELECT SupplierID, NamaSupplier, Jalan, Kota</span>
</span><span class='line'><span class="s">                    FROM Supplier</span>
</span><span class='line'><span class="s">                    WHERE SupplierID = @1&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cmd</span><span class="p">.</span><span class="n">Parameters</span><span class="p">.</span><span class="n">AddWithValue</span><span class="p">(</span><span class="s">&quot;@1&quot;</span><span class="p">,</span> <span class="n">supplierID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">dtr</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">dtr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="n">supplier</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Supplier</span><span class="p">();</span>
</span><span class='line'>                    <span class="n">supplier</span><span class="p">.</span><span class="n">SupplierID</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="m">0</span> <span class="p">:</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;SupplierID&quot;</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">supplier</span><span class="p">.</span><span class="n">Jalan</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jalan&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Jalan&quot;</span><span class="p">];</span>
</span><span class='line'>                    <span class="n">supplier</span><span class="p">.</span><span class="n">Kota</span> <span class="p">=</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Kota&quot;</span><span class="p">]</span> <span class="k">is</span> <span class="n">DBNull</span> <span class="p">?</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span> <span class="p">:</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span><span class="n">dtr</span><span class="p">[</span><span class="s">&quot;Kota&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">supplier</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="n">GetByIDUsingADONET</span><span class="p">(</span><span class="m">19</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">supplier</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Entity Framework (EF)
</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="n">Supplier</span> <span class="nf">GetByIDUsingEF</span><span class="p">(</span><span class="kt">int</span> <span class="n">supplierID</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Supplier</span> <span class="n">supplier</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">supplier</span> <span class="p">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Suppliers</span>
</span><span class='line'>                     <span class="p">.</span><span class="n">Where</span><span class="p">(</span><span class="n">s</span> <span class="p">=&gt;</span> <span class="n">s</span><span class="p">.</span><span class="n">SupplierID</span> <span class="p">==</span> <span class="n">supplierID</span><span class="p">)</span>
</span><span class='line'>                     <span class="p">.</span><span class="n">SingleOrDefault</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">supplier</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Contoh penggunaan :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">supplier</span> <span class="p">=</span> <span class="n">GetByIDUsingEF</span><span class="p">(</span><span class="m">19</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">supplier</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}&quot;</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Semua contoh method di atas masih menggunakan access modifier <em>private static</em> karena saya melakukan testingnya langsung di method Main (static void Main). Idealnya semua method di atas disimpan di dalam sebuah class dengan access modifier <em>public</em>.</p>

<p>Dan kesimpulan akhirnya adalah, dengan menggunakan <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> seperti <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a>, kita bisa dengan mudah membuat standarisasi penulisan kode untuk mengakses database karena memiliki pola yang sama, yg membedakan hanya nilai Statenya saja.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/04/1.png"><img src="http://coding4ever.files.wordpress.com/2014/04/1.png" alt="1" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/04/2.png"><img src="http://coding4ever.files.wordpress.com/2014/04/2.png" alt="2" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/04/3.png"><img src="http://coding4ever.files.wordpress.com/2014/04/3.png" alt="3" /></a></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework5">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 4]]></title>
    <link href="http://coding4ever.net/blog/2014/03/27/entity-framework-part-4/"/>
    <updated>2014-03-27T13:27:20+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/27/entity-framework-part-4</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Melanjutkan <a href="http://coding4ever.net/blog/2014/03/26/entity-framework-part-3/">postingan</a> sebelumnya, tentang tool-tool yang bisa digunakan untuk mengenerate kode mapping secara otomatis. Tool kedua yang akan kita bahas adalah <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a>.</p>

<p>Saya sendiri lebih senang menggunakan <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a>, dengan alasan kodenya lebih bersih dan transparan.</p>

<p>Untuk saat ini <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a> masih versi beta dan <strong>baru bisa digunakan untuk project C#</strong> :D.</p>

<!-- more -->


<p>Inilah salah satu alasan kenapa saya lebih memilih C# dibandingkan VB .NET, untuk Indonesia mungkin saja VB .NET lebih favorit dibandingkan C# tapi di luar sana sepertinya C# yang lebih diminati, ini dibuktikan dengan lebih banyaknya referensi berbahasa C# dibandingkan VB .NET.</p>

<p>Secara default <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a> menggunakan <a href="http://msdn.microsoft.com/en-us/data/jj591617.aspx">Code First’s Fluent API</a> untuk konfigurasi kode mappingnya, dan untuk mengganti konfigurasi default ini ke <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>, referensinya bisa Anda cek di <a href="http://romiller.com/2012/05/09/customizing-reverse-engineer-code-first-in-the-ef-power-tools/">sini</a>.</p>

<p><strong>Instalasi Entity Framework Power Tools</strong></p>

<p>Untuk Visual Studio .NET 2010 bisa diinstall secara langsung melalui menu <strong>Tools > Extensions and Updates</strong>, kemudian pilih <strong>Online Gallery</strong>, dan cari <em>Entity Framework Power Tools</em>.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/110.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/110.jpg" alt="1" /></a></p>

<p>Dan untuk Visual Studio .NET 2012, saya belum cek apakah tool ini sudah di-includekan secara default pada saat instalasi, jika belum langkah-langkah instalasi sama seperti di atas :D.</p>

<p>Sedangkan untuk Visual Studio .NET 2013 tool ini sudah include secara default pada saat instalasi.</p>

<p><strong>Mencoba Entity Framework Power Tools</strong></p>

<p>Setelah proses instalasi selesai kita bisa langsung mencoba <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a> dan untuk databasenya kita masih menggunakan database <a href="http://coding4ever.net/blog/2014/03/26/entity-framework-part-3/">postingan</a> sebelumnya.</p>

<p>Langsung saja berikut langkah-langkahnya :</p>

<ol>
<li><p>Aktifkan Visual Studio .NET Anda</p></li>
<li><p>Buat <strong>project C#</strong> dengan tipe Console Application. Ingat projectnya harus C#, karena untuk VB .NET belum didukung.</p></li>
<li><p>Klik kanan project -> Entity Framework -> Reverse Engineer Code First</p></li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/23.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/23.jpg" alt="2" /></a></p>

<ol>
<li>Langkah berikutnya adalah menentukan koneksi dan database.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/32.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/32.jpg" alt="3" /></a></p>

<p>Setelah klik tombol Ok, tunggu beberapa saat, untuk lamanya ya tergantung jumlah tabel yang ada di database.</p>

<p>Untuk progressnya bisa kita cek di bagian status bar.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/42.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/42.jpg" alt="4" /></a></p>

<p>Adapun proses yang terjadi pada saat kita menggunakan <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a> sebagai berikut :</p>

<ul>
<li><p>Menginstall paket <a href="http://www.nuget.org/packages/EntityFramework/">Entity Framework</a>, jadi jangan lupa untuk menginstall <a href="http://coding4ever.net/blog/2014/03/11/nuget/">NuGet</a> terlebih dulu.</p></li>
<li><p>Mengenerate class <a href="http://stackoverflow.com/questions/910253/what-does-poco-mean">POCO</a> (entity) untuk masing-masing tabel.</p></li>
<li><p>Mengenerate class Context yang merupakan turunan dari class DbContext.</p></li>
<li><p>Secara default untuk konfigurasi mapping (pemetaan) menggunakan <a href="http://msdn.microsoft.com/en-us/data/jj591617.aspx">Code First’s Fluent API</a>.</p></li>
<li><p>Menggunakan pendekatan <em><a href="http://coding4ever.net/blog/2014/03/21/entity-framework-part-2/">Code first (existing database)</a>.</em></p></li>
</ul>


<p>Berikut adalah contoh class entity dan mapping hasil generate menggunakan <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a>.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/52.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/52.jpg" alt="5" /></a>Class entity</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/62.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/62.jpg" alt="6" /></a></p>

<p>Class mapping</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/72.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/72.jpg" alt="7" /></a></p>

<p>Class Context</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/82.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/82.jpg" alt="8" /></a></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework4">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 3]]></title>
    <link href="http://coding4ever.net/blog/2014/03/26/entity-framework-part-3/"/>
    <updated>2014-03-26T12:14:15+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/26/entity-framework-part-3</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Pada <a href="http://coding4ever.net/blog/2014/03/21/entity-framework-part-2/">postingan</a> sebelumnya kita sudah berhasil melakukan mapping (pemetaan) <em><strong>secara manual</strong></em> antara tabel yang ada di dalam database dengan class entity yang sudah kita definisikan di dalam project.</p>

<p>Mapping secara manual oke lah kalo hanya untuk satu atau dua tabel, tapi kalo tabel sudah banyak 10, 20, 30 &hellip;, :cry: tentu merupakan pekerjaan yang mengerikan dan menyedihkan kalo masih dikerjakan secara manual :D</p>

<!-- more -->


<p>Untungnya sudah ada beberapa tool yang bisa kita gunakan untuk melakukan mapping secara otomatis :</p>

<ul>
<li><p><a href="http://msdn.microsoft.com/en-us/library/vstudio/cc716685%28v=vs.100%29.aspx">ADO.NET Entity Data Model Designer</a></p></li>
<li><p><a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a></p></li>
</ul>


<p>InsyaAlloh kita akan membahasnya satu per satu, dan yang menjadi pembahasan pertama kita adalah penggunaan tool <a href="http://msdn.microsoft.com/en-us/library/vstudio/cc716685%28v=vs.100%29.aspx">ADO.NET Entity Data Model Designer</a>.</p>

<p>Tapi sebelumnya kita akan menambahkan beberapa tabel baru (Barang, Beli dan ItemBeli) ke dalam database Retail kita.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/41.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/41.jpg" alt="4" /></a></p>

<p><strong>ADO.NET Entity Data Model Designer</strong></p>

<p>ADO.NET Entity Data Model Designer (Entity Designer) adalah tool yang digunakan untuk memodifikasi file <a href="http://msdn.microsoft.com/en-us/data/jj650889.aspx">EDMX</a>.</p>

<p>Dengan menggunakan ADO.NET Entity Data Model Designer memudahkan kita untuk membuat entitas (entities), asosiasi (associations), pemetaan (mappings) dan hubungan warisan (inheritance relationships) secara visual.</p>

<p>Oke langsung saja akan kita praktikan penggunakan tool ADO.NET Entity Data Model Designer :</p>

<ol>
<li><p>Aktifkan Visual Studio .NET Anda</p></li>
<li><p>Buat project dengan tipe Console Application</p></li>
<li><p>Klik kanan project -> Add -> New Item</p></li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/19.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/19.jpg" alt="1" /></a></p>

<ol>
<li>Pilih item ADO.NET Entity Data Model, tentukan namanya misal RetailModel kemudian klik tombol Add</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/22.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/22.jpg" alt="2" /></a></p>

<ol>
<li>Selanjutnya akan tampil dialog Entity Data Model, karena kita akan melakukan mapping berdasarkan database yang sudah ada, pilih <strong>Generate from database</strong> kemudian klik tombol Next</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/31.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/31.jpg" alt="3" /></a></p>

<ol>
<li>Langkah berikutnya adalah menentukan nama database. Jika nama databasenya belum ada kita bisa menambahkannya dengan mengklik tombol New Connection &hellip;</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/112.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/112.jpg" alt="11" /></a></p>

<p>Untuk melanjutkan klik tombol Next ></p>

<ol>
<li>Berikutnya adalah menentukan objek yang akan dimapping, untuks saat ini kita hanya memilih Tabel.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/61.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/61.jpg" alt="6" /></a></p>

<p>Hasil akhir dari langkah-langkah di atas, hanya akan menghasilkan sebuah file dengan ekstensi <a href="http://msdn.microsoft.com/en-us/data/jj650889.aspx">EDMX</a>.</p>

<p><a href="http://msdn.microsoft.com/en-us/data/jj650889.aspx">EDMX</a> adalah file XML yang mendefinisikan model (konsep, penyimpanan dan mapping antar model) yang digunakan oleh Entity Framework.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/71.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/71.jpg" alt="7" /></a></p>

<p>Trus mana kode mappingnya ?</p>

<p>Seharusnya sih udah otomatis jika kita menggunakan Visual Studio .NET versi terbaru (2012 dan 2013), berhubung untuk contoh di atas saya masih menggunakan Visual Studio 2010, jadi masih ada beberapa langkah lagi yang harus kita lakukan :)</p>

<p>Sebelum melakukan langkah-langkah berikut ini, sebaiknya Anda sudah menginstall <a href="http://coding4ever.net/blog/2014/03/11/nuget/">NuGet</a> dan menambahkan paket <a href="http://coding4ever.net/blog/2014/03/21/entity-framework-part-2/">Entity Framework</a>.</p>

<ol>
<li>Klik kanan di area kosong EF Designer -> Add Code Generation Item…</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/81.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/81.jpg" alt="8" /></a></p>

<ol>
<li>Pilih <strong>Online Templates</strong>, kemudian pada kotak pencarian ketik <strong>DbContext</strong>. Pilihan <strong>EF 5.x DbContext Generator for C#</strong>, tentukan namanya misal <strong>RetailModel</strong> kemudian klik tombol Add.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/93.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/93.jpg" alt="9" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/101.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/101.jpg" alt="10" /></a>Setelah kode generatenya berhasil dibuat seperti gambar di atas, terakhir akan kita coba untuk membaca data Supplier, dengan membuka file Program.cs dan melengkapi kode method Mainnya seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/14.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/14.jpg" alt="14" /></a></p>

<p>Dan jika kode di atas dijalankan, akan menghasilkan output seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/15.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/15.jpg" alt="15" /></a></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework3">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 2]]></title>
    <link href="http://coding4ever.net/blog/2014/03/21/entity-framework-part-2/"/>
    <updated>2014-03-21T10:40:20+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/21/entity-framework-part-2</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Melanjutkan <a href="http://coding4ever.net/blog/2014/03/18/entity-framework-part-1/">postingan</a> sebelumnya, saya sudah mendemokan begitu mudahnya mengakses data di dalam sebuah database menggunakan <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a>.</p>

<p>Entity Framework bertugas mengambil alih semua pekerjaan yang biasa kita lakukan dalam pembuatan aplikasi database, seperti mengambil data (SELECT), menambah data (INSERT), mengupdate data (UPDATE) dan menghapus data (DELETE).</p>

<p>Sehingga dengan menggunakan Entity Framework kita sudah tidak lagi berhubungan secara langsung dengan perintah SQL, dan sebagai gantinya kita menggunakan <a href="msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a>.</p>

<!-- more -->


<p>Ketika bekerja dengan <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> ada beberapa pendekatan yang bisa kita lakukan sesuai dengan kebiasaan kita dalam mengembangkan aplikasi.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/ef-workflow.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/ef-workflow.jpg" alt="EF Workflow" /></a></p>

<p>Karena saya lebih senang membuat database terlebih dulu, baru dilanjutkan dengan menulis kode, makanya pendekatan yang saya pilih adalah &ldquo;Code first (existing database)&rdquo; yaitu membuat class-class entity (model) berdasarkan database yang sudah ada.</p>

<p>Untuk informasi lebih lengkap tentang pendekatan yang bisa kita lakukan ketika bekerja dengan Entity Framework bisa langsung dicek di <a href="http://msdn.microsoft.com/en-us/data/jj590134">sini</a> :D</p>

<p>Fokus pada postingan kali ini adalah melakukan mapping (pemetaan) antara tabel yang ada di database dengan class entity. Class entity adalah class yang merupakan representatif dari tabel-tabel yang ada di dalam database. Jadi kalo kita mempunyai tabel Supplier, berarti kita juga harus membuat class dengan nama yang sama dengan nama tabelnya.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/12.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/12.jpg" alt="1" /></a>Struktur Tabel Supplier</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/21.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/21.jpg" alt="2" /></a>Class Entity Supplier</p>

<p>Mapping (pemetaan) merupakan inti dari ORM seperti Entity Framework. Mapping bisa dilakukan secara manual seperti yang akan kita bahas pada postingan kali ini, maupun secara otomatis menggunakan tools pembantu seperti <a href="http://msdn.microsoft.com/en-us/library/vstudio/cc716685%28v=vs.100%29.aspx">ADO.NET Entity Data Model Designer</a> dan <a href="http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d">Entity Framework Power Tools</a>.</p>

<p>Sebagai contoh kita melakukan mapping antara tabel supplier dan class entity supplier seperti gambar di atas. Adapun langkah-langkah seperti berikut :</p>

<ol>
<li><p>Buat project baru dengan tipe Console Application</p></li>
<li><p>Tambahkan class baru dengan nama Supplier</p></li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/3.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/3.jpg" alt="3" /></a>kemudian lengkapi kodenya seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">Supplier</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">SupplierID</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">NamaSupplier</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Jalan</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Kota</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Class Supplier di atas merupakan representatif dari tabel Supplier yang ada di dalam database. Setiap objek dari class Supplier akan mewakili satu baris/record tabel Supplier dan setiap field akan dipetakan ke masing-masing property objeknya.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/4.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/4.jpg" alt="4" /></a></p>

<ol>
<li>Menambahkan referensi <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> via <a href="http://coding4ever.net/blog/2014/03/11/nuget/">NuGet</a>, caranya dengan klik kanan node References kemudian pilih Manage NuGet Packages.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/5.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/5.jpg" alt="5" /></a>selanjutnya akan tampil dialog Manage NuGet Packages kemudian pilih EntityFramework dan klik Install.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/6.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/6.jpg" alt="6" /></a></p>

<ol>
<li>Pilih &ldquo;I Accept&rdquo; ketika ada konfirmasi, setelah itu tunggu beberapa detik sampai paket EntityFramework selesai diinstall. Kemudian cek seharusnya library EntityFramework sudah ditambahkan di bagian node References.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/7.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/7.jpg" alt="7" /></a>selain itu ada tambahan file baru yaitu &ldquo;packages.config&rdquo; yang berisi informasi paket apa saja yang sudah ditambahkan via <a href="http://coding4ever.net/blog/2014/03/11/nuget/">NuGet</a>.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/8.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/8.jpg" alt="8" /></a></p>

<p><strong>Konfigurasi Pemetaan (mapping)</strong></p>

<p>Ada dua pilihan ketika kita ingin melakukan mapping :</p>

<ul>
<li><p><a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a></p></li>
<li><p><a href="http://msdn.microsoft.com/en-us/data/jj591617.aspx">Code First’s Fluent API</a></p></li>
</ul>


<p><strong>Data Annotations</strong>
Data Annotations adalah atribut yang kita tambahkan secara langsung dibagian class atau properties. Untuk menggunakan Data Annotations kita harus menambahkan namespace System.ComponentModel.DataAnnotations. Contoh :</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/92.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/92.jpg" alt="9" /></a></p>

<p>Atribut Tabel hanya ditambahkan jika nama tabel dan class berbeda, begitu juga untuk atribut Column hanya ditambahkan jika nama field berbeda dengan nama property.</p>

<p><strong>Code First’s Fluent API</strong>
Jika ingin class entity kita tetap bersih dari atribut-atribut di atas, kita bisa menggunakan Code First’s Fluent API untuk konfigurasi mappingnya.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/10.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/111.jpg" alt="11" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/10.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/10.jpg" alt="10" /></a></p>

<p>Jadi terserah Anda ingin menggunakan cara yang mana untuk konfigurasi mappingnya.</p>

<p><strong>DbContext</strong>
Setelah proses mapping selesai, langkah berikutnya adalah menambahkan sebuah class dengan nama RetailContext, class ini harus turunan dari DbContext.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/121.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/121.jpg" alt="12" /></a></p>

<p>Penamaan class RetailContext, disesuaikan dengan nama project yang kita buat. Jika nama project kita adalah SmartLibrary (aplikasi perpustakaan), mungkin penamaan class SmartLibraryContext bisa menjadi pertimbangan untuk nama class Contextnya.</p>

<p>DbContext adalah class yang bertanggung jawab untuk berinteraksi dengan data (yang diambil dari database) yang sudah dirubah bentuknya menjadi objek atau sebaliknya dari objek kemudian dirubah lagi menjadi data yang bisa disimpan ke dalam database.</p>

<p>Berikut adalah kode lengkap untuk class RetailContext di atas :</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/16.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/16.jpg" alt="16" /></a></p>

<p>Dibagian constructor ada perintah base(&ldquo;Name=RetailContext&rdquo;), penulisan keyword base disini adalah untuk memanggil constructor class induk dari class RetailContext yaitu DbContext. Kemudian &ldquo;Name=RetailContext&rdquo;, RetailContext disini adalah nama dari koneksi yang kita set nilainya via file App.config.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/17.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/17.jpg" alt="17" /></a><a href="http://coding4ever.files.wordpress.com/2014/03/18.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/18.jpg" alt="18" /></a></p>

<p>Berikutnya tujuan dari deklarasi property Suppliers dengan tipe DbSet<Supplier> adalah agar class RetailContext bisa mengakses dan memodifikasi objek Supplier.</p>

<p>Percaya atau tidak dengan sedikit konfigurasi di atas, tanpa melibatkan perintah SQL seperti SELECT, kita bisa langsung mengakses data Supplier yang sudah berubah bentuk menjadi objek.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/4.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/4.jpg" alt="4" /></a></p>

<p>Oke langsung saja kita buktikan dengan membuka file Program.cs kemudian kita lengkapi method Mainnya dengan kode berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/14.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/14.jpg" alt="14" /></a></p>

<p>Langkah pertama yang kita lakukan adalah membuat objek dari RetailContext dengan nama db. Karena RetailContext mengimplementasikan interface IDisposable, kita bisa menggunakan keyword using agar objek db langsung dihapus dari memory setelah blok usingnya selesai dijalankan.</p>

<p>Selanjutnya kita membuat objek daftarSupplier untuk menampung data supplier yang di-SELECT dari database kemudian dirubah bentuknya menjadi kumpulan objek dari class entity Supplier yang disimpan di dalam sebuah wadah dengan tipe class collection List.</p>

<p>Terakhir kita gunakan perulangan foreach untuk mengekstrak objek Supplier yang ada di dalam objek daftarSupplier.</p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/15.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/15.jpg" alt="15" /></a></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework2">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 1]]></title>
    <link href="http://coding4ever.net/blog/2014/03/18/entity-framework-part-1/"/>
    <updated>2014-03-18T10:05:13+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/18/entity-framework-part-1</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100"></p>

<p><strong>Intro ORM</strong></p>

<p>Sebelum kita membahas apa itu <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a>, kita akan singgung sedikit mengenai <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> (Object Relational Mapping).</p>

<p>ORM  adalah  framework  yang  memetakan  tabel  pada  database  relasional ke objek  dengan menggunakan  informasi  pada metadata.  Metadata  dapat  berupa  file  XML  atau custom atribute pada  entity class.</p>

<p>Saat ini sudah banyak pilihan ORM yang dapat meningkatkan  produktivitas kita sebagai seorang developer. Ketika kita membangun sebuah aplikasi database  dengan menggunakan OOP,  maka harus  dibuatkan  sebuah  persisten  objek  yang memodelkan objek dari database seperti tabel,  view , relationship dan objek database lainnya.</p>

<!-- more -->


<p><strong>Persisten  objek (Object Persistence)</strong></p>

<p>Hampir semua aplikasi membutuhkan persistensi data.  Jika tidak, ketika aliran listrik dimatikan maka data tersebut akan hilang.</p>

<p>Ketika akan menyimpan data secara permanen, database relasional adalah pilihan terbaik, sedangkan ketika harus bekerja dengan data yang ada di memori, objek adalah cara yang terbaik.</p>

<p>Fitur seperti pewarisan, enkapsulasi dan fitur OOP lainnya memungkinkan penulisan kode yang lebih baik dan menyederhankan pengembangan aplikasi.</p>

<p>Ketika  memodelkan  persisten  objek,  makin besar aplikasi yang  kita buat, maka makin rumit pemodelan yang dilakukan. Pemodelan dengan &ldquo;tangan  kosong&rdquo;  bukanlah  ide  yang  baik. Selain  banyak  waktu  yang  terbuang  karena  banyak perkerjaan yang di lakukan berulang-ulang, bisa jadi banyak kesalahan yang tidak bisa dihindari.</p>

<p>Salah satu solusi yang digunakan untuk mengatasi pemodelan dengan &ldquo;tangan  kosong&rdquo;  ini adalah dengan menggunakan ORM.</p>

<p>ORM mempunyai kemampuan untuk mengenerate secara otomatis persisten  objek berdasarkan schema dari database, konfigurasi file  XML  atau  custom atribute pada  entity class.</p>

<p>Pendekatan ORM  bisa jadi lebih efektif dan produktif, tetapi tetap saja ada kekurangannya yaitu eksekusi  program  cenderung lebih  lambat  daripada  tanpa  menggunakan  ORM. Hal ini disebabkan adanya  proses  mapping  terlebih dahulu  terhadap  tabel di  database. Proses  ini mengubah  &#8221;record/tupel&#8221; menjadi  objek  atau  objek  collection. Namun  dengan perkembangan kecepatan processor dan kapasitas memory saat ini kekurangan ini dapat diatasi.</p>

<p>Berikut beberapa alasan mengapa menggunakan ORM :</p>

<ol>
<li><p> Productivity : Mempermudah penulisan kode pengaksesan data (DAO/Access Object)</p></li>
<li><p> Maintainability  :  Kode  lebih  mudah  di  maintenance,  karena  tidak  perlu  lagi  menulis perintah SQL bersama-sama dengan kode utama, bahkan tidak perlu menuliskan SQL sekali.</p></li>
<li><p> Performance : Kode lebih efesien sehingga bisa dioptimasi lebih lanjut</p></li>
<li><p> Vendor Independence  :  Tidak tergantung penyedia DBMS. Jika terjadi perubahan data cukup diubah konfigurasi koneksi saja</p></li>
<li><p> Mengatasi  Paradigm  “impedance mismatch”  :  Penyimpanan  data  dalam  RDBMS  dan  objek  sama  sekali berbeda. ORM menjadi layer perantara RDBMS dengan pemrograman berbasis objek.</p></li>
</ol>


<p><strong>Entity Framework</strong></p>

<p><a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framework</a> adalah salah satu ORM yang dibuat dan direkomendasikan Microsoft dalam pengembangan aplikasi.</p>

<p>Kita akan membahas lebih lanjut tentang <a href="http://msdn.microsoft.com/en-us/data/aa937723">Entity Framewor</a>k pada postingan berikutnya, insyaAlloh :)</p>

<p>Dan sebagai penutup postingan kali ini, saya akan menampilkan cuplikan source code untuk mengakses database baik menggunakan library ADO.NET secara langsung dan menggunakan ORM Entity Framework.</p>

<p>Untuk database saya menggunakan SQL Server Express 2008 R2.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/11.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/11.jpg" alt="1" /></a></p>

<p><strong>1. Menggunakan library ADO.NET secara langsung</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">strConn</span> <span class="p">=</span> <span class="s">@&quot;Data Source=.\sqlexpress2008;Initial Catalog=Retail;Integrated Security=True&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">conn</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlConnection</span><span class="p">(</span><span class="n">strConn</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">conn</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">var</span> <span class="n">sql</span> <span class="p">=</span> <span class="s">@&quot;SELECT NamaSupplier, Jalan</span>
</span><span class='line'><span class="s">                FROM Supplier&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">cmd</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SqlCommand</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="n">conn</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">dtr</span> <span class="p">=</span> <span class="n">cmd</span><span class="p">.</span><span class="n">ExecuteReader</span><span class="p">())</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="kt">var</span> <span class="n">noUrut</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">while</span> <span class="p">(</span><span class="n">dtr</span><span class="p">.</span><span class="n">Read</span><span class="p">())</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}. {1}, {2}&quot;</span><span class="p">,</span> <span class="n">noUrut</span><span class="p">,</span> <span class="n">dtr</span><span class="p">[</span><span class="s">&quot;NamaSupplier&quot;</span><span class="p">],</span> <span class="n">dtr</span><span class="p">.</span><span class="n">GetString</span><span class="p">(</span><span class="m">1</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">noUrut</span><span class="p">++;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Penulisan kode seperti di atas, dengan menggunakan objek DataReader untuk menampung hasil SELECT, mirip dengan programmer VB classic yang menggunakan objek Recordset untuk menampung data, di mana kita masih berhubungan dengan baris dan kolom.</p>

<p>Makanya ketika kita ingin menampilkan nama supplier kita harus menyebutkan fieldnya yaitu &ldquo;NamaSupplier&rdquo; atau dengan menyebutkan indexnya.</p>

<p>Penulisan nama field &ldquo;NamaSupplier&rdquo;, masih berbasis teks sehingga IDE Visual Studio yang canggih pun tidak bisa berbuat banyak untuk membantu kita mengingat nama field apa saja yang tersedia untuk tabel Supplier berikut tipe datanya.</p>

<p><strong>2. Menggunakan ORM Entity Framework</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">db</span> <span class="p">=</span> <span class="k">new</span> <span class="n">RetailContext</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">noUrut</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">var</span> <span class="n">daftarSupplier</span> <span class="p">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Suppliers</span><span class="p">.</span><span class="n">ToList</span><span class="p">();</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">supplier</span> <span class="k">in</span> <span class="n">daftarSupplier</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;{0}. {1}, {2}&quot;</span><span class="p">,</span> <span class="n">noUrut</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">NamaSupplier</span><span class="p">,</span> <span class="n">supplier</span><span class="p">.</span><span class="n">Jalan</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">noUrut</span><span class="p">++;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pendekatan yang kedua ini kita sudah tidak lagi berhubungan dengan baris dan kolom tetapi langsung berhubungan dengan objek dari masing-masing class entity/model. Sehingga ketika kita menuliskan objek supplier kemudian diikuti dengan karakter titik (.), IDE Visual Studio bisa membantu kita dengan fasilitas IntelliSensenya untuk menampilkan daftar property apa saja yang tersedia.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/113.png"><img src="http://coding4ever.files.wordpress.com/2014/03/113.png" alt="1" /></a></p>

<p>Sehingga aktivitas mengingat nama field berikut tipe datanya sudah tidak ada lagi disini :D , bahkan kita tidak perlu menuliskan secara manual perintah SQL yang digunakan untuk menampilkan data Supplier, semuanya semua pekerjaan ini sudah diambil alih oleh Entity Framework.</p>

<p>Dari sisi kecepatan, jelas menggunakan library ADO.NET secara langsung adalah pemenangnya, tetapi dari sisi kemudahan penulisan kode dan pengembangan aplikasi, Anda dan Saya pasti sepakat bahwa menggunakan ORM adalah pemenangnya :)</p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework1">MENCOBA</a> :)</p>

<p>Referensi :</p>

<ol>
<li><p> <a href="http://it-ebooks.info/book/613/">Programming Entity Framework, 2nd Edition</a></p></li>
<li><p> <a href="http://it-ebooks.info/book/424/">Programming Entity Framework: Code First</a></p></li>
<li><p> <a href="http://it-ebooks.info/book/667/">Programming Entity Framework: DbContext</a></p></li>
<li><p> <a href="http://it-ebooks.info/book/1619/">Entity Framework 4 in Action</a></p></li>
<li><p> <a href="http://geeks.netindonesia.net/files/folders/ebook/entry63274.aspx">NET Enterprise Application Programming</a></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Paket NuGet]]></title>
    <link href="http://coding4ever.net/blog/2014/03/13/membuat-paket-nuget/"/>
    <updated>2014-03-13T15:22:02+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/13/membuat-paket-nuget</id>
    <content type="html"><![CDATA[<p><img style="float: left; margin:0 10px 10px 0;width:200px;height:70px" src="http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png" />Sedikit lagi tentang <a href="http://www.nuget.org/">NuGet</a>, pada <a href="http://coding4ever.net/blog/2014/03/12/menginstall-server-nuget-lokal/">postingan</a> sebelumnya kita sudah berhasil menginstall server NuGet lokal baik untuk keperluan pribadi atau internal kantor.</p>

<p>Ada beberapa alasan kenapa kita sebaiknya mempunyai server <a href="http://coding4ever.net/blog/2014/03/12/menginstall-server-nuget-lokal/">NuGet</a> sendiri, dua diantaranya :</p>

<ol>
<li><p> Untuk menghemat bandwidth internet</p></li>
<li><p> Sebagai media sharing library</p></li>
</ol>


<!-- more -->


<p>Nah pada postingan kali saya akan memberikan contoh untuk alasan nomor 2.</p>

<p>Misalkan kita bekerja di dalam sebuah tim, kemudian kita ditugaskan untuk membuat sebuah library dengan nama CalculatorLib, yang mana library ini akan digunakan oleh beberapa orang programmer.</p>

<p>Untuk versi awal (1.0.0) hanya mempunyai dua buah method yaitu :</p>

<ul>
<li><p>Penjumlahan</p></li>
<li><p>Pengurangan</p></li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/1.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/1.jpg" alt="1" /></a></p>

<p>Setelah selesai kita pun segera merilisnya agar bisa digunakan.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/24.png"><img src="http://coding4ever.files.wordpress.com/2014/03/24.png" alt="2" /></a></p>

<p>Ada beberapa media yang bisa kita gunakan untuk mendistribusikannya :</p>

<ol>
<li><p> Flash disk</p></li>
<li><p> Share folder</p></li>
<li><p> <a href="http://coding4ever.net/blog/2014/03/12/menginstall-server-nuget-lokal/">Server NuGet Lokal</a></p></li>
<li><p> Media lainnya</p></li>
</ol>


<p>Terserah Anda mau menggunakan cara yang mana, kalo saya untuk saat ini jelas memilih media yang nomor 3.</p>

<p><strong>Membuat paket NuGet</strong></p>

<p>Agar library yang baru kita buat (CalculatorLib.dll), bisa dibaca oleh server NuGet, tentunya tidak bisa langsung dicopy ke folder package NuGet Server tetapi ada tahapan yang harus kita kerjakan.</p>

<ol>
<li><p> Download <a href="http://nuget.codeplex.com/releases/view/58939">NuGet.exe</a></p></li>
<li><p> Membuat skrip XML kemudian simpan dengan ekstensi <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a>, jangan lupa untuk menyimpannya di folder yang sama dengan file NuGet.exe</p></li>
<li><p> Meng-compile skrip <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a> untuk menghasilkan file .nupkg, nah file .nupkg ini lah yang akan kita copykan ke folder package NuGet Server</p></li>
</ol>


<p>Contoh isi file <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/102.png"><img src="http://coding4ever.files.wordpress.com/2014/03/102.png" alt="10" /></a></p>

<p>Untuk informasi lebih lengkap tentang file nuspec bisa langsung meluncur ke<a href="http://docs.nuget.org/docs/reference/nuspec-reference">sini</a>.</p>

<p>Untuk meng-compile skrip <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a> gunakan perintah berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NuGet pack "nama_file_nuspec.nuspec" -o "folder_output"</span></code></pre></td></tr></table></div></figure>


<p>Contoh :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NuGet pack "CalculatorLib.nuspec" -o "D:\ServerNuGetLocal\Packages"</span></code></pre></td></tr></table></div></figure>


<p>Jika berhasil akan dibuatkan file baru dengan nama CalculatorLib.1.0.0.nupkg.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/32.png"><img src="http://coding4ever.files.wordpress.com/2014/03/32.png" alt="3" /></a></p>

<p>Sampai tahap ini kita sudah berhasil membuat file paket NuGet.</p>

<p>Jika kita mempunyai banyak file <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a>, dan untuk mempermudah meng-compile skrip <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a>, kita bisa memanfaatkan registry windows untuk menambahkan context menu &ldquo;Build NuGet Package&rdquo; setiap mengklik kanan file dengan ekstensi <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Windows Registry Editor Version 5.00
</span><span class='line'>
</span><span class='line'>[HKEY_CLASSES_ROOT\.nuspec]
</span><span class='line'>
</span><span class='line'>[HKEY_CLASSES_ROOT\.nuspec\Shell]
</span><span class='line'>
</span><span class='line'>[HKEY_CLASSES_ROOT\.nuspec\Shell\BuildNuGet]
</span><span class='line'>@="Build NuGet Package"
</span><span class='line'>
</span><span class='line'>[HKEY_CLASSES_ROOT\.nuspec\Shell\BuildNuGet\Command]
</span><span class='line'>@="E:\\Master\\Developer Tools\\nuget package\\build\\NuGet.exe pack \"%1\" -o \"E:\\Master\\Developer Tools\\nuget package\\build\\package\""</span></code></pre></td></tr></table></div></figure>


<p>Pada skrip di atas tinggal sesuaikan lokasi file NuGet.exe dan folder target.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/141.png"><img src="http://coding4ever.files.wordpress.com/2014/03/141.png" alt="14" /></a></p>

<p><strong>Mengakses paket CalculatorLib dari NuGet Package Manager
</strong></p>

<p>Untuk mendemokan ini, saya akan membuat project baru dengan nama CalculatorApp, kemudian menambahkan library CalculatorLib via NuGet Package Manager.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/33.png"><img src="http://coding4ever.files.wordpress.com/2014/03/33.png" alt="3" /></a></p>

<p>pada dialog NuGet Package Manager pilih paket CalculatorLib kemudian Install.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/42.png"><img src="http://coding4ever.files.wordpress.com/2014/03/42.png" alt="4" /></a></p>

<p>jika berhasil pada node References sudah ditambahkan library CalculatorLib.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/52.png"><img src="http://coding4ever.files.wordpress.com/2014/03/52.png" alt="5" /></a></p>

<p>Sekarang kita coba untuk membuat objek dari class Calculator.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/62.png"><img src="http://coding4ever.files.wordpress.com/2014/03/62.png" alt="6" /></a></p>

<p>Sipp method yang nampil sesuai dengan yang sudah kita definisikan di dalam library CalculatorLib versi awal (1.0.0)</p>

<p><strong>CalculatorLib Versi 1.1.0
</strong></p>

<p>Library CalculatorLib yang sudah kita buat (versi 1.0.0), baru mempunyai dua method yaitu : Penjumlahan dan Pengurangan.</p>

<p>Kita akan menambahkan dua method lagi yaitu Perkalian dan Pembagian.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/72.png"><img src="http://coding4ever.files.wordpress.com/2014/03/72.png" alt="7" /></a></p>

<p>Sebelum merilis ulang (build) library ini, naikkan dulu nilai versinya menjadi 1.1.0</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/82.png"><img src="http://coding4ever.files.wordpress.com/2014/03/82.png" alt="8" /></a></p>

<p>kemudian edit juga file nuspecnya, dengan mengganti nilai versionnya menjadi 1.1.0</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/94.png"><img src="http://coding4ever.files.wordpress.com/2014/03/94.png" alt="9" /></a></p>

<p>Compile ulang skrip <a href="http://docs.nuget.org/docs/reference/nuspec-reference">.nuspec</a> gunakan perintah berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NuGet pack "CalculatorLib.nuspec" -o "D:\ServerNuGetLocal\Packages"</span></code></pre></td></tr></table></div></figure>


<p>jika berhasil kita akan mempunyai file paket CalculatorLib terbaru dengan versi 1.1.0</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/112.png"><img src="http://coding4ever.files.wordpress.com/2014/03/112.png" alt="11" /></a></p>

<p>Sekarang kita aktifkan lagi project CalculatorAppnya, kemudian cek NuGet Package Manager, apakah sudah ada updatean untuk paket CalculatorLibnya.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/121.png"><img src="http://coding4ever.files.wordpress.com/2014/03/121.png" alt="12" /></a></p>

<p>Yuph ternyata sudah ada, langsung saja di update kemudian kita cek lagi source code CalculatorApp, apa sudah ada tambahan dua method lagi ?</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/131.png"><img src="http://coding4ever.files.wordpress.com/2014/03/131.png" alt="13" /></a></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Menginstall Server NuGet Lokal]]></title>
    <link href="http://coding4ever.net/blog/2014/03/12/menginstall-server-nuget-lokal/"/>
    <updated>2014-03-12T15:18:16+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/12/menginstall-server-nuget-lokal</id>
    <content type="html"><![CDATA[<p><img style="float: left; margin:0 10px 10px 0;width:200px;height:70px" src="http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png" />Pada <a href="http://coding4ever.net/blog/2014/03/11/nuget/">postingan</a> sebelumnya kita sudah membahas apa itu <a href="http://www.nuget.org/">NuGet</a>, cara instalasi berikut contoh penggunaannya.</p>

<p>Sesuai judul postingan kali ini, kita akan menginstall sendiri server <a href="http://www.nuget.org/">NuGet</a> untuk keperluan internal.</p>

<p>Ada beberapa alasan kenapa harus menginstall server <a href="http://www.nuget.org/">NuGet</a> sendiri :</p>

<!-- more -->


<p><strong>1. Untuk menghemat bandwidth internet</strong></p>

<p>Contoh beberapa library yang sering saya gunakan untuk pembuatan aplikasi (sesuai kebutuhan) :</p>

<ul>
<li><p><a href="http://www.nuget.org/packages/ClosedXML/">ClosedXML</a>, ClosedXML makes it easier for developers to create Excel 2007/2010 files. It provides a nice object oriented way to manipulate the files (similar to VBA) without dealing with the hassles of XML Docume</p></li>
<li><p><a href="http://www.nuget.org/packages/Dapper/">Dapper</a>, A high performance Micro-ORM</p></li>
<li><p><a href="http://www.nuget.org/packages/DockPanelSuite/2.9.0">DockPanelSuite</a>, The docking library for .Net Windows Forms development which mimics Visual Studio .Net.</p></li>
<li><p><a href="http://www.nuget.org/packages/EntityFramework/6.0.2">EntityFramework</a>, Entity Framework is Microsoft&rsquo;s recommended data access technology for new applications.</p></li>
<li><p><a href="http://www.nuget.org/packages/FirebirdSql.Data.FirebirdClient/">FirebirdSql.Data.FirebirdClient</a></p></li>
<li><p><a href="http://www.nuget.org/packages/FirebirdSql.Data.FirebirdClient-EF6/">FirebirdSql.Data.FirebirdClient-EF6</a></p></li>
<li><p><a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a>, SMS libraries for GSM phones</p></li>
<li><p><a href="http://www.nuget.org/packages/Newtonsoft.Json/">Json .NET</a>, Json.NET is a popular high-performance JSON framework for .NET</p></li>
<li><p><a href="http://www.nuget.org/packages/RestSharp/">RestSharp</a>, Simple REST and HTTP API Client</p></li>
</ul>


<p>Lumayan banyak bukan ? Jika setiap ingin menambahkan library di atas kita harus mendownload dari <a href="http://www.nuget.org/">NuGet Gallery</a> tentu sedikit banyaknya akan menghabiskan bandwith internet, belum lagi kalo koneksi internetnya mati.</p>

<p><strong>2. Sebagai media sharing library</strong></p>

<p>Misal kita ingin membuat library yang akan digunakan oleh beberapa programmer, kemudian seiring dengan waktu tentunya library ini akan ada perbaikan atau penambahan fitur-fitur terbaru.</p>

<p>Jika setiap ada perubahan tentunya kurang efektif jika library tersebut dicopy via flash disk, share folder atau media lainnya, belum lagi harus menghapus library versi yang lama, mendaftarkan library yang terbaru, tentunya ini pekerjaan yang membosankan, sehingga server NuGet lokal bisa menjadi salah satu alternatif terbaik untuk mempermudah sharing library.</p>

<p>Dengan dua alasan di atas saya rasa sudah cukup untuk memotivasi kita untuk membuat server NuGet sendiri.</p>

<p>Oke langsung saja, sudah cukup untuk intronya, untuk langkah-langkah berikut, saya menggunakan Windows 7.</p>

<p><strong>1. Menginstall IIS (Internet Information Services)</strong></p>

<p>Langkah-langkahnya bisa dicek di<a href="http://www.codeproject.com/Tips/365704/Install-IIS-on-Windows">sini</a>.</p>

<p><strong>2. Membuat Project ASP .NET</strong></p>

<p>Berikut langkah-langkahnya :</p>

<ul>
<li><p>Aktifkan Visual Studio .NET, untuk contoh di sini saya menggunakan Visual Studio 2010</p></li>
<li><p>Buat project baru dengan tipe ASP.NET Empty Web Application</p></li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/11.png"><img src="http://coding4ever.files.wordpress.com/2014/03/11.png" alt="1" /></a></p>

<ul>
<li>Tambahkan paket NuGet.Server dengan cara klik kanan References -> Manage NuGet Packages</li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/21.png"><img src="http://coding4ever.files.wordpress.com/2014/03/21.png" alt="2" /></a>Pada kota pencarian ketik <strong>Nuget.server</strong>, kemudian klik tombol Install</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/311.png"><img src="http://coding4ever.files.wordpress.com/2014/03/311.png" alt="31" /></a></p>

<p>tunggu sampai proses download selesai</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/41.png"><img src="http://coding4ever.files.wordpress.com/2014/03/41.png" alt="4" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/51.png"><img src="http://coding4ever.files.wordpress.com/2014/03/51.png" alt="5" /></a></p>

<p>Pilih I Accept, kemudian tunggu sampai proses instalasi selesai</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/61.png"><img src="http://coding4ever.files.wordpress.com/2014/03/61.png" alt="6" /></a></p>

<ul>
<li>Setelah berhasil menambahkan paket NuGet.Server, langkah berikutnya adalah menentukan lokasi paket NuGet, dengan cara mengedit file Web.Config</li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/71.png"><img src="http://coding4ever.files.wordpress.com/2014/03/71.png" alt="7" /></a>kemudian edit nilai dari packagesPath, misal : D:\ServerNuGetLocal\Packages</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/81.png"><img src="http://coding4ever.files.wordpress.com/2014/03/81.png" alt="8" /></a></p>

<ul>
<li>Setelah menentukan lokasi paket NuGet, langkah berikutnya adalah mempublish (deploy) project ASP.NET yang baru kita buat, dengan cara klik kanan project -> Publish&hellip;</li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/91.png"><img src="http://coding4ever.files.wordpress.com/2014/03/91.png" alt="9" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/10.png"><img src="http://coding4ever.files.wordpress.com/2014/03/10.png" alt="10" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/111.png"><img src="http://coding4ever.files.wordpress.com/2014/03/111.png" alt="11" /></a></p>

<p><strong>3. Mendaftarkan Project ASP .NET ke IIS</strong></p>

<p>Project ASP.NET yang sudah kita buat sebelumnya membutuhkan web server IIS untuk bisa dijalankan, sehingga langkah berikutnya adalah mendaftarkannya ke IIS.</p>

<p>Adapun langkah-langkahnya seperti berikut :</p>

<ul>
<li><p>Aktifkan IIS (Internet Information Services)</p></li>
<li><p>Klik kanan node Default Web Site -> Add Application</p></li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/12.png"><img src="http://coding4ever.files.wordpress.com/2014/03/12.png" alt="12" /></a></p>

<p>Tentukan nilai Alias, Application pool dan Physical path, khusus untuk nilai physical path mengacu pada langkah-langkah sebelumnya.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/13.png"><img src="http://coding4ever.files.wordpress.com/2014/03/13.png" alt="13" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/14.png"><img src="http://coding4ever.files.wordpress.com/2014/03/14.png" alt="14" /></a></p>

<ul>
<li>Setelah berhasil menambahkan node NuGet ke IIS, coba ketik url : <a href="http://localhost/NuGet/">http://localhost/NuGet/</a> di browser Anda</li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/15.png"><img src="http://coding4ever.files.wordpress.com/2014/03/15.png" alt="15" /></a></p>

<p>Jika tampil seperti gambar di atas, berarti proses registrasi server NuGet lokal berhasil, dan jika ingin melihat paket apa saja yang sudah tersedia klik link <strong>here</strong>.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/16.png"><img src="http://coding4ever.files.wordpress.com/2014/03/16.png" alt="16" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/17.png"><img src="http://coding4ever.files.wordpress.com/2014/03/17.png" alt="17" /></a></p>

<p>Terlihat pada gambar di atas paket di server NuGet lokal kita masih kosong.</p>

<p><strong>4. Mendownload paket yang sering digunakan</strong></p>

<p>Untuk mendownload paket NuGet yang sudah tersedia di <a href="http://www.nuget.org/">NuGet Gallery</a>, gunakan url dengan format : <a href="https://www.nuget.org/api/v2/package/{packageID}/{packageVersion}">https://www.nuget.org/api/v2/package/{packageID}/{packageVersion}</a>, contoh :</p>

<ul>
<li><p><a href="https://www.nuget.org/api/v2/package/ClosedXML/0.69.2">https://www.nuget.org/api/v2/package/ClosedXML/0.69.2</a></p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/Dapper/1.13.0">https://www.nuget.org/api/v2/package/Dapper/1.13.0</a></p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/DockPanelSuite/2.9.0">https://www.nuget.org/api/v2/package/DockPanelSuite/2.9.0</a></p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/EntityFramework/6.0.2">https://www.nuget.org/api/v2/package/EntityFramework/6.0.2</a></p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/FirebirdSql.Data.FirebirdClient/4.0.0">https://www.nuget.org/api/v2/package/FirebirdSql.Data.FirebirdClient/4.0.0</a>
<a href="https://www.nuget.org/api/v2/package/FirebirdSql.Data.FirebirdClient-EF6/4.0.0">https://www.nuget.org/api/v2/package/FirebirdSql.Data.FirebirdClient-EF6/4.0.0</a> (support Entity Framework)</p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/GSMComm/1.21.0">https://www.nuget.org/api/v2/package/GSMComm/1.21.0</a></p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/Newtonsoft.Json/5.0.8">https://www.nuget.org/api/v2/package/Newtonsoft.Json/5.0.8</a></p></li>
<li><p><a href="https://www.nuget.org/api/v2/package/RestSharp/104.4.0">https://www.nuget.org/api/v2/package/RestSharp/104.4.0</a></p></li>
</ul>


<p>Jangan lupa hasil downloadnya disimpan di folder package.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/18.png"><img src="http://coding4ever.files.wordpress.com/2014/03/18.png" alt="18" /></a></p>

<p>Setelah itu kita cek lagi paket di server NuGet lokal.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/19.png"><img src="http://coding4ever.files.wordpress.com/2014/03/19.png" alt="19" /></a></p>

<p>Sippp, paket di server NuGet lokal kita sudah tersedia :)</p>

<p><strong>5. Menambahkan url server NuGet lokal ke package sources</strong></p>

<p>Saatnya mendaftarkan server NuGet kita ke Visual Studio, langkah-langkahnya seperti berikut :</p>

<ul>
<li><p>Jalankan Visual Studio .NET (saya menggunakan versi 2010)</p></li>
<li><p>Klik menu Tools -> NuGet Package Manager -> Package Manager Settings</p></li>
<li><p>Aktifkan node Package Source, klik tombol Add/Tambah</p></li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/20.png"><img src="http://coding4ever.files.wordpress.com/2014/03/20.png" alt="20" /></a></p>

<ul>
<li>Isikan Name dan Source, klik Update akhiri dengan Ok.</li>
</ul>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/211.png"><img src="http://coding4ever.files.wordpress.com/2014/03/211.png" alt="21" /></a></p>

<p>Terakhir coba aktifkan dialog NuGet Package Manager, kemudian cek pilihan &ldquo;Server Nuget Local&rdquo;.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/22.png"><img src="http://coding4ever.files.wordpress.com/2014/03/22.png" alt="22" /></a></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet]]></title>
    <link href="http://coding4ever.net/blog/2014/03/11/nuget/"/>
    <updated>2014-03-11T12:48:22+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/11/nuget</id>
    <content type="html"><![CDATA[<p><img style="float: left; margin:0 10px 10px 0;width:200px;height:70px" src="http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png" /><strong>NuGet adalah &hellip;</strong></p>

<p><em>NuGet is the package manager for the Microsoft development platform including .NET. The NuGet client tools provide the ability to produce and consume packages. The <a href="http://www.nuget.org/">NuGet Gallery</a> is the central package repository used by all package authors and consumers</em>.</p>

<p>Jadi dengan memanfaatkan NuGet package manager, kita bisa dengan mudah menginstall library-library tambahan dari pihak ketiga (3rd party libraries), seperti <a href="http://www.nuget.org/packages/Dapper/">Dapper .NET</a>, <a href="http://www.nuget.org/packages/EntityFramework/6.0.2">Entity Framework</a>, <a href="http://www.nuget.org/packages/Newtonsoft.Json/">Json .NET</a>, <a href="http://www.nuget.org/packages/FirebirdSql.Data.FirebirdClient/">Firebird ADO.NET Data provider</a> dan lainnya.</p>

<!-- more -->


<p>Sayangnya NuGet hanya support untuk Visual Studio 2010, 2012 dan tentunya Visual Studio dengan versi terbaru.</p>

<p><strong>Cara Instalasi</strong></p>

<p>Ada beberapa cara untuk menginstall NuGet, salah satunya adalah dengan menggunakan Visual Studio Extension Manager.</p>

<p>Berikut langkah-langkahnya :</p>

<ol>
<li><p>Aktifkan Visual Studio .NET, untuk contoh disini saya menggunakan Visual Studio 2010</p></li>
<li><p>Klik menu Tools -> Extension Manager. Aktifkan pilihan Online Gallery, cari NuGet Package Manager kemudian klik tombol Download.</p></li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/1.png"><img src="http://coding4ever.files.wordpress.com/2014/03/1.png" alt="1" /></a></p>

<p>Tunggu sampai proses download selesai.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/2.png"><img src="http://coding4ever.files.wordpress.com/2014/03/2.png" alt="2" /></a></p>

<ol>
<li>Kemudian akan nampil dialog Installer, klik tombol Install</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/3.png"><img src="http://coding4ever.files.wordpress.com/2014/03/3.png" alt="3" /></a></p>

<ol>
<li>Setelah proses instalasi selesai restart Visual Studio Anda.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/4.png"><img src="http://coding4ever.files.wordpress.com/2014/03/4.png" alt="4" /></a></p>

<p>Dan NuGet package manager siap digunakan :)</p>

<p><strong>Cara Penggunaan</strong></p>

<p>Cara penggunaan NuGet package manager sangat mudah, sebagai contoh kita akan menambahkan library <a href="http://coding4ever.wordpress.com/category/visual-c/dapper-net-visual-c-net/">Dapper .NET</a>.</p>

<ol>
<li>Buat project baru, misal dengan tipe Console Application</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/5.png"><img src="http://coding4ever.files.wordpress.com/2014/03/5.png" alt="5" /></a></p>

<ol>
<li>Klik kanan References -> Manage NuGet Packages</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/6.png"><img src="http://coding4ever.files.wordpress.com/2014/03/6.png" alt="6" /></a></p>

<ol>
<li>Pada kota pencarian ketik Dapper, kemudian klik tombol Install</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/7.png"><img src="http://coding4ever.files.wordpress.com/2014/03/7.png" alt="7" /></a></p>

<p>kemudian tunggu sampai proses instalasi selesai.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/8.png"><img src="http://coding4ever.files.wordpress.com/2014/03/8.png" alt="8" /></a></p>

<ol>
<li><p>Tutup dialog NuGet package</p></li>
<li><p>Kemudian cek node references, seharusnya library Dapper .NET sudah terinstall.</p></li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2014/03/9.png"><img src="http://coding4ever.files.wordpress.com/2014/03/9.png" alt="9" /></a></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Repository Coding4ever]]></title>
    <link href="http://coding4ever.net/blog/2014/03/10/repository-coding4ever/"/>
    <updated>2014-03-10T14:52:06+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/10/repository-coding4ever</id>
    <content type="html"><![CDATA[<p>Untuk mempermudah mengakses source code coding4ever, beberapa source code terbaru sudah saya push ke repository <a href="https://github.com/">GitHub</a>, dan sisanya menyusul :D</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/github1.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/github1.jpg" alt="github" /></a></p>

<p>Link repository : <a href="https://github.com/k4m4r82?tab=repositories">https://github.com/k4m4r82</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Q & A]]></title>
    <link href="http://coding4ever.net/blog/2014/03/10/q-a/"/>
    <updated>2014-03-10T12:56:14+07:00</updated>
    <id>http://coding4ever.net/blog/2014/03/10/q-a</id>
    <content type="html"><![CDATA[<p>Alhamdulillah &hellip;</p>

<p>Engga terasa komen di blog ini sudah lebih dari 7000 :)</p>

<p>Jadi saya mohon maaf jika ada pertanyaan yang terlewatkan baik karena memang lagi males ngecek komentar :D atau karena terbatasnya ilmu.</p>

<p><a href="http://coding4ever.files.wordpress.com/2014/03/comment.jpg"><img src="http://coding4ever.files.wordpress.com/2014/03/comment.jpg" alt="comment" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Menembus Pertahanan Database Firebird Yang Diproteksi Bagian 2]]></title>
    <link href="http://coding4ever.net/blog/2013/06/25/menembus-pertahanan-database-firebird-yang-diproteksi-bagian-2/"/>
    <updated>2013-06-25T11:04:17+07:00</updated>
    <id>http://coding4ever.net/blog/2013/06/25/menembus-pertahanan-database-firebird-yang-diproteksi-bagian-2</id>
    <content type="html"><![CDATA[<p>Postingan saya kali ini merupakan jawaban untuk om guys yang sudah berhasil <a href="https://coding4ever.wordpress.com/2011/01/03/menembus-pertahanan-database-firebird-yang-diproteksi/">Menembus pertahanan database Firebird yang diproteksi</a> tetapi masih ada sedikit masalah yang perlu diselesaikan.</p>

<p>Biar lebih lengkap saya tulis ulang saja pertanyaannya.</p>

<blockquote><p>thx beart om admin buat tutor singkatnya, sangat bermanfaat.
ada sedikit masalah, setelah kita “bongkar” db zahir-nya ternyata ga bisa di pake lagi di aplikasi Zahirnya ya. Harus kita balikin lagi setting FB-nya ke default/original (khususnya user ZAHIRDBA).
ada work-around-nya untuk masalah ini om admin?</p></blockquote>

<!-- more -->


<p>Jadi langkah-langkah berikut ini akan menghapus role &ldquo;SYSDBA&rdquo; sehingga kita bisa login lagi menggunakan user default Firebird yaitu SYSDBA.</p>

<p>Berikut langkah-langkahnya :</p>

<ol>
<li><p>Sudah berhasil <a href="https://coding4ever.wordpress.com/2011/01/03/menembus-pertahanan-database-firebird-yang-diproteksi/">menembus pertahanan database Firebird yang diproteksi</a></p></li>
<li><p>Login menggunakan user ZAHIRDBA</p></li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2013/06/25062013-1.png"><img src="http://coding4ever.files.wordpress.com/2013/06/25062013-1.png" alt="25062013-1" /></a></p>

<ol>
<li>Hapus role SYSDBA menggunakan perintah</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DELETE FROM rdb$roles
</span><span class='line'>WHERE rdb$role_name = 'SYSDBA' AND rdb$owner_name = 'ZAHIRDBA'</span></code></pre></td></tr></table></div></figure>


<p><a href="http://coding4ever.files.wordpress.com/2013/06/25062013-2.png"><img src="http://coding4ever.files.wordpress.com/2013/06/25062013-2.png" alt="25062013-2" /></a></p>

<p>sampai tahap ini kita sudah bisa menggunakan user sysdba lagi</p>

<ol>
<li>Login ulang menggunakan user SYSDBA</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2013/06/25062013-3.png"><img src="http://coding4ever.files.wordpress.com/2013/06/25062013-3.png" alt="25062013-3" /></a></p>

<ol>
<li>Hapus user ZAHIRDBA dari menu Tools -> User Manager</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2013/06/25062013-4.png"><img src="http://coding4ever.files.wordpress.com/2013/06/25062013-4.png" alt="25062013-4" /></a></p>

<ol>
<li>Selesai :)</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2013/06/25062013-5.png"><img src="http://coding4ever.files.wordpress.com/2013/06/25062013-5.png" alt="25062013-5" /></a></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
</feed>
