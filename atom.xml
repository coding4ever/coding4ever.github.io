<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2016-01-10T11:09:28+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Paket NuGet Yang Wajib Dicoba Bagian #2 - AutoUpdater.NET]]></title>
    <link href="http://coding4ever.net/blog/2016/01/10/paket-nuget-yang-wajib-dicoba-bagian-number-2-autoupdater-dot-net/"/>
    <updated>2016-01-10T10:35:44+07:00</updated>
    <id>http://coding4ever.net/blog/2016/01/10/paket-nuget-yang-wajib-dicoba-bagian-number-2-autoupdater-dot-net</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png" width="120" height="100">Masalah update program adalah masalah klasik bagi para programmer aplikasi desktop. Apakah itu untuk perbaikan bug atau penambahan fitur baru. Bagaimana tidak, biasanya kita selalu disibukan dengan masalah yang satu ini. Update… update… dan update … :-D apalagi dengan jumlah klien yang banyak wahhhh cape deh :&lsquo;(</p>

<!-- more -->


<p>Sebenarnya proses update sendiri pada dasarnya adalah masalah sederhana <em>&ldquo;tinggal copy program yang baru untuk menimpa program yang lama&rdquo;</em>. Nah permasalahan biasanya muncul jika yang harus melakukan update adalah klien kita yang mungkin cuma bisa ngetik di word atau mantan operator dos yang baru pindah ke windows de el el.</p>

<p>Jadi merupakan ide yang baik untuk memberikan notifikasi (pemberitahuan) kepada end-user, bahwa ada updatean terbaru untuk aplikasi yang mereka gunakan.</p>

<p>Sehingga dengan adanya program update yang baik <code>User nyaman kita pun senang</code> :-D.</p>

<p><a href="http://www.nuget.org/packages/AutoupdaterdotNet/">AutoUpdater.NET</a> adalah salah satu library gratis yang bisa menjadi solusi untuk masalah ini dengan konfigurasi yang mudah sehingga proses update-pun menjadi menyenangkan.</p>

<p>Sebelum menggunakan library <a href="http://www.nuget.org/packages/AutoupdaterdotNet/">AutoUpdater.NET</a> ada beberapa hal yang perlu dipersiapkan :</p>

<h5>1. File exe versi terakhir</h5>

<p>File exe ini akan kita simpan di server, file inilah yang akan didownload oleh klien jika ada updatean terbaru. Jika akan mengupdate beberapa file sekaligus, misal selain mengupdate file exe juga mengupdate file <a href="https://en.wikipedia.org/wiki/Dynamic-link_library">dll</a>, untuk kasus seperti ini kita bisa menggunakan <a href="http://coding4ever.net/blog/categories/tools-installer/">paket installer</a>.</p>

<p>Ada banyak <a href="http://coding4ever.net/blog/categories/tools-installer/">tools gratis</a> untuk membuat <a href="http://coding4ever.net/blog/categories/tools-installer/">paket installer</a> seperti <a href="http://coding4ever.net/blog/categories/inno-setup/">Inno Setup</a> dan <a href="(http://coding4ever.net/blog/categories/nsis/">NSIS</a>. Untuk contoh pembuatan paket installer update bisa dilihat di <a href="http://coding4ever.net/blog/2009/12/29/membuat-paket-instalasi-update-program-menggunakan-inno-setup/">sini</a> dan <a href="http://coding4ever.net/blog/2009/12/29/membuat-paket-instalasi-update-program-menggunakan-nsis/">sini</a>.</p>

<h5>2. File Info Rilis</h5>

<p>File info rilis akan kita simpan di server. File ini berfungsi sebagai informasi bagi aplikasi klien apakah ada update-an terbaru atau tidak. File ini dibuat dengan menggunakan format XML. Contoh :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="UTF-8"?>
</span><span class='line'>&lt;item>
</span><span class='line'>  &lt;title>Sistem Informasi Manufaktur&lt;/title>
</span><span class='line'>  &lt;version>1.3.1.0&lt;/version>
</span><span class='line'>  &lt;url>http://xxxxx.xxx/online-update/manufactur/auto-updater.exe&lt;/url> 
</span><span class='line'>&lt;/item></span></code></pre></td></tr></table></div></figure>


<h5>3. Web Server</h5>

<p>Anda bisa menggunakan IIS, Apache atau web server lainnya. Di web server ini kita akan menyimpan file exe dan info rilis (poin 1 dan 2).</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-01.png"></p>

<h5>Menambahkan Library AutoUpdater.NET</h5>

<p>Untuk menambahkan library <a href="http://www.nuget.org/packages/AutoupdaterdotNet/">AutoUpdater.NET</a> bisa kita lakukan via <a href="http://coding4ever.net/blog/categories/nuget/">NuGet Package Manager</a>. Adapun caranya seperti berikut :</p>

<h6>1. Klik kanan node References -> Manage NuGet Packages&hellip;</h6>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-02.png"></p>

<h6>2. Cari AutoUpdater.NET dan klik tombol Install</h6>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-03.png"></p>

<p>Klik tombol Close, kemudian cek node <code>References</code>, seharusnya sudah ada tambahan library <code>AutoUpdater.NET</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-04.png"></p>

<h5>Cara Penggunaan Library AutoUpdater.NET</h5>

<p>Cara penggunaan <a href="http://www.nuget.org/packages/AutoupdaterdotNet/">AutoUpdater.NET</a> sangat mudah, kita cukup menambahkan beberapa kode berikut di form utama.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-05.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-06.png"></p>

<p>Pada kode di atas method <code>Start</code> kita arahkan ke url :<br><a href="http://localhost/update/DemoAutoUpdaterDotNet.xml">http://localhost/update/DemoAutoUpdaterDotNet.xml</a></p>

<p>Adapun isi dari file <code>DemoAutoUpdaterDotNet.xml</code> seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="UTF-8"?>
</span><span class='line'>&lt;item>
</span><span class='line'>  &lt;title>Demo AutoUpdater.Net&lt;/title>
</span><span class='line'>  &lt;version>1.1.0.0&lt;/version>
</span><span class='line'>  &lt;url>http://localhost/update/DemoAutoUpdaterDotNet.exe&lt;/url> 
</span><span class='line'>&lt;/item></span></code></pre></td></tr></table></div></figure>


<h5>Demo AutoUpdater.NET</h5>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/100116-071.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoOnlineBackup">MENCOBA</a> :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Online Backup Database]]></title>
    <link href="http://coding4ever.net/blog/2016/01/06/online-backup-database/"/>
    <updated>2016-01-06T14:42:52+07:00</updated>
    <id>http://coding4ever.net/blog/2016/01/06/online-backup-database</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2016/01/google-drive.png" width="100" height="100"><a href="http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/">Backup database lokal</a> saja ternyata tidak cukup, paling tidak itu yang saya rasakan ketika salah satu klien saya hardisk servernya <code>tewas</code> :-D. Padahal dulu itu saya sudah menyarankan untuk menggunakan UPS, tapi katanya &ldquo;<em>kalo pake UPS, fitur  powerON di biosnya jadi gak jalan&hellip;</em>&rdquo; dan saya maklum karena servernya memang ON 24 jam dan memang tidak ada petugas khusus yang mengONkan servernya kalo pas lagi OFF.
Jadi kita memang dituntut untuk memberikan solusi untuk masalah ini, terutama solusi yang murah meriah he he :-D</p>

<!-- more -->


<p>Salah satu solusinya adalah dengan memanfaatkan media penyimpanan online yang memang sudah terbukti handal dan gratis yaitu <code>Google Drive</code>. Dengan <code>Google Drive</code> limit ukuran file yang bisa diupload adalah maksimal 5GB.</p>

<p>Kita langsung saja berikut adalah langkah-langkah untuk mengakses layanan/API dari <code>Google Drive</code> atau layanan Google lainnya.</p>

<h5>1. Membuat Client id</h5>

<p>Untuk membuat client id, kita bisa langsung mengakses link <a href="https://console.developers.google.com/">Google Developer Console</a> kemudian login menggunakan email google Anda</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-19.png"></p>

<h5>2. Membuat project</h5>

<p>Klik menu Select a project -> Create a project…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-01.png"></p>

<p>Kemudian isikan nama project, misal <code>OnlineBackup</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-02.png"></p>

<h5>3. Mengaktifkan Google API</h5>

<p>Dari menu dashboard klik link <code>Use Google APIs</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-03.png"></p>

<p>Secara default google sudah mengaktifkan beberapa API yang bisa kita akses dari aplikasi</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-04.png"></p>

<p>Dari daftar api di atas kita belum menemukan API untuk mengakses google drive, sehingga API ini harus kita aktifkan secara manual dengan mengklik link <code>Google APIs</code> kemudian di kotak pencarian ketik <code>Drive API</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-05.png"></p>

<p>Selanjutnya klik link <code>Drive API</code> kemudian pilih <code>Enable API</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-06.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-07.png"></p>

<h5>4. Membuat Credential</h5>

<p>Sebelum layanan/API <code>Google Drive</code> ini bisa kita akses, kita harus membuat <code>Credential</code> terlebih dulu sebagai otorisasi bahwa kita adalah memang orang yang berhak untuk mengakses layanan ini.</p>

<p>Untuk membuat <code>Credential</code> klik menu <code>Credentials</code> kemudian pilih <code>OAuth client ID</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-08.png"></p>

<p>Kemudian klik menu <code>Configure consent screen</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-09.png"></p>

<p>Isikan datanya sesuai kebutuhan</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-10.png"></p>

<p>Selanjutnya kita akan menentukan jenis aplikasi yang akan mengakses API ini. Untuk contoh disini saya menggunakan aplikasi console.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-11.png"></p>

<p>Jika berhasil kita akan mendapatkan informasi <code>client ID</code> dan <code>client secret</code>. Informasi ini akan kita gunakan untuk mengakses layanan/API google drive ataupun layanan lainnya.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-12.png"></p>

<h5>5. Menyiapkan folder backup</h5>

<p>Langkah berikutnya adalah masuk ke <code>Google Drive</code> kemudian kita buat folder untuk backup database. Setelah membuat folder ini, kita perlu mengetahui informasi <code>folder id</code> dari folder backup ini. Untuk mendapatkan <code>folder id</code> bisa kita lihat dibagian address bar.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-13.png"></p>

<p>Pada gambar di atas <code>folder id</code> dari folder <code>Backup Database</code> ini adalah : <code>0B5aEAoHOGHqkelgzM2cxVncxNGM</code>.</p>

<p>Simpan informasi ini karena akan digunakan untuk mengakses folder Backup Database ini via aplikasi.</p>

<h5>6. Membuat aplikasi client</h5>

<p>Untuk contoh di sini kita akan menggunakan <code>aplikasi console</code> untuk mendemokan proses upload file ke Google Drive. Artinya aplikasi ini akan dijalankan via batch command atau command prompt.</p>

<p>Aplikasi ini juga membutuhkan dua library pihak ketiga yaitu <a href="https://www.nuget.org/packages/Google.Apis.Drive.v2/">Google.Apis.Drive.v2</a> dan <a href="https://www.nuget.org/packages/DotNetZip/">DotNetZip</a> yang bisa diinstall via <a href="http://coding4ever.net/blog/categories/nuget/">NuGet</a>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-14.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-15.png"></p>

<p>File backup database yang akan kita upload adalah file backup yang sudah kita buatkan versi kompresnya, disini kita menggunakan library <a href="https://www.nuget.org/packages/DotNetZip/">DotNetZip</a>.
Contoh kodenya  seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CreateZip</span><span class="p">(</span><span class="kt">string</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="kt">string</span> <span class="n">fileBackup</span><span class="p">,</span> <span class="kt">string</span> <span class="n">extension</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">fileToZip</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">@&quot;{0}\{1}.zip&quot;</span><span class="p">,</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="n">fileBackup</span><span class="p">);</span>
</span><span class='line'>    <span class="n">fileBackup</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">@&quot;{0}\{1}.{2}&quot;</span><span class="p">,</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="n">fileBackup</span><span class="p">,</span> <span class="n">extension</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">zip</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ZipFile</span><span class="p">())</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\nAdding {0}...&quot;</span><span class="p">,</span> <span class="n">fileBackup</span><span class="p">);</span>
</span><span class='line'>        <span class="n">ZipEntry</span> <span class="n">e</span> <span class="p">=</span> <span class="n">zip</span><span class="p">.</span><span class="n">AddFile</span><span class="p">(</span><span class="n">fileBackup</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">zip</span><span class="p">.</span><span class="n">Save</span><span class="p">(</span><span class="n">fileToZip</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Setelah berhasil membuat file zipnya, tinggal upload ke google drive. Berikut contoh kodenya :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">UploadToGoogleDrive</span><span class="p">(</span><span class="kt">string</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="kt">string</span> <span class="n">fileBackup</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// TODO : disesuaikan dengan nilai clientId dan clientSecret Anda</span>
</span><span class='line'>    <span class="c1">//        setting ini juga bisa disimpan di file App.config</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">clientId</span> <span class="p">=</span> <span class="s">&quot;505165741497-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">clientSecret</span> <span class="p">=</span> <span class="s">&quot;6Nxxxxxx-xxxxxxxxxxxxxxx&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">var</span> <span class="n">service</span> <span class="p">=</span> <span class="n">GoogleDriveHelper</span><span class="p">.</span><span class="n">AuthenticateOauth</span><span class="p">(</span><span class="n">clientId</span><span class="p">,</span> <span class="n">clientSecret</span><span class="p">,</span> <span class="n">Environment</span><span class="p">.</span><span class="n">UserName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">service</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Authentication error&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Sedang proses upload ...&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// TODO : disesuaikan dengan nilai folder id Anda</span>
</span><span class='line'>        <span class="c1">//        setting ini juga bisa disimpan di file App.config</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">folderId</span> <span class="p">=</span> <span class="s">&quot;0B5xxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// upload file</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">fileToUpload</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0}\\{1}.zip&quot;</span><span class="p">,</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="n">fileBackup</span><span class="p">);</span>
</span><span class='line'>        <span class="n">File</span> <span class="n">newFile</span> <span class="p">=</span> <span class="n">GoogleDriveHelper</span><span class="p">.</span><span class="n">UploadFile</span><span class="p">(</span><span class="n">service</span><span class="p">,</span> <span class="n">fileToUpload</span><span class="p">,</span> <span class="n">folderId</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">catch</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;\nUpload file gagal !&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">finally</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// hapus file yang berhasil diupload</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">fileToDelete</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0}\\{1}.zip&quot;</span><span class="p">,</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="n">fileBackup</span><span class="p">);</span>
</span><span class='line'>        <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">File</span><span class="p">.</span><span class="n">Delete</span><span class="p">(</span><span class="n">fileToDelete</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Method <code>UploadToGoogleDrive</code> di atas membutuhkan class <a href="https://github.com/k4m4r82/DemoOnlineBackup/blob/master/src/DemoOnlineBackup/GoogleDriveHelper.cs">GoogleDriveHelper</a> yang bisa Anda cek di <a href="https://github.com/k4m4r82/DemoOnlineBackup/blob/master/src/DemoOnlineBackup/GoogleDriveHelper.cs">sini</a>.</p>

<p>Method <code>CreateZip</code> dan <code>UploadToGoogleDrive</code> di atas mempunyai parameter seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">void</span> <span class="nf">CreateZip</span><span class="p">(</span><span class="kt">string</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="kt">string</span> <span class="n">fileBackup</span><span class="p">,</span> <span class="kt">string</span> <span class="n">extension</span><span class="p">)</span>
</span><span class='line'><span class="k">void</span> <span class="nf">UploadToGoogleDrive</span><span class="p">(</span><span class="kt">string</span> <span class="n">pathFileBackup</span><span class="p">,</span> <span class="kt">string</span> <span class="n">fileBackup</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nilai masing-masing parameter di atas kita isi pada saat memanggil aplikasi via batch command atau command prompt. Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-16.png"></p>

<p>Dan untuk mendapatkan nilainya, kita bisa mengakses parameter <code>args</code> dari method Main.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-17.png"></p>

<h5>7. Menjalankan aplikasi client via batch command</h5>

<p>Untuk menjalankan aplikasi di atas kita bisa menggunakan batch command. Untuk contoh kodenya menggunakan database MySQL :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for /f "tokens=2-4 delims=/ " %%a in ('date /T') do set year=%%c
</span><span class='line'>for /f "tokens=2-4 delims=/ " %%a in ('date /T') do set month=%%a
</span><span class='line'>for /f "tokens=2-4 delims=/ " %%a in ('date /T') do set day=%%b
</span><span class='line'> 
</span><span class='line'>for /f "tokens=1 delims=: " %%h in ('time /T') do set hour=%%h
</span><span class='line'>for /f "tokens=2 delims=: " %%m in ('time /T') do set minutes=%%m
</span><span class='line'>for /f "tokens=3 delims=: " %%a in ('time /T') do set ampm=%%a
</span><span class='line'>
</span><span class='line'>rem membuat file backup database dengan format nama_database-tahun-bulan-hari_jam_menit 
</span><span class='line'>set FILE_BACKUP=pulsa-%year%-%month%-%day%_%hour%-%minutes%-%ampm%
</span><span class='line'>set LOKASI_BACKUP=D:\BackupDatabase\backups
</span><span class='line'>set FILE_EXTENSION=sql
</span><span class='line'>
</span><span class='line'>rem set user dan password mysql
</span><span class='line'>set USER_MYSQL=root
</span><span class='line'>set PASS_MYSQL=rahasia
</span><span class='line'>
</span><span class='line'>rem USER_NAME, USER_PASSWORD dan NAMA_DATABASE menyesuaikan
</span><span class='line'>mysqldump -u%USER_MYSQL% -p%PASS_MYSQL% pulsa > %LOKASI_BACKUP%\%FILE_BACKUP%.%FILE_EXTENSION%
</span><span class='line'>
</span><span class='line'>D:\BackupDatabase\DemoOnlineBackup.exe %LOKASI_BACKUP% %FILE_BACKUP% %FILE_EXTENSION%</span></code></pre></td></tr></table></div></figure>


<p>Kemudian kode di atas kita simpan dengan nama <code>backup.cmd</code> di folder <code>Instalasi MySQL\bin</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-18.png"></p>

<p>Agar proses backup ini bisa otomatis dan terjadwal kita bisa memanfaatkan <a href="http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/">Windows Task Scheduler</a>.</p>

<p>Terakhir hasil tes kode di atas berhasil mengupload file ke Google Drive dengan lancar :-)</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2016/01/060116-20.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoOnlineBackup">MENCOBA</a> :-)</p>

<p>Referensi :</p>

<ul>
<li><a href="http://www.daimto.com/google-drive-api-c-upload/">Google Drive API with C# .net – Upload, update, patch, delete,trash</a></li>
<li><a href="https://github.com/LindaLawton/Google-Dotnet-Samples">Google-Dotnet-Samples</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Performance Test Menggunakan JMeter]]></title>
    <link href="http://coding4ever.net/blog/2015/10/20/performance-test-menggunakan-jmeter/"/>
    <updated>2015-10-20T09:26:38+07:00</updated>
    <id>http://coding4ever.net/blog/2015/10/20/performance-test-menggunakan-jmeter</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/10/apache-jmeter.png" width="100" height="100">Aktivitas saya di kantor akhir-akhir ini, lebih sering ngoding untuk backend/web service. Nah untuk membuat service ini, saya biasanya menggunakan teknologi <a href="http://coding4ever.net/blog/categories/wcf/">WCF</a>, hanya saja untuk <code>kekinian</code> :-D saya juga menggunakan <a href="http://www.asp.net/web-api">ASP.NET Web Api</a>.</p>

<p>Untuk tahapan testing wajib yang saya lakukan adalah minimal <a href="https://en.wikipedia.org/wiki/Unit_testing">unit test</a>. <a href="https://en.wikipedia.org/wiki/Unit_testing">Unit test</a> yang dilakukan biasanya di level DAL (Data Access Layer) dan Controller.</p>

<!-- more -->


<p><a href="https://en.wikipedia.org/wiki/Unit_testing">Unit testing</a> ini merupakan bagian dari <code>white box testing</code> karena testing ini dieksekusi langsung oleh programmer. Sedangkan untuk <code>black box testing</code> bisa dilakukan menggunakan aplikasi sejenis <a href="http://www.telerik.com/fiddler">Fiddler</a> atau menggunakan add-ons yang dimiliki oleh browser-browser seperti Mozilla Firefox dan Google Chrome.</p>

<p>Karena service ini nantinya akan digunakan oleh banyak client dan user, tentu akan <code>ngeri-ngeri sedap</code>  :-D jika testingnya masih dilakukan secara manual. Jadi sebaiknya kita menggunakan <a href="http://www.softwaretestinghelp.com/performance-testing-tools-load-testing-tools/">Performance Test Tool</a> untuk proses ini.</p>

<p>Ada banyak <a href="http://www.softwaretestinghelp.com/performance-testing-tools-load-testing-tools/">Performance Test Tool</a> yang tersedia baik yang gratis maupun yang berbayar. Untuk postingan kali ini saya menggunakan <a href="http://jmeter.apache.org/">JMeter</a>.</p>

<p>Apa itu <a href="http://jmeter.apache.org/">JMeter</a> ?</p>

<blockquote><p>The Apache JMeter™ application is open source software, a 100% pure Java application designed to load test functional behavior and measure performance. It was originally designed for testing Web Applications but has since expanded to other test functions</p></blockquote>

<p>Berikut langkah-langkah menggunakan <a href="http://jmeter.apache.org/">JMeter</a> :</p>

<h5>1. Download <a href="http://jmeter.apache.org/download_jmeter.cgi">JMeter</a> kemudian ekstrak, misal di drive C:\</h5>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-1.png"></p>

<h5>2. Untuk menjalankan <a href="http://jmeter.apache.org/">JMeter</a>, klik ganda file <code>jmeter.bat</code> yang ada di folder <code>bin</code></h5>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-2.png"></p>

<p>Tunggu beberapa saat sampai tampil, aplikasi <a href="http://jmeter.apache.org/">JMeter</a></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-3.png"></p>

<p>Kemudian ganti informasi Name, sesuai kebutuhan. Misal <code>Performance Test Web Service Presensi</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-4.png"></p>

<h5>3. Menambahkan User Defined Variables</h5>

<p>Di node ini kita akan menambahkan informasi global yang sering digunakan pada saat testing seperti informasi <code>host</code> dan <code>port</code>.</p>

<p>Untuk menambahkan node <code>User Defined Variables</code> klik kanan node Test Plan (Performance Test Web Service Presensi) -> Add -> Config Element -> User Defined Variables.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-5.png"></p>

<p>Kemudian lakukan pengaturan <code>User Defined Variables</code> seperti gambar berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-6.png"></p>

<p>Pada gambar di atas kita menambahkan dua variabel yaitu <code>host</code> dan <code>port</code>. Nah variabel-variabel ini nantinya akan digunakan pada langkah-langkah berikutnya.</p>

<h5>4. Menambahkan HTTP Header Manager</h5>

<p>Setelah menambahkan node <code>User Defined Variables</code>, kita lanjutkan dengan menambahkan node <code>HTTP Header Manager</code>. Langkah-langkahnya sama seperti menambahkan node <code>User Defined Variables</code>, hanya saja yang dipilih adalah <code>HTTP Header Manager</code>.</p>

<p>Di node ini kita akan menambahkan informasi apa saja yang dikirimkan <a href="http://jmeter.apache.org/">JMeter</a> ke HTTP request header.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-7.png"></p>

<h5>5. Menambahkan HTTP Request Defaults</h5>

<p>Langkah berikutnya adalah menambahkan node <code>HTTP Request Defaults</code>, caranya juga sama seperti sebelumnya hanya saja yang dipilih node <code>HTTP Request Defaults</code>.</p>

<p>Di node ini kita cukup mengeset informasi nama server/ip address, port dan protocol.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-8.png"></p>

<p>Karena sebelumnya kita sudah mendefinisikan nama host dan port di node <code>User Defined Variables</code>, di node ini kita tinggal panggil variabel tersebut dengan format : ${<strong>NAMA_VARIABEL</strong>}.</p>

<h5>6. Menambahkan Thread Group</h5>

<p>Node ini digunakan untuk mengelompokan service yang akan di tes. Misal kita mempunyai service Mahasiswa dan Dosen, kedua service ini sebaiknya dibuatkan <code>Thread Group</code> masing-masing.</p>

<p>Untuk menambahkan node <code>Thread Group</code> klik kanan node Test Plan (Performance Test Web Service Presensi) -> Add -> Threads (Users) -> Thread Group.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-9.png"></p>

<p>Kemudian atur settingnya seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-10.png"></p>

<p>Dari setting di atas, kita akan membuat skenario <code>performance test</code> seperti berikut :</p>

<ul>
<li>Jumlah user sebanyak 50 orang</li>
<li>Setiap 2 detik (100/50), akan mengirimkan 6 request ke server.</li>
<li>Total jumlah sample = 300 (50 x 6)</li>
</ul>


<p>Skenario <code>performance test</code> ini bisa diganti-ganti nilainya sesuai kebutuhan.</p>

<h5>7. Menambahkan HTTP Request</h5>

<p>Setelah menentukan skenario <code>performance test</code>, langkah berikutnya adalah menambahkan node <code>HTTP Request</code>. Di node inilah kita akan menentukan web service yang akan di tes. Misal web service mahasiswa mempunyai dua layanan yaitu <code>GetByID</code> dan <code>GetByName</code>. Nah dua layanan ini akan kita tambahkan sebagi bagian dari <code>HTTP Request</code>.</p>

<p>Untuk menambahkan node <code>HTTP Request</code> klik kanan node Thread Group (Web Service Mahasiswa) -> Add -> Sampler -> HTTP Request.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-11.png"></p>

<p>Kemudian atur settingnya seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-12.png"></p>

<p>Dari gambar di atas, informasi web servicenya sebagai berikut :</p>

<ul>
<li>Nama service : <code>GetById</code></li>
<li>Path/Url : <code>/Api/Mahasiswa/GetById</code></li>
<li>Service ini mempunyai satu parameter yaitu <code>id</code>, yang kita set nilainya <code>09.01.2488</code></li>
<li>Informasi server name/ip dan port number tidak perlu di set, karena sudah kita set nilainya di node <code>HTTP Request Defaults</code></li>
</ul>


<p>Ulangi langkah sebelumnya untuk menambahkan service yang lain.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-13.png"></p>

<h5>8. Menambahkan report untuk menampilkan hasil Performance test</h5>

<p>Ada beberapa format laporan yang digunakan untuk menampilkan hasil performance test yaitu :</p>

<ul>
<li>View Results in Table</li>
<li>View Results Tree</li>
<li>Response Times Over Time</li>
<li>Transactions per Second</li>
<li>Statistical Aggregate Report</li>
<li>Summary Report</li>
</ul>


<p>Untuk menambahkan semua format laporan di atas klik kanan node Thread Group (Web Service Mahasiswa) -> Add -> Listener -> Pilih jenis laporan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-14.png"></p>

<h5>9. Menjalankan Performance test</h5>

<p>Untuk menjalankan performance test, kita tinggal mengklik toolbar <code>Start</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-15.png"></p>

<p><code>Performance test</code> ini di jalankan menggunakan <code>Environment Test</code> sebagai berikut :</p>

<h5>Server Web Service :</h5>

<ul>
<li>Sistem Operasi : Windows Server 2008 64 Bit</li>
<li>Web Server : IIS 7</li>
<li>Teknologi/framwork REST Service : ASP.NET Web API 2</li>
<li>Processor : Intel Xeon X5570 2.93 Ghz</li>
<li>RAM : 12 GB</li>
</ul>


<h5>Server Database :</h5>

<ul>
<li>Sistem Operasi : Windows Server 2012 64 Bit</li>
<li>Database : SQL Server 2014</li>
<li>Processor : Intel Xeon E5-2620 v2 2.10 Ghz</li>
<li>RAM : 24 Gb</li>
</ul>


<h5>10. Contoh Hasil Performance Test</h5>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-16.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-17.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-18.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-19.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-20.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/10/201015-21.png"></p>

<p>Sebagai penutup saya belum menemukan referensi yang tepat bagaimana cara menganalisa hasil dari <code>performance test</code> di atas, tetapi biasanya yang saya jadikan acuan adalah hasil yang bisa dilihat melalui node <code>View Results in Table</code> kolom Status, dari node ini kelihatan apakah ada request service yang berstatus <code>Warning</code>. Jika ada mungkin ini bisa menjadi bahan acuan apakah service kita masih perlu di-<code>improve</code> lagi atau skenario <code>performance test</code> yang perlu diganti atau karena faktor lainnya seperti kondisi jaringan yang lagi <code>enggak fit</code> pada saat melakukan tes :-D.</p>

<p>Selamat mencoba :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Power of Visual Studio .NET Build Events Part #3]]></title>
    <link href="http://coding4ever.net/blog/2015/07/04/the-power-of-visual-studio-net-build-events-part-number-3/"/>
    <updated>2015-07-04T23:31:23+07:00</updated>
    <id>http://coding4ever.net/blog/2015/07/04/the-power-of-visual-studio-net-build-events-part-number-3</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/06/260615-00.png" width="100" height="100">Masih melanjutkan pembahasan tentang <a href="http://coding4ever.net/blog/categories/build-events/">build events</a> yang merupakan salah satu fitur menarik dari Visual Studio .NET dan berguna untuk meningkatkan produktivitas kita sebagai software developer.</p>

<p>Di <a href="http://coding4ever.net/blog/2015/07/01/the-power-of-visual-studio-net-build-events-part-number-2/">postingan</a> sebelumnya kita memanfaatkan fitur ini untuk membuat paket installer secara otomatis setelah proses build project selesai, jadi workflownya sangat cocok digunakan untuk pengembangan aplikasi desktop. Sedangkan <a href="http://coding4ever.net/blog/2015/07/04/the-power-of-visual-studio-net-build-events-part-number-3/">postingan</a> kali ini, studi kasusnya adalah pengembangan aplikasi web service.</p>

<!-- more -->


<p>Perlu diketahui bahwa workflow pengembangan aplikasi desktop dan web service itu sedikit berbeda. Pengembangan aplikasi web service ada kemiripan dengan pengembangan aplikasi web. Di mana kita melakukan proses develop  di komputer lokal setelah jadi baru kita upload ke server develop (untuk pengetesan lebih lanjut) atau ke server production (jika sudah siap rilis).</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-01.png"></p>

<p>Dari gambar di atas, maka workflow yang bisa kita gunakan adalah :</p>

<ol>
<li>Build project dengan mode <code>Debug</code> akan mengupload hasil build ke <code>development server</code></li>
<li>Sedangkan jika build project dengan mode <code>Release</code> akan mengupload hasil build ke <code>production server</code></li>
</ol>


<p>Setelah menentukan workflow, berikutnya adalah menentukan cara yang kita gunakan untuk mengupload hasil build. Untuk contoh di sini kita akan memanfaatkan <code>service FTP</code> untuk melakukan proses upload.</p>

<p><strong> FileZilla</strong></p>

<p><a href="https://filezilla-project.org/">FileZilla</a> adalah salah satu software gratis dan open source yang bisa digunakan untuk menyediakan service FTP. Cara instalasi dan konfigurasinya juga gampang dan jika Anda belum pernah menggunakan <a href="https://filezilla-project.org/">FileZilla</a>, saya pernah menulis tutorial penggunakan <a href="https://filezilla-project.org/">FileZilla</a> di <a href="http://coding4ever.net/blog/2010/09/20/beberapa-alternatif-menampilkan-file-gambar-via-jaringan/">sini</a>.</p>

<p><strong>Web Server</strong></p>

<p>Sama seperti aplikasi web, web service juga membutuhkan sebuah host/wadah agar bisa dijalankan. Untuk kebutuhan web server kita akan menggunakan spesifikasi seperti berikut :</p>

<ol>
<li>Menggunakan OS Windows 7/Windows Server 2008 ke atas</li>
<li>Web Server IIS</li>
<li>Service FTP menggunakan <a href="https://filezilla-project.org/">FileZilla</a>, walaupun Windows Server juga mempunyai fitur untuk menyediakan service FTP sendiri, tapi tidak kita bahas disini</li>
</ol>


<p><strong>Lokasi Web Service</strong></p>

<p>Secara default <code>document root</code> web server iis ada di folder <code>C:\inetpub\wwwroot</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-02.png"></p>

<p>Kita akan membahkan folder baru dengan nama <code>KRSchool</code>  berikut sub folder <code>bin</code>. Nah di sub folder <code>bin</code> inilah kita akan mengupload hasil build project.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-03.png"></p>

<p><strong>Membuat User FTP</strong></p>

<p>Setelah menyiapkan lokasi web service, berikutnya adalah membuat user yang berhak untuk mengakses lokasi web service. Di sini kita akan menggunakan <a href="https://filezilla-project.org/">FileZilla</a> sebagai penyedia service FTP. Adapun langkah-langkahnya seperti berikut :</p>

<ol>
<li><p>Jalankan FileZilla Server Interface</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-04.png"></p>

<p>Kemudian klik toolbar user account dialog</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-05.png"></p>

<p>Setelah itu akan tampil dialog user</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-06.png"></p>

<p>Kemudian klik tombol Add dan isikan nama user</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-07.png"></p></li>
<li><p>Setelah itu kita perlu mengeset password untuk user yang baru ditambahkan</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-08.png"></p></li>
<li><p>Berikutnya pindah ke node <code>Shared folders</code>, klik tombol Add kemudian tentukan lokasi web service</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-09.png"></p></li>
<li><p>Terakhir aktifkan semua hak akses untuk modifikasi file</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-10.png"></p></li>
</ol>


<p><strong>Tes User FTP</strong></p>

<p>Setelah berhasil mendaftarkan user ftp, saatnya kita tes service FTPnya dari komputer lain.</p>

<p>Dengan asumsi ip server adalah <code>192.168.56.101</code>, kita masuk ke dos prompt kemudian ketik <code>ftp 192.168.56.101</code>.</p>

<p>Jika konfigurasi service FTP yang kita lakukan dilangkah-langkah sebelumnya benar, kita akan diminta untuk memasukkan username dan password dan jika berhasil prompt akan berganti menjadi <code>ftp&gt;</code> yang menandakan bahwa username dan password kita benar.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-11.png"></p>

<p><strong>WinSCP</strong></p>

<p>Di sisi server kita menggunakan <a href="https://filezilla-project.org/">FileZilla</a> sebagai penyedia service FTP, sedangkan dari sisi klien kita menggunakan <a href="http://winscp.net/">WinSCP</a> untuk mengakses service FTP.</p>

<p>Cara penggunaan <a href="http://winscp.net/">WinSCP</a>, juga gampang. Berikut contohnya :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>winscp.com /command "option batch abort" "option confirm off" "open ftp://USER_FTP:PASSWORD_FTP@IP_SERVER" "put FOLDER_RILIS\*.dll bin/" "exit"</span></code></pre></td></tr></table></div></figure>


<p>Untuk <code>USER_FTP</code>, <code>PASSWORD_FTP</code>, <code>IP_SERVER</code> dan <code>FOLDER_RILIS</code> menyesuaikan. Selanjutnya kita tinggal panggil perintah di atas melalui <code>Build Events</code></p>

<p><strong>Build Events</strong></p>

<p>Setelah semua persiapan selesai, kita akan menuliskan perintah <code>Build Events</code> untuk mengcopy hasil build dan menguploadnya ke server web service.
Berikut perintah lengkapnya :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-121.png"></p>

<p>Pada perintah di atas, nilai IPServer tergantung dari setting <code>Solution Configuration</code> atau <code>Configuration Manager</code>. Jika di set <code>Debug</code>, hasil build akan diupload ke <code>development server</code> sedangkan jika di set <code>Release</code> akan di upload ke <code>production server</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-04.png"></p>

<p>Setelah itu lakukan proses <code>build -&gt; project</code>, maka semua file dll yang ada di folder <code>bin\Debug</code> atau <code>bin\Release</code> akan dicopykan ke folder <code>C:\WebServiceRilis</code>, kemudian akan dilanjutkan dengan mengupload ke web server.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-13.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-151.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-141.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/050715-161.png"></p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Power of Visual Studio .NET Build Events Part #2]]></title>
    <link href="http://coding4ever.net/blog/2015/07/01/the-power-of-visual-studio-net-build-events-part-number-2/"/>
    <updated>2015-07-01T10:20:30+07:00</updated>
    <id>http://coding4ever.net/blog/2015/07/01/the-power-of-visual-studio-net-build-events-part-number-2</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/06/260615-00.png" width="130" height="130">Melanjutkan pembahasan <a href="http://coding4ever.net/blog/2015/06/25/the-power-of-visual-studio-net-build-events-part-number-1/">postingan</a> sebelumnya yaitu tentang fitur <code>Build Events</code> yang dimiliki oleh Visual Studio .NET.</p>

<p>Di postingan <a href="http://coding4ever.net/blog/2015/06/25/the-power-of-visual-studio-net-build-events-part-number-1/">bagian #1</a> kita memanfaatkan fitur ini untuk melakukan proses copy file (exe, dll, config) secara otomatis setelah proses build project selesai.</p>

<p>Nah di <a href="http://coding4ever.net/blog/2015/07/01/the-power-of-visual-studio-net-build-events-part-number-2/">postingan</a> kali ini kita akan menambahkan perintah untuk mengcompile skrip <a href="http://coding4ever.net/blog/categories/inno-setup/">Inno Setup</a> sehingga proses pembuatan paket installer pun jadi otomatis.</p>

<!-- more -->


<p><strong>Inno Setup</strong></p>

<p><a href="http://jrsoftware.org/">Inno Setup</a> adalah salah satu software favorit untuk membuat paket installer berbasis windows. Selain gratis software ini juga didukung oleh dokumentasi yang lengkap sehingga memudahkan kita untuk mempelajarinya. Saya juga ada menulis beberapa postingan tentang <a href="http://coding4ever.net/blog/categories/inno-setup/">Inno Setup</a> yang bisa anda baca di<a href="http://coding4ever.net/blog/categories/inno-setup/">sini</a>.</p>

<p>Jadi untuk melanjutkan pembahasan ini, saya mengasumsikan Anda sudah pernah menggunakan <a href="http://jrsoftware.org/">Inno Setup</a> untuk membuat paket installer.</p>

<p>Untuk membuat skrip <a href="http://coding4ever.net/blog/categories/inno-setup/">Inno Setup</a> itu gampang, contohnya seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Setup]
</span><span class='line'>AppName={code:GetAppName}
</span><span class='line'>AppVerName={code:GetAppName} Versi {code:GetAppVersion}
</span><span class='line'>AppPublisher={code:GetVendorName}
</span><span class='line'>AppVersion={code:GetAppVersion}
</span><span class='line'>AllowCancelDuringInstall = yes
</span><span class='line'>DefaultDirName={pf}\KRSchool
</span><span class='line'>DefaultGroupName={code:GetAppName}
</span><span class='line'>Compression = lzma
</span><span class='line'>SolidCompression = yes
</span><span class='line'>OutputBaseFilename=SetupKRSchool
</span><span class='line'>AllowNoIcons = yes
</span><span class='line'>AlwaysRestart = no
</span><span class='line'>AlwaysShowComponentsList = no
</span><span class='line'>DisableProgramGroupPage = yes
</span><span class='line'>AppendDefaultDirName = yes
</span><span class='line'>CreateUninstallRegKey = yes
</span><span class='line'>DisableStartupPrompt = yes
</span><span class='line'>LanguageDetectionMethod=none
</span><span class='line'>ShowLanguageDialog=no
</span><span class='line'>UsePreviousLanguage=no
</span><span class='line'>Uninstallable = yes
</span><span class='line'>UninstallFilesDir={app}\uninst
</span><span class='line'>UninstallDisplayIcon={app}\KRSchool.exe,0
</span><span class='line'>UninstallDisplayName={code:GetAppName}
</span><span class='line'>WindowVisible = no
</span><span class='line'>AppCopyright=Copyright © 2015. {code:GetVendorName}
</span><span class='line'>FlatComponentsList = yes
</span><span class='line'>PrivilegesRequired = admin
</span><span class='line'>VersionInfoVersion=1.0.0.0
</span><span class='line'>SetupIconFile=E:\Master\Developer Tools\Package\Setup.ico
</span><span class='line'>WizardImageFile=E:\Master\Developer Tools\Inno Setup\WizardImages\Modern\SetupModern16.bmp
</span><span class='line'>WizardSmallImageFile=E:\Master\Developer Tools\Inno Setup\WizardImages\Modern\Small\SetupModernSmall26.bmp
</span><span class='line'>
</span><span class='line'>[Languages]
</span><span class='line'>Name: ina; MessagesFile: compiler:Indonesia.isl
</span><span class='line'>Name: en; MessagesFile: compiler:Default.isl
</span><span class='line'>
</span><span class='line'>[Tasks]
</span><span class='line'>Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: checkedonce
</span><span class='line'>Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked
</span><span class='line'>
</span><span class='line'>[Files]
</span><span class='line'>;My Application Runtime
</span><span class='line'>Source: *.*; DestDir: {app}; Flags: ignoreversion
</span><span class='line'>
</span><span class='line'>; .net framework
</span><span class='line'>Source: "E:\Master\Developer Tools\dotNET Framework\dotNetFx40_Full_x86_x64.exe"; DestDir: {tmp}; Flags: deleteafterinstall; Check: FrameworkIsNotInstalled 
</span><span class='line'>
</span><span class='line'>;skin
</span><span class='line'>Source: E:\Master\Developer Tools\Package\dll&ocx\ISSkin.dll; DestDir: {app}; Flags: dontcopy
</span><span class='line'>Source: E:\Master\Developer Tools\Package\dll&ocx\Office2007.cjstyles; DestDir: {tmp}; Flags: dontcopy
</span><span class='line'>
</span><span class='line'>[Icons]
</span><span class='line'>Name: {group}\{code:GetAppName}; Filename: {app}\KRSchool.exe; WorkingDir: {app}; IconFilename: {app}\main.ico
</span><span class='line'>Name: {userdesktop}\{code:GetAppName}; Filename: {app}\KRSchool.exe; WorkingDir: {app}; IconFilename: {app}\main.ico; Tasks: desktopicon
</span><span class='line'>
</span><span class='line'>[Registry]
</span><span class='line'>;INSTALL DIR
</span><span class='line'>Root: HKCU; Subkey: "Software\{code:GetVendorName}\{code:GetAppName}"; ValueName: "installDir"; ValueType: String; ValueData: {app}; Flags: uninsdeletevalue
</span><span class='line'>
</span><span class='line'>[Run]
</span><span class='line'>Filename: {tmp}\dotNetFx40_Full_x86_x64.exe; Parameters: "/q:a /c:""install /l /q"""; Check: FrameworkIsNotInstalled; StatusMsg: "Sedang menginstall Microsoft Framework 4.0 ..."
</span><span class='line'>
</span><span class='line'>[Code]
</span><span class='line'>const
</span><span class='line'>  AppName = 'KR School';
</span><span class='line'>  AppVersion = '1.0.0';
</span><span class='line'>  VendorName = 'KR Software';
</span><span class='line'>
</span><span class='line'>// Importing LoadSkin API from ISSkin.DLL
</span><span class='line'>procedure LoadSkin(lpszPath: String; lpszIniFileName: String);
</span><span class='line'>external 'LoadSkin@files:isskin.dll stdcall';
</span><span class='line'>
</span><span class='line'>// Importing UnloadSkin API from ISSkin.DLL
</span><span class='line'>procedure UnloadSkin();
</span><span class='line'>external 'UnloadSkin@files:isskin.dll stdcall';
</span><span class='line'>
</span><span class='line'>// Importing ShowWindow Windows API from User32.DLL
</span><span class='line'>function ShowWindow(hWnd: Integer; uType: Integer): Integer;
</span><span class='line'>external 'ShowWindow@user32.dll stdcall';
</span><span class='line'>
</span><span class='line'>function IsDotNetDetected(version: string; service: cardinal): boolean;
</span><span class='line'>// Indicates whether the specified version and service pack of the .NET Framework is installed.
</span><span class='line'>//
</span><span class='line'>// version -- Specify one of these strings for the required .NET Framework version:
</span><span class='line'>//    'v1.1.4322'     .NET Framework 1.1
</span><span class='line'>//    'v2.0.50727'    .NET Framework 2.0
</span><span class='line'>//    'v3.0'          .NET Framework 3.0
</span><span class='line'>//    'v3.5'          .NET Framework 3.5
</span><span class='line'>//    'v4\Client'     .NET Framework 4.0 Client Profile
</span><span class='line'>//    'v4\Full'       .NET Framework 4.0 Full Installation
</span><span class='line'>//
</span><span class='line'>// service -- Specify any non-negative integer for the required service pack level:
</span><span class='line'>//    0               No service packs required
</span><span class='line'>//    1, 2, etc.      Service pack 1, 2, etc. required
</span><span class='line'>var
</span><span class='line'>    key: string;
</span><span class='line'>    install, serviceCount: cardinal;
</span><span class='line'>    success: boolean;
</span><span class='line'>begin
</span><span class='line'>    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + version;
</span><span class='line'>
</span><span class='line'>    // .NET 3.0 uses value InstallSuccess in subkey Setup
</span><span class='line'>    if Pos('v3.0', version) = 1 then begin
</span><span class='line'>        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
</span><span class='line'>    end else begin
</span><span class='line'>        success := RegQueryDWordValue(HKLM, key, 'Install', install);
</span><span class='line'>    end;
</span><span class='line'>
</span><span class='line'>    // .NET 4.0 uses value Servicing instead of SP
</span><span class='line'>    if Pos('v4', version) = 1 then begin
</span><span class='line'>        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
</span><span class='line'>    end else begin
</span><span class='line'>        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
</span><span class='line'>    end;
</span><span class='line'>
</span><span class='line'>    result := success and (install = 1) and (serviceCount >= service);
</span><span class='line'>end;
</span><span class='line'>
</span><span class='line'>function FrameworkIsNotInstalled: Boolean;
</span><span class='line'>begin
</span><span class='line'>    Result := not IsDotNetDetected('v4\Full', 0);
</span><span class='line'>end;
</span><span class='line'>
</span><span class='line'>function GetVendorName(Param: string): string;
</span><span class='line'>begin
</span><span class='line'>  Result := VendorName;
</span><span class='line'>end;
</span><span class='line'>
</span><span class='line'>function GetAppVersion(Param: string): string;
</span><span class='line'>begin
</span><span class='line'>  Result := AppVersion;
</span><span class='line'>end;
</span><span class='line'>
</span><span class='line'>function GetAppName(Param: string): string;
</span><span class='line'>begin
</span><span class='line'>  Result := AppName;
</span><span class='line'>end;
</span><span class='line'>
</span><span class='line'>function InitializeSetup(): Boolean;
</span><span class='line'>begin
</span><span class='line'>
</span><span class='line'>  ExtractTemporaryFile('Office2007.cjstyles');
</span><span class='line'>  LoadSkin(ExpandConstant('{tmp}\Office2007.cjstyles'), 'NormalAqua.ini');
</span><span class='line'>      
</span><span class='line'>  Result := True;
</span><span class='line'>end;
</span><span class='line'>
</span><span class='line'>procedure DeinitializeSetup();
</span><span class='line'>begin
</span><span class='line'>  // Hide Window before unloading skin so user does not get
</span><span class='line'>  // a glimse of an unskinned window before it is closed.
</span><span class='line'>  ShowWindow(StrToInt(ExpandConstant('{wizardhwnd}')), 0);
</span><span class='line'>  UnloadSkin();
</span><span class='line'>end;</span></code></pre></td></tr></table></div></figure>


<p>Kemudian skrip di atas kita simpan di folder <code>Rilis</code> misal dengan nama <code>SetupKRSchool.iss</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-01.png"></p>

<p>File <code>SetupKRSchool.iss</code> di atas akan kita compile menggunakan tool bawaan <a href="http://jrsoftware.org/">Inno Setup</a> yaitu <code>ISCC.exe</code>. Untuk contoh penggunaanya seperti ini :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iscc "c:\rilis\SetupKRSchool.iss"</span></code></pre></td></tr></table></div></figure>


<p>Nah perintah di atas akan kita panggil melalui Dialog Build Events</p>

<p><strong>Revisi Perintah Build Event</strong></p>

<p>Pada <a href="http://coding4ever.net/blog/2015/06/25/the-power-of-visual-studio-net-build-events-part-number-1/">postingan</a> sebelumnya kita sudah menulis perintah sederhana di dialog Build Events</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-02.png"></p>

<p>Kita akan merivisi perintah diatas untuk menjalankan  tool bawaan <a href="http://jrsoftware.org/">Inno Setup</a> yaitu <code>ISCC.exe</code>. Dengan tool ini kita bisa langsung mengcompile skrip <a href="http://jrsoftware.org/">Inno Setup</a>.</p>

<p>Berikut perintah lengkapnya.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-03.png"></p>

<p>Pada perintah di atas saya menambahkan kondisi</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if "$(ConfigurationName)" == "Debug" goto skip</span></code></pre></td></tr></table></div></figure>


<p>yang artinya perintah build event di atas hanya akan dijalankan jika <code>Solution Configuration</code> atau  <code>Configuration Manager</code> di set <code>Release</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-04.png"></p>

<p>Setelah itu lakukan proses <code>build -&gt; project</code>, maka semua file dll atau exe yang ada di folder <code>bin\Debug</code> atau <code>bin\Release</code> akan dicopykan ke folder <code>C:\Rilis</code>, kemudian akan dilanjutkan dengan mengcompile skrip <a href="http://jrsoftware.org/">Inno Setup</a>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-05.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-06.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-07.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/07/010715-08.png"></p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Power of Visual Studio .NET Build Events Part #1]]></title>
    <link href="http://coding4ever.net/blog/2015/06/25/the-power-of-visual-studio-net-build-events-part-number-1/"/>
    <updated>2015-06-25T22:51:48+07:00</updated>
    <id>http://coding4ever.net/blog/2015/06/25/the-power-of-visual-studio-net-build-events-part-number-1</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/06/260615-00.png" width="130" height="130">Build Events merupakan salah fitur menarik yang dimiliki oleh Visual Studio.NET, dengan fitur ini akan membuat hidup kita sebagai <code>software developer</code> semakin mudah :D</p>

<p>Saya sendiri menggunakan fitur ini untuk melakukan proses copy file (exe, dll, config) secara otomatis setelah proses build project, tetapi bukan itu saja dengan fitur ini kita juga bisa menjalankan perintah tertentu seperti <code>batch command</code> atau perintah lainnya sesuai kebutuhan seperti  mengupload library hasil build web service ke server IIS atau mengeksekusi skrip installer seperti <a href="http://coding4ever.net/blog/categories/inno-setup/">Inno Setup</a> dan <a href="http://coding4ever.net/blog/categories/nsis/">NSIS</a>.</p>

<!-- more -->


<p><strong>Build Events</strong></p>

<p>Build Events merupakan salah satu fitur dari Visual Studio .NET yang bisa diaktifkan melalui Project -> Properties</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-01.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-02.png"></p>

<p>Build Events mempunyai dua event yaitu <code>Pre-build event</code> dan <code>Post-build event</code> sesuai  namanya <code>pre</code> di jalankan sebelum proses build dan <code>post</code> setelah proses build.</p>

<p><strong>Dialog Build Events</strong></p>

<p>Dialog Build Events merupakan tempat untuk menuliskan perintah sesuai dengan yang kita inginkan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-03.png"></p>

<p>Dialog Build Events juga menyediakan <code>Macros</code> yang di dalamnya terdapat daftar variabel bawaan (built-in) yang bisa digunakan pada saat menuliskan perintah <code>build-event</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-04.png"></p>

<p>Kita bisa menambahkan <code>macros</code> dengan cara klik ganda item <code>macros</code>. Pemanggilan nama <code>macros</code> menggunakan format $(xxx), dimana <code>xxx</code> adalah nama <code>macros</code>. Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-05.png"></p>

<p>Pada saat perintah <code>build-event</code> dijalankan <code>macros</code> ini akan diganti dengan nilai aslinya (nilai aktual). Contoh berdasarkan gambar di atas <code>$(SolutionDir)</code> nilainya akan diganti dengan <code>D:\Postingan coding4ever\coding4ever\c#\KRSchool</code>.</p>

<p>Jadi ketika kita menuliskan perintah</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>copy /Y "$(TargetDir)KRSchool.*.dll" "$(SolutionDir)Rilis"</span></code></pre></td></tr></table></div></figure>


<p>Sama artinya kita menuliskan</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>copy /Y "D:\Postingan coding4ever\coding4ever\c#\KRSchool\KRSchool.UI.Main\bin\Debug\KRSchool.*.dll" "D:\Postingan coding4ever\coding4ever\c#\KRSchool\Rilis"</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-06.png"></p>

<p>Berikut adalah daftar lengkap <code>macros</code> yang disediakan oleh Visual Studio .NET</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-07.png"></p>

<p>Untuk kolom <code>Value</code> nilainya akan menyesuaikan dengan lokasi solution Anda.</p>

<p><strong>Menggunakan Post-Build Events</strong></p>

<p>Saya biasanya menggunakan <code>post-build events</code> untuk keperluan mengcopy hasil build project ke <code>folder tertentu</code>, dari pada mengcopy manual dari folder <code>bin\Debug</code> atau <code>bin\Release</code>. Folder tertentu ini misalnya <code>C:\Rilis</code>, maka kita bisa mengetikan peritah berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-08.png"></p>

<p>Macro <code>TargetDir</code> ini nilainya tergantung dari setting <code>Configuration Manager</code>, apakah di set <code>Debug</code> atau <code>Release</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-09.png"></p>

<p>Setelah itu lakukan proses <code>build -&gt; project</code>, maka semua file dll atau exe yang ada di folder <code>bin\Debug</code> atau <code>bin\Release</code> akan dicopykan ke folder <code>C:\Rilis</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-10.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-11.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/260615-12.png"></p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cara Mudah Mengelola Versi Aplikasi]]></title>
    <link href="http://coding4ever.net/blog/2015/06/23/cara-mudah-mengelola-versi-aplikasi/"/>
    <updated>2015-06-23T11:06:50+07:00</updated>
    <id>http://coding4ever.net/blog/2015/06/23/cara-mudah-mengelola-versi-aplikasi</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/06/230615-00.png" width="100" height="100">Oke jadi ceritanya seperti ini, saya punya kebiasaan dan saya enggak tau apakah ini kebiasaan baik atau buruk :D</p>

<p>Untuk menerapkan konsep <code>separation of concerns</code> dalam pengembangan aplikasi, saya biasanya memisahkan modul-modul aplikasi menjadi beberapa project (satu solution dengan banyak project/assemblies). Contoh :</p>

<!-- more -->


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-01.png"></p>

<p>Dari gambar di atas klo kita build akan menghasilkan beberapa file assembly seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-02.png"></p>

<p>Kebiasaan saya yang lain adalah setiap <code>assembly</code>, apakah itu berupa file <a href="https://en.wikipedia.org/wiki/Dynamic-link_library">dll</a> atau exe, harus mempunyai versi yang sama. Misalkan kalo rilis pertama, saya set versinya = 1.0.0 maka semua <code>assembly</code>-nya harus punya versi yang sama.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-03.png"></p>

<p>Klo rilis berikutnya versinya = 1.2.0, maka semua versi <code>assembly</code>-nya juga harus sama</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-04.png"></p>

<p>Kan jadi enggak lucu klo versi <code>assembly</code>-nya ada yang beda he he :D</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-05.png"></p>

<p><strong>Merubah Versi Assembly</strong></p>

<p>Kalo cara biasa, misal kita punya empat project, berarti kita juga harus merubah versi <code>assembly</code> di empat lokasi yang berbeda</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-06.png"></p>

<p>Dari gambar di atas kita bisa melihat informasi versi <code>assembly</code> tersimpan di file <code>AssemblyInfo.cs</code> masing-masing project. Klo penasaran ini nih isinya he he :D</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-07.png"></p>

<p>Nah ini yang sedikit merepotkan dan kadang-kadang sedikit melelahkan :D, sudah di<code>build</code> eh ada <code>assembly</code> yang lupa diganti versinya, jadi <code>build</code> ulang deh he he :D</p>

<p>Trus solusinya gimana ? Cara yang saya gunakan adalah dengan membuat <code>Global Version</code> misal dengan nama <code>VersionInfo</code>. File <code>VersionInfo</code> ini merupakan file dari <code>Solution</code> jadi scopenya sama dengan project.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-08.png"></p>

<p>Nah untuk menambahkan file <code>VersionInfo</code> di atas caranya juga gampang, berikut langkah-langkahnya :</p>

<ol>
<li><p>Klik kanan Solution -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-09.png"></p></li>
<li><p>Pilih item Visual C#/Basic Class</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-10.png"></p></li>
<li><p>Jika berhasil file <code>VersionInfo</code> akan tersimpan di folder <code>Solution Items</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-11.png"></p>

<p>Kemudian hapus semua isi file <code>VersionInfo</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-12.png"></p></li>
<li><p>Setelah itu copy <code>sebagian</code> informasi salah satu file <code>AssemblyInfo.cs</code> ke <code>VersionInfo</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-13.png"></p></li>
<li><p>Kemudian edit <code>sebagian</code> isi file <code>AssemblyInfo.cs</code> masing-masing project (cek yang ada komentar // di nonaktifkan)</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-14.png"></p></li>
<li><p>Terakhir masing-masing project menambahkan link ke file <code>VersionInfo</code></p>

<ul>
<li><p>Klik kanan Project -> Add -> Existing Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-15.png"></p></li>
<li><p>Pilih file <code>VersionInfo</code> kemudian <code>Add As Link</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-16.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-17.png"></p></li>
</ul>


<p>Kemudian ulangi langkah-langkah sebelumnya untuk menambahkan link file <code>VersionInfo</code> ke project lainnya</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-18.png"></p></li>
</ol>


<p>Nah Sampai di sini tugas kita sudah selesai, sehingga ketika ada perubahan versi kita cukup merubah di satu file yaitu file <code>VersionInfo</code> yang ada di <code>Solution Items</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-19.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/230615-20.png"></p>

<p>Selamat MENCOBA :)</p>

<p>Referensi : <a href="http://www.codeproject.com/Articles/328977/The-Right-Way-to-Version-Your-Assemblies">The Right Way to Version Your Assemblies</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial WCF Service Bagian #4]]></title>
    <link href="http://coding4ever.net/blog/2015/06/20/tutorial-wcf-service-bagian-number-4/"/>
    <updated>2015-06-20T12:38:46+07:00</updated>
    <id>http://coding4ever.net/blog/2015/06/20/tutorial-wcf-service-bagian-number-4</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/05/020515-16.png" width="100" height="100">Postingan kali ini masih melanjutkan pembahasan tentang pembuatan web service menggunakan <a href="http://coding4ever.net/blog/categories/wcf/">WCF</a>, tapi sebelum kita melanjutkan pembahasan ada baiknya kita melakukan sedikit review.</p>

<!-- more -->


<ol>
<li>Pembahasan secara umum apa itu WCF, dan project apa saja yang harus kita persiapkan untuk mengimplementasikannya sudah kita bahas di <a href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/">bagian #1</a></li>
<li>Di <a href="http://coding4ever.net/blog/2015/05/09/tutorial-wcf-service-bagian-number-2/">bagian #2</a> kita membuat project server yang mengimplementasikan service-service apa saja yang tersedia untuk bisa diakses oleh aplikasi klien</li>
<li>Agar semua service ini bisa diakses oleh klien, kita perlu sebuah wadah/host untuk menjalankan web service, ini juga sudah kita bahas di <a href="http://coding4ever.net/blog/2015/06/05/tutorial-wcf-service-bagian-number-3/">bagian #3</a></li>
</ol>


<p>Berarti sekarang waktu yang tepat untuk mengetes apakah web service yang sudah kita buat berfungsi dengan baik atau belum.</p>

<p>Ada banyak cara untuk mengetes web service yang dibuat menggunakan WCF, kita akan bahas dua di antaranya yaitu :</p>

<ol>
<li>Tes Menggunakan Aplikasi WCF Test Client</li>
<li>Tes Menggunakan Aplikasi Buatan Sendiri</li>
</ol>


<p><strong>1. Tes Menggunakan Aplikasi WCF Test Client</strong></p>

<p>Secara default pada saat kita menginstall Visual Studio .NET, installer tidak membuat shortcut untuk aplikasi <code>WCF Test Client</code>, sehingga kita perlu menjalankannya secara manual di lokasi berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\WcfTestClient.exe</span></code></pre></td></tr></table></div></figure>


<p>Lokasi di atas harus disesuaikan dengan versi Visual Studio .NET Anda.</p>

<p>Berikut adalah tampilan aplikasi <code>WCF Test Client</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-01.png"></p>

<p>Untuk menambahkan url/link web service, klik menu File -> Add Service …, setelah itu inputkan link web service</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-02.png"></p>

<p>Contoh link di atas kita dapatkan dari <a href="http://coding4ever.net/blog/2015/06/05/tutorial-wcf-service-bagian-number-3/">postingan</a> sebelumnya.</p>

<p>Jika berhasil akan tampil di panel sebelah kiri daftar service dari ServiceCalculator.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-03.png"></p>

<p>Dari mana datangnya nama-nama service di atas seperti Penambahan dan Pengurangan ? Nama-nama service di atas di generate berdasarkan nama-nama method abstract yang ada di project <a href="https://github.com/k4m4r82/Calculator">CalculatorLib</a></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-04.png"></p>

<p>Berikutnya kita akan tes salah satu service, misal service Penambahan. Caranya adalah dengan mengklik ganda nama service Penambahan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-05.png"></p>

<p>Setelah itu di panel sebelah kanan akan tampil form yang inputannya sesuai dengan parameter dari service Penambahan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-06.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-07.png"></p>

<p>Langsung saja kita masukan nilai a dan b-nya, kemudian klik tombol Invoke</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-08.png"></p>

<p>Dari hasil tes di atas kita bisa lihat bahwa service Penambahan berfungsi dengan benar karena penambahan nilai <code>5 + 2</code> menghasilkan <code>7</code>.</p>

<p><strong>2. Tes Menggunakan Aplikasi Buatan Sendiri</strong></p>

<p>Setelah tes menggunakan aplikasi WCF Test Client berhasil, kita akan mencoba membuat aplikasi sendiri untuk mengakses WCF web service dan untuk menyederhanakan contoh program, kita hanya membuat aplikasi berbasis console. Tapi sebelumnya aktifkan kembali solution <a href="https://github.com/k4m4r82/Calculator">Calculator</a> yang di dalamnya sudah ada project CalculatorLib dan CalculatorServer.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-09.png"></p>

<p>Kita akan menambahkan project CalculatorClient masih di solution yang sama</p>

<h4>Menambahkan project CalculatorClient</h4>

<ol>
<li><p>Klik kanan Solution Calculator -> Add -> New Project</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-10.png"></p></li>
<li><p>Pada dialog Add New Project aktifkan pilihan Visual C# kemudian pilih Templates Class Library</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-11.png"></p>

<p>Pada isian Name isikan CalculatorClient untuk isian Location dibiarkan saja setelah itu klik Ok. Jika langkah sebelumnya berhasil maka pada solution Calculator akan ketambahan 1 project baru yaitu CalculatorClient.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-12.png"></p></li>
</ol>


<p>Kemudian klik ganda class Program, setelah itu akan tampil editor code class Program</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-13.png"></p>

<p>Sampai di sini kita akan menambahkan sebuah method dengan nama <code>GetHttpProxy</code>. Sesuai namanya method <code>GetHttpProxy</code> berfungsi untuk mengenerate <code>objek proxy</code>.</p>

<p>Apa itu <code>objek proxy</code> ? <code>Objek proxy</code> merupakan representasi dari <code>service contract</code> sehingga objek proxy mempunyai operasi yang sama dengan <code>service contract</code>. Selain itu semua method yang dipanggil melalui objek proxy akan dieksekusi secara remote (dijalankan di sisi server)</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-14.png"></p>

<p style="text-align:center">Sumber - <a href="http://www.topwcftutorials.net/2014/06/3-ways-generate-proxy-wcf-service.html" target="_blank">Top WCF Tutorial</a></p>


<p>Berikut adalah kode dari method <code>GetHttpProxy</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-15.png"></p>

<p>Agar method <code>GetHttpProxy</code> di atas berfungsi dengan baik, kita juga harus menambahkan referensi <code>System.ServiceModel</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-16.png"></p>

<p>Kemudian mendaftarkannya di bagian using</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-17.png"></p>

<p>Selain itu kita juga perlu  menambahkan referensi ‘CalculatorLib`</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-18.png"></p>

<p>Dan mendaftarkannya dibagian using</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-19.png"></p>

<p>Kenapa perlu menambahkan referensi <code>CalculatorLib</code>, karena kita akan mengakses interface <code>ICalculator</code> dan method-method abstractnya melalui method <code>GetHttpProxy</code></p>

<p>Setelah semua persiapan kode selesai, kita tinggal melengkapi method Main yang di dalamnya kita memanggil url/link web service melalui method <code>GetHttpProxy</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-20.png"></p>

<p>Jika kode di atas dijalankan akan menghasilkan output seperti berikut</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/200615-21.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/Calculator">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial WCF Service Bagian #3]]></title>
    <link href="http://coding4ever.net/blog/2015/06/05/tutorial-wcf-service-bagian-number-3/"/>
    <updated>2015-06-05T13:14:33+07:00</updated>
    <id>http://coding4ever.net/blog/2015/06/05/tutorial-wcf-service-bagian-number-3</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/05/020515-16.png" width="100" height="100">Web service itu seperti parasit, tidak bisa hidup mandiri sehingga membutuhkan sebuah wadah (host) untuk kelangsungan hidupnya. Begitu juga dengan web service yang dibuat menggunakan WCF tetap membutuhkan sebuah wadah (host).</p>

<!-- more -->


<p>Ada beberapa cara yang bisa digunakan untuk menempatkan web service ke dalam wadahnya (host) yaitu :</p>

<ul>
<li>Hosting in Internet Information Services (IIS)</li>
<li>Hosting in Windows Activation Services (WAS)</li>
<li>Hosting in a Console or Desktop application (Self hosting)</li>
<li>Hosting in a Windows Service</li>
</ul>


<p>Kita akan menggunakan cara yang pertama yaitu, <code>hosting WCF service di IIS</code>, berikut langkah-langkahnya :</p>

<p><strong>1. Install Internet Information Services (IIS)</strong></p>

<p>Untuk langkah-langkahnya bisa Anda ikuti di<a href="http://www.codeproject.com/Tips/365704/Install-IIS-on-Windows">sini</a></p>

<p><strong>2. Membuat Folder Baru di wwwroot</strong></p>

<p>Tambahkan folder baru di <code>C:\ C:\inetpub\wwwroot</code>, dengan nama <code>Calculator</code>, kemudian tambahkan juga folder <code>bin</code> di dalamnya</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-011.png"></p>

<p>Folder <code>wwwroot</code> sama seperti folder <code>htdocs</code>-nya Apache.</p>

<p><strong>3. Build Project CalculatorServer</strong></p>

<p>Aktifkan kembali project <a href="https://github.com/k4m4r82/Calculator">Calculator</a>, kemudian lakukan proses <code>Build</code> project <code>CalculatorServer</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-02.png"></p>

<p>Cek hasil build di bagian <code>Output</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-03.png"></p>

<p>Kemudian buka folder hasil build</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-04.png"></p>

<p>Di dalamnya ada dua file dengan tipe DLL yaitu <code>CalculatorLib.dll</code> dan <code>CalculatorServer.dll</code>. File <code>CalculatorLib.dll</code> di hasilkan dari project <code>CalculatorLib</code> sedangkan file <code>CalculatorServer.dll</code> dihasilkan dari project <code>CalculatorServer</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-05.png"></p>

<p>Dua file ini akan kita copykan ke folder <code>C:\inetpub\wwwroot\Calculator\bin</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-06.png"></p>

<p><strong>4. Membuat File Text dengan Format .svc</strong></p>

<p>File .svc merupakan file text biasa yang mirip dengan file .asmx (ASP.NET web service). Dengan kata lain WCF service yang di-host-kan ke dalam IIS direpresentasikan oleh sebuah file khusus dengan format .svc.</p>

<p>File ini berisi informasi agar WCF service bisa berjalan dengan sukses. Adapun informasinya terdiri dari :</p>

<ul>
<li>Pilihan bahasa (C# atau VB)</li>
<li>Nama service (namaspace + class)</li>
<li>Lokasi kode service</li>
</ul>


<p>Contoh isi file .svc</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%@ ServiceHost Language="C#" Service="CalculatorServer.Calculator" %></span></code></pre></td></tr></table></div></figure>


<p>Setelah mengetahui fungsi dari file .svc, berikutnya kita akan membuat file .svc dengan nama <code>ServiceCalculator.svc</code> di folder <code>C:\inetpub\wwwroot\Calculator</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-07.png"></p>

<p>Kemudian copas skrip berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%@ ServiceHost Language="C#" Service="CalculatorServer.Calculator" %></span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-08.png"></p>

<p>Dari skrip di atas, coba perhatikan bagian <code>Service="CalculatorServer.Calculator"</code></p>

<p>CalculatorServer adalah nama namespace, sedangkan Calculator adalah nama class servicenya. Informasi ini kita dapatkan dari struktur project <code>CalculatorServer</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-09.png"></p>

<p><strong>5. Membuat File web.config</strong></p>

<p>File web.config adalah file xml yang berisi konfigurasi dari aplikasi web berbasis ASP.NET. Karena WCF service ini akan kita host-kan ke dalam IIS, jadi kita juga perlu membuat file web.config untuk menyimpan konfigurasi dari web service.</p>

<p>File web.config  ini akan kita buat di folder <code>C:\inetpub\wwwroot\Calculator</code>, satu folder dengan file <code>ServiceCalculator.svc</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-10.png"></p>

<p>Kemudian copas skrip berikut</p>

<div><script src='https://gist.github.com/f62303ed21a209b24de5.js'></script>
<noscript><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;

&lt;configuration&gt;
    
    &lt;system.web&gt;
        &lt;compilation debug=&quot;false&quot; targetFramework=&quot;4.0&quot; /&gt;
    &lt;/system.web&gt;    
    
  &lt;system.serviceModel&gt;
    
    &lt;services&gt;      
      &lt;service name=&quot;CalculatorServer.Calculator&quot; behaviorConfiguration=&quot;DefaultBehavior&quot;&gt;                        
        &lt;endpoint binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;BasicHttpBindingConfig&quot; contract=&quot;CalculatorLib.ICalculator&quot; /&gt;
      &lt;/service&gt;                            
    &lt;/services&gt;        
        
    &lt;bindings&gt;
      &lt;basicHttpBinding&gt;
        &lt;binding name=&quot;BasicHttpBindingConfig&quot;&gt;
          &lt;security mode=&quot;None&quot; /&gt;
        &lt;/binding&gt;
      &lt;/basicHttpBinding&gt;
    &lt;/bindings&gt;
    
    &lt;behaviors&gt;
      &lt;serviceBehaviors&gt;
        &lt;behavior name=&quot;DefaultBehavior&quot;&gt;
          &lt;serviceMetadata httpGetEnabled=&quot;true&quot; /&gt;
          &lt;serviceDebug includeExceptionDetailInFaults=&quot;false&quot; /&gt;
        &lt;/behavior&gt;
      &lt;/serviceBehaviors&gt;
    &lt;/behaviors&gt;
    
  &lt;/system.serviceModel&gt;
  
&lt;/configuration&gt;</code></pre></noscript></div>


<p>Dari skrip di atas, coba perhatikan bagian <code>&lt;services&gt;</code></p>

<div><script src='https://gist.github.com/3e306818c5096e2a860b.js'></script>
<noscript><pre><code>&lt;services&gt;      
  &lt;service name=&quot;CalculatorServer.Calculator&quot; behaviorConfiguration=&quot;DefaultBehavior&quot;&gt;                        
    &lt;endpoint binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;BasicHttpBindingConfig&quot; contract=&quot;CalculatorLib.ICalculator&quot; /&gt;
  &lt;/service&gt;                            
&lt;/services&gt;</code></pre></noscript></div>


<p>Di bagian ini kita mendaftarkan service apa saja yang bisa diakses oleh aplikasi klien.</p>

<ul>
<li>Service name = diisi dengan nama service</li>
<li>Contract = diisi dengan interface dari nama service</li>
</ul>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-11.png"></p>

<p>Di dalam WCF, bagian ini dikenal dengan istilah <a href="http://wcftutorial.net/EndPoint.aspx">EndPoint</a>, dan berhubung di postingan ini tidak membahas masalah <a href="http://wcftutorial.net/EndPoint.aspx">EndPoint</a>, sebagai referensi bisa Anda baca di<a href="http://wcftutorial.net/EndPoint.aspx">sini</a>.</p>

<p><strong>6. Mendaftarkan Service Calculator ke IIS</strong></p>

<p>Sebagai langkah terakhir, kita aktifkan Internet Information Services(IIS), kemudian expand node Sites -> Default Web Site</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-12.png"></p>

<p>Kemudian klik kanan <code>Calculator</code> -> Convert to Application</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-13.png"></p>

<p>Setelah itu akan tampil window <code>Add Application</code> kemudian klik tombol <code>Select</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-14.png"></p>

<p>Pilih ASP.NET v4.0</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-15.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-16.png"></p>

<p>Jika berhasil icon folder Calculator akan berganti menjadi <img src="https://coding4ever.files.wordpress.com/2015/06/050615-20.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-17.png"></p>

<p><strong>7. Testing Web Service Calculator</strong></p>

<p>Untuk mengetes apakah service Calculator ini berjalan dengan sukses, silahkan akses alamat : <a href="http://localhost/Calculator/ServiceCalculator.svc">http://localhost/Calculator/ServiceCalculator.svc</a></p>

<p>Seharusnya anda mendapatkan tampilan seperti berikut yang menandakan konfigurasi WCF service berhasil.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-18.png"></p>

<p>Tampilan jika diakses dari <code>WCF Test Client</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/06/050615-19.png"></p>

<p>Yuph sampai disini saja untuk postingan kali ini, insyaAlloh akan kita lanjutkan pada kesempatan berikutnya.</p>

<p>Selamat <a href="https://github.com/k4m4r82/Calculator">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial WCF Service Bagian #2]]></title>
    <link href="http://coding4ever.net/blog/2015/05/09/tutorial-wcf-service-bagian-number-2/"/>
    <updated>2015-05-09T09:34:34+07:00</updated>
    <id>http://coding4ever.net/blog/2015/05/09/tutorial-wcf-service-bagian-number-2</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/05/020515-16.png" width="100" height="100">Melanjutkan pembahasan <a href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/">postingan</a> sebelumnya yaitu tentang pembuatan web service menggunakan teknologi <a href="http://coding4ever.net/blog/categories/wcf/">WCF</a>.</p>

<p>Kita sudah menyelesaikan project pertama yaitu pembuatan project <a href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/">CalculatorLib</a> dan kita lanjutkan dengan pembuatan project CalculatorServer.</p>

<!-- more -->


<p>Sebagai review CalculatorServer adalah project yang akan mengimplementasikan semua method abstract yang ada pada interface ICalculator (project <a href="https://github.com/k4m4r82/Calculator">CalculatorLib</a> selain itu project CalculatorServer juga akan kita <code>hostkan</code> sehingga bisa menjadi web service. Apa yang dimaksud dengan <code>host</code> disini, silahkan baca postingan <a href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/">Tutorial WCF Service Bagian #1</a>.</p>

<p>Aktifkan kembali solution <a href="https://github.com/k4m4r82/Calculator">Calculator</a> yang di dalamnya sudah ada project CalculatorLib.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-02.png"></p>

<p>Kita akan menambahkan project CalculatorServer masih di solution yang sama</p>

<h3>Menambahkan Project CalculatorServer</h3>

<ol>
<li><p>Klik kanan Solution Calculator -> Add -> New Project</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-01.png"></p></li>
<li><p>Pada dialog Add New Project aktifkan pilihan Visual C# kemudian pilih Templates Class Library</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-02.png"></p>

<p>Pada isian Name isikan CalculatorServer untuk isian Location dibiarkan saja setelah itu klik Ok. Jika langkah sebelumnya berhasil maka pada solution Calculator akan ketambahan 1 project baru yaitu CalculatorServer.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-03.png"></p>

<p>Kemudian hapus class <code>Class1</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-04.png"></p></li>
</ol>


<h3>Menambahkan Class Calculator</h3>

<p>Class Calculator adalah class yang akan mengimplementasikan semua method abstract dari interface ICalculator yang sudah kita buat pada project sebelumnya (<a href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/">CalculatorLib</a>).</p>

<ol>
<li><p>Klik kanan project CalculatorServer -> Add -> Class…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-05.png"></p>

<p>Pada isian Name diisi <code>Calculator</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-06.png"></p>

<p>Setelah itu akan tampil editor code class Calculator</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-07.png"></p>

<p>Jangan lupa untuk menambahkan access modifier <code>public</code>.</p>

<p>Sebelum kita melengkapi kode class Calculator di atas, terlebih dulu kita harus menambahkan referensi <a href="https://github.com/k4m4r82/Calculator">CalculatorLib</a> yang sudah kita buat pada project sebelumnya, tujuannya adalah agar class Calculator bisa mengakses interface ICalculator dan mengimplementasikan semua method abstractnya.</p></li>
<li><p>Klik kanan node References -> Add Reference…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-08.png"></p></li>
<li><p>Aktifkan panel Solution kemudian pilih project CalculatorLib</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-09.png"></p>

<p>Jika langkah sebelumnya berhasil akan ketambahan 1 buah node dengan nama CalculatorLib pada node References</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-10.png"></p>

<p>Selanjutnya kita lengkapi kode class Calculator di atas, seperti di bawah ini.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-11.png"></p>

<p>Sampai disini kita sudah bisa mencoba untuk meng-compile project CalculatorServer dengan cara klik kanan project <code>CalculatorServer</code> -> <code>Build</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-12.png"></p>

<p>Apa yang terjadi ??? Masih error bukan ?</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-13.png"></p>

<p>Error ini terjadi karena class Calculator mengimplementasikan interface ICalculator sedangkan method-method abstractnya (Penambahan, Pengurangan, Perkalian dan Pembagian) belum kita definisikan ulang / override di class Calculator.</p></li>
</ol>


<h3>Mengimplementasikan Method Abastract Interface ICalculator secara Otomatis</h3>

<p>Untuk mengatasi error pada langkah sebelumnya kita tinggal klik kanan pada tulisan interface ICalculator ->Implement Interface -> Implement Interface</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-14.png"></p>

<p>Kemudian secara otomatis semua implementasi method abstract dari interface ICalculator akan ditambahkan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-15.png"></p>

<p>Setelah itu kita tinggal melengkapi kode untuk masing-masing method diatas.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-16.png"></p>

<p>Sekarang kita coba lagi untuk meng-compile ulang project CalculatorServer dengan cara klik kanan project <code>CalculatorServer</code> -> <code>Build</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-12.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-17.png"></p>

<h3>WCF Service Behavior</h3>

<p>WCF service behavior digunakan untuk mengatur behavior atau prilaku WCF service ketika menangani request atau permintaan dari klien.</p>

<p>Jika kita mempunyai behavior atau tingkah laku yang baik, otomatis kita juga bisa menjadi orang yang lebih baik, benar atau tidak ? :-D</p>

<p>Begitu juga dengan WCF Service Behavior, dengan attribut ini kita bisa mengatur hal-hal yang berhubungan dengan :</p>

<ul>
<li>Concurrency</li>
<li>Throttling</li>
<li>Transaction</li>
<li>Instance Context/Session Management</li>
<li>Thread Behavior</li>
</ul>


<p>Untuk informasi yang lebih lengkap tentang WCF Service Behavior, silahkan baca artikel <a href="http://www.codeproject.com/Articles/443576/Implementing-WCF-Service-Behaviors">Implementing WCF Service Behaviors</a> dan <a href="http://www.codeproject.com/Articles/89858/WCF-Concurrency-Single-Multiple-and-Reentrant-and">WCF Concurrency (Single, Multiple, and Reentrant) and Throttling</a>.</p>

<p>Sebagi contoh kita akan mengeset behavior untuk <code>Concurrency</code> dan <code>Instance Context</code> dengan model Concurrency = Single dan Instance Context = Per Call via attribute WCF service behavior.</p>

<p>Untuk menggunakan attribute WCF service behavior, tambahkan terlebih dulu referensi <code>System.ServiceModel</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-18.png"></p>

<p>Kemudian tambahkan juga di bagian <code>using</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-19.png"></p>

<p>Setelah itu revisi class Calculator menjadi seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/090515-20.png"></p>

<p>Yuph sampai disini saja untuk postingan kali ini, insyaAlloh akan kita lanjutkan pada kesempatan berikutnya.</p>

<p>Selamat <a href="https://github.com/k4m4r82/Calculator">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tutorial WCF Service Bagian #1]]></title>
    <link href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/"/>
    <updated>2015-05-02T10:15:26+07:00</updated>
    <id>http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1</id>
    <content type="html"><![CDATA[<h3>Apa itu WCF</h3>

<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/05/020515-16.png" width="100" height="100">WCF singkatan dari Windows Communication Foundation, merupakan salah satu teknologi Microsoft untuk membangun aplikasi berbasis layanan (service-oriented applications). Dengan kata lain WCF itu merupakan salah satu alternatif untuk membangun <a href="http://www.techopedia.com/definition/1622/web-service-net">web service</a> dan <a href="http://en.wikipedia.org/wiki/Distributed_computing">sistem terdistribusi</a> lainnya menggunakan teknologi Microsoft .NET.</p>

<blockquote><p>Dalam tutorial ini kita akan lebih banyak membahas hal-hal teknis untuk membuat web service menggunakan WCF. Untuk referensi lebih lanjut mengenai WCF bisa langsung Anda cari menggunakan layanan search engine favorit Anda :-)</p></blockquote>

<!-- more -->


<p>WCF merupakan gabungan dari beberapa teknologi <a href="http://en.wikipedia.org/wiki/Remote_procedure_call">RPC</a> lainnya seperti Web Service, <a href="http://coding4ever.net/blog/categories/dot-net-remoting/">.NET Remoting</a>, MSMQ dan COM+</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-01.png"></p>

<p style="text-align:center">Sumber - <a href="http://wcftutorial.net/Introduction-to-WCF.aspx" target="_blank">WCF Tutorial</a></p>


<p>Sebagai langkah awal kita akan membuat aplikasi sederhana yang akan menerapkan teknologi WCF. Aplikasi yang akan kita buat yaitu Calculator, walaupun sederhana tetapi aplikasi ini membutuhkan 3 project untuk membuatnya.</p>

<ol>
<li><p><code>CalculatorLib</code> – Project CalculatorLib dibuat dengan memanfaatkan project bertipe Class Library yang isinya hanya berupa interface ICalculator dengan 4 buah method abstract yaitu : <code>Penambahan</code>, <code>Pengurangan</code>, <code>Perkalian</code> dan <code>Pembagian</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-02.png"></p>

<p>Project ini nantinya akan dicompile menjadi file dengan ekstensi .dll (CalculatorLib.dll), file CalculatorLib.dll ini akan dishare atau ditambahkan sebagai referensi untuk aplikasi CalculatorServer dan CalculatorClient.</p>

<p>Teknik ini dikenal dengan istilah <code>Shared Assembly</code> tujuannya adalah agar aplikasi server dan klien bisa berkomunikasi dengan cara yang sama.</p></li>
<li><p><code>CalculatorServer</code> – Project CalculatorServer dibuat dengan memanfaatkan project bertipe Class Library. Project ini akan dicompile menjadi file dengan ekstensi .dll (CalculatorServer.dll).</p>

<p>Project ini nantinya akan mengimplementasikan semua method-method abstract dari project CalculatorLib.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-03.png"></p>

<p>Agar class ini (CalculatorServer.dll) bisa dikenali sebagai WCF service, kita perlu meng-host-kannya terlebih dulu dengan beberapa cara yaitu :</p>

<ul>
<li>Hosting in Internet Information Services(IIS)</li>
<li>Hosting in Windows Activation Services(WAS)</li>
<li>Hosting in a Console or Desktop application(Self hosting)</li>
<li>Hosting in a Windows Service <br/>
<br></li>
</ul>
</li>
<li><p><code>CalculatorClient</code> – Project CalculatorClient dibuat dengan memanfaatkan project bertipe Windows Application, aplikasi ini hanya memanggil method-method abstract dari project CalculatorLib dengan memanfaatkan objek proxy sehingga method tersebut akan dieksekusi secara remote (dijalankan di sisi server).</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-04.png"></p>

<p><p style="text-align:center">Sumber - <a href="http://www.topwcftutorials.net/2014/06/3-ways-generate-proxy-wcf-service.html" target="_blank">Top WCF Tutorial</a></p></p>

<p>Berikut gambaran lengkap project yang akan kita buat</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-05.png"></p></li>
</ol>


<p>Oke kita sudahi dulu obrolannya dan kita langsung saja mulai dengan pembuatan project CalculatorLib, jangan lupa untuk mengaktifkan terlebih dulu Visual Studio .NET Anda.</p>

<h3>Membuat Project CalculatorLib</h3>

<ol>
<li><p>Klik menu File ->New -> Project …</p></li>
<li><p>Pada dialog New Project aktifkan pilihan Visual C# kemudian pada pilihan Templates pilih Class Library</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-06.png"></p>

<p>Pada isian Name isikan CalculatorLib, setelah itu klik tombol Ok.</p>

<p>Secara default pada saat pembuatan project sudah otomatis disediakan 1 buah class kosong dengan nama Class1, karena kita akan menambahkan class baru jadi class ini dihapus saja.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-07.png"></p></li>
</ol>


<h3>Menambahkan Interface ICalculator</h3>

<ol>
<li><p>Klik kanan project CalculatorLib -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-08.png"></p></li>
<li><p>Pada dialog add new item, pilih Interface dan untuk isian Name diisi ICalculator</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-09.png"></p>

<p>Setelah itu akan tampil editor code interface ICalculator</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-10.png"></p>

<p>Jangan lupa untuk menambahkan access modifier <code>public</code>.</p>

<p>Selanjutnya kita tinggal menambahkan 4 method abstractnya yaitu <code>Penambahan</code>, <code>Pengurangan</code>, <code>Perkalian</code> dan <code>Pembagian</code>.</p>

<p>Berikut kode lengkapnya :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-11.png"></p>

<p>Jika kita perhatikan kode di atas, ada tambahan attribute <code>ServiceContract</code> dan <code>OperationContract</code> pada nama interface dan method abstractnya.</p>

<p><code>ServiceContract</code> memberikan informasi service/layanan apa saja yang tersedia untuk bisa diakses sedangkan <code>OperationContract</code>  digunakan untuk memberikan tanda bahwa method tersebut merupakan operasi atau bagian dari <code>ServiceContract</code>.</p>

<p>Bagaimana jika kita lupa menambahkan attribut <code>ServiceContract</code> dan <code>OperationContract</code> ? Ya otomatis interface ICalculator berikut method tidak bisa diakses oleh client.</p>

<p>Untuk menambahkan attribut <code>ServiceContract</code> dan <code>OperationContract</code> kita perlu menambahkan referensi <code>System.ServiceModel</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-12.png"></p>

<p>Kemudian mendaftarkannya di bagian using</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-13.png"></p></li>
</ol>


<h3>Mengcompile project CalculatorLib</h3>

<p>Tujuannya adalah agar project CalculatorLib ini bisa digunakan sebagai referensi oleh aplikasi CalculatorServer dan CalculatorClient</p>

<ol>
<li><p>Klik kanan project CalculatorLib -> Build</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-14.png"></p>

<p>Setelah itu akan tampil hasil output dari proses Build</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/05/020515-15.png"></p></li>
</ol>


<p>Yuph cukup sampai disini, insya Alloh akan kita lanjutkan pada kesempatan berikutnya.</p>

<p>Selamat <a href="https://github.com/k4m4r82/Calculator">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Jadwal Backup Database Otomatis]]></title>
    <link href="http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/"/>
    <updated>2015-04-30T15:33:59+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/04/300415-14.png" width="100" height="100">Backup database merupakan salah satu hal penting, apalagi jika kita bekerja sebagai database administrator.</p>

<p>Semakin banyaknya data-data yang tersimpan seperti data keuangan, akademik dan data penting lainnya mengharuskan kita untuk meluangkan waktu khusus untuk melakukan backup database.</p>

<p>Backup secara manual tentu saja tidak disarankan, apalagi jika datanya sudah banyak, tentu saja sedikit banyaknya akan menyita waktu kita untuk melakukan hal penting lainnya.</p>

<!-- more -->


<p>Salah satu keuntungan menggunakan backup otomatis adalah, kita bisa mengset jadwal backup diluar jam-jam kantor. Misal jam 5 sore, jam 12 malam atau jam lainnya sesuai dengan kebutuhan.</p>

<h3>Database MySQL</h3>

<p>Adapun database yang kita gunakan untuk simulasi backup otomatis ini adalah database MySQL. Untuk membackup database MySQL kita bisa gunakan tool bawaan MySQL yaitu <code>mysqldump</code>.</p>

<p>Adapun perintahnya seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>' backup
</span><span class='line'>mysqldump -uUSER_NAME -pUSER_PASSWORD --routines NAMA_DATABASE > LOKASI_FILE_BACKUP.SQL</span></code></pre></td></tr></table></div></figure>


<p>Parameter <code>–routines</code> ditambahkan jika database mempunyai fungsi/trigger.</p>

<p>Karena data backupnya yang disimpan lebih dari satu, untuk nama database akan kita buat unik dengan format : <code>nama_database-tahun-bulan-hari_jam_menit</code>. Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-01.png"></p>

<p>Untuk mendapatkan informasi tahun, bulan, hari dan jam, kita bisa memanfaatkan batch command dengan perintah seperti berikut :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>for /f "tokens=2-4 delims=/ " %%a in ('date /T') do set year=%%c
</span><span class='line'>for /f "tokens=2-4 delims=/ " %%a in ('date /T') do set month=%%a
</span><span class='line'>for /f "tokens=2-4 delims=/ " %%a in ('date /T') do set day=%%b
</span><span class='line'> 
</span><span class='line'>for /f "tokens=1 delims=: " %%h in ('time /T') do set hour=%%h
</span><span class='line'>for /f "tokens=2 delims=: " %%m in ('time /T') do set minutes=%%m
</span><span class='line'>for /f "tokens=3 delims=: " %%a in ('time /T') do set ampm=%%a
</span><span class='line'> 
</span><span class='line'>rem membuat file backup database dengan format nama_database-tahun-bulan-hari_jam_menit
</span><span class='line'>set FILE_BACKUP=D:\backup\Chinook-%year%-%month%-%day%_%hour%-%minutes%-%ampm%
</span><span class='line'> 
</span><span class='line'>rem USER_NAME, USER_PASSWORD dan NAMA_DATABASE menyesuaikan
</span><span class='line'>mysqldump -uroot -prahasia --routines Chinook > %FILE_BACKUP%.sql</span></code></pre></td></tr></table></div></figure>


<p>Setelah itu kode di atas kita simpan di folder <code>Instalasi MySQL\bin</code>, misal dengan nama <code>backup.cmd</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-02.png"></p>

<h3>Windows Task Scheduler</h3>

<p>Agar file <code>backup.cmd</code> ini bisa dijalankan secara berulang-ulang dan otomatis, kita bisa memanfaatkan tool yang sudah tersedia di Windows yaitu <code>Windows Task Scheduler</code>.</p>

<p>Untuk mengakses tool ini bisa dilakukan melalui menu Start -> Accessories -> System Tools -> Task Scheduler</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-03.png"></p>

<p>Berikut langkah-langkah untuk menambahkan task baru.</p>

<ol>
<li><p>Klik <code>Create Basic Task</code> di panel Actions
<img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-04.png">
Kemudian isikan informasi <code>Name</code> dan <code>Description</code> kemudian klik tombol Next</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-05.png"></p></li>
<li><p>Di dialog berikutnya kita akan menentukan kapan task ini akan di eksekusi. Contoh jika task ini akan dieksekusi setiap hari kita pilih <code>Daily</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-06.png"></p></li>
<li><p>Berikutnya kita akan menentukan jam berapa task ini akan dieksekusi</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-07.png">
Pada gambar di atas, task ini akan dieksekusi setiap jam 5 sore.</p></li>
<li><p>Berikutnya kita akan menentukan apa yang akan dilakukan task ini, ketika dieksekusi. Sebagai contoh task ini akan menjalankan file <code>backup.cmd</code> yang tersimpan di folder bin MySQL</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-08.png">
<img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-09.png">
Di bagian <code>Program/script</code> kita tentukan nama file <code>backup.cmd</code>, sedangkan untuk <code>Start in</code> kita tentukan lokasi/folder file <code>backup.cmd</code></p></li>
<li>Terakhir klik tombol Finish</li>
</ol>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-10.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-11.png"></p>

<p>Untuk mencoba apakah backup berjalan dengan baik, klik kanan nama task <code>Backup Database Chinook</code> -> Run</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-12.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/300415-13.png"></p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paket NuGet Yang Wajib Dicoba Bagian #1 - CrashReporter.NET]]></title>
    <link href="http://coding4ever.net/blog/2015/04/14/paket-nuget-yang-wajib-dicoba-bagian-number-1-crashreporter-dot-net/"/>
    <updated>2015-04-14T14:41:34+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/14/paket-nuget-yang-wajib-dicoba-bagian-number-1-crashreporter-dot-net</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png" width="120" height="100">Apakah Anda percaya jika saya katakan aplikasi saya 100% bebas bug, tentu saja tidak. Seberapa keraspun kita mencoba pasti aplikasi yang kita buat ada bugnya.</p>

<p>Secara teknis kita tidak bisa melakukan pengetesan sebaik yang dilakukan oleh end-user. Mereka bisa melakukan hal-hal luar biasa diluar perkiraan dan skenario kita yang bisa menyebabkan error, dan bisa saja menyebabkan mereka menjadi <code>ilfil</code> menggunakan aplikasi kita he he :-D</p>

<!-- more -->


<p>Yang jelas, kita tidak dapat memperbaiki bug sampai kita tahu penyebabnya, sayangnya end-user biasanya kurang bisa menjelaskan masalah ini dengan baik.</p>

<p><a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a> adalah salah satu library gratis yang bisa menjadi solusi untuk masalah ini dengan konfigurasi mudah dan bisa mengirimkan laporan bug via email.</p>

<h3>Menambahkan Library CrashReporter.NET</h3>

<p>Untuk menambahkan library <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a> bisa kita lakukan via <a href="http://coding4ever.net/blog/categories/nuget/">NuGet Package Manager</a>. Adapun caranya seperti berikut :</p>

<h4>Langkah – 1</h4>

<p>Klik kanan node <code>References</code> -> <code>Manage NuGet Packages...</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-12.png"></p>

<h4>Langkah – 2</h4>

<p>Cari <code>CrashReporter.NET</code> dan klik tombol Install</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-13.png"></p>

<p>Klik tombol Close, kemudian cek node <code>References</code>, seharusnya sudah ada tambahan library <code>CrashReporter.NET</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-14.png"></p>

<h3>Cara Penggunaan Library CrashReporter.NET</h3>

<p>Ada dua cara untuk menggunakan <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a></p>

<p><code>1. Global Exception</code></p>

<p>Jika kita ingin semua exception dihandle oleh <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a>, gunakan opsi ini. Caranya adalah dengan menambahkan kode konfigurasi di Main Method (Entry point dari program yang akan dijalankan pertama  kali).</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-01.png"></p>

<p><code>2. Individual Exception</code></p>

<p>Untuk opsi yang kedua ini berarti kita menambahkan kode konfigurasi hanya pada method-method tertentu saja yang kita anggap berpotensi menimbulkan <code>error</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-02.png"></p>

<p>Dua contoh kode di atas menggunakan class <code>ReportCrashConfig</code> yang kita bahas di bagian <em>konfigurasi CrashReporter.NET</em>.</p>

<h3>Konfigurasi CrashReporter.NET</h3>

<p>Untuk melakukan konfigurasi <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a>, cukup membuat objek dari class ReportCrash dan mengeset beberapa nilai property seperti <em>FromEmail, ToEmail</em>, dan property penting lainnya.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-03.png"></p>

<p>Secara default <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a>  menggunakan service <a href="https://drdump.com/crash-reporting-system">Doctor Dump</a>, untuk mengirimkan email laporan bug ke email yang sudah kita tentukan melalui property <em>ToEmail</em>.</p>

<p>Jika kita ingin menggunakan email sendiri untuk mengirim laporan bug, berarti kita harus menyiapkan dua email misal dengan nama <em>pengirim.bug@gmail.com</em> dan <em>penerima.bug@gmail.com</em> yang masing-masing kita set untuk nilai property <em>FromEmail</em>, <em>ToEmail</em> dan  kemudian mengeset nilai property <em>AnalyzeWithDoctorDump = false</em>. Dan jangan lupa set property <em>UserName</em> = <em>FromEmail</em>, untuk <em>Password</em> email menyesuaikan dengan <em>FromEmail</em>.</p>

<p>Agar kode konfigurasi di atas bisa digunakan berulang-ulang, mungkin bisa kita <code>bungkus</code> ke dalam sebuah class tersendiri.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-04.png"></p>

<p>Sehingga ketika diperlukan kita cukup memanggilnya dengan perintah <code>new ReportCrashConfig(object exception)</code></p>

<h3>Demo CrashReporter.NET</h3>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-05.png"></p>

<p>Untuk demo disini kita akan memanfaatkan dua jenis error yaitu <em>DivideByZeroException</em> dan <em>FileNotFoundException</em>.</p>

<h4>DivideByZeroException</h4>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-06.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-07.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-08.png"></p>

<h4>FileNotFoundException</h4>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-09.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-10.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/140415-11.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoCrashReporterDotNET">MENCOBA</a> :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comment as a Guest]]></title>
    <link href="http://coding4ever.net/blog/2015/04/13/comment-as-a-guest/"/>
    <updated>2015-04-13T09:13:52+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/13/comment-as-a-guest</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/04/disqus_icon.png" width="120" height="100">Blog <a href="http://coding4ever.net/">ini</a> dibangun di atas static blogging framework <a href="http://octopress.org/">Octopress</a> dan untuk berinteraksi dengan pengunjung saya menggunakan layanan <a href="https://disqus.com/">Disqus</a>.</p>

<p>Jika sebelumnya Anda harus menjadi anggota dari <a href="https://disqus.com/">Disqus</a> untuk memberikan komentar, mulai sekarang Anda sudah bisa memberikan komentar tanpa harus mendaftar di <a href="https://disqus.com/">Disqus</a>.</p>

<!-- more -->


<p>Caranya adalah pada saat memberikan komentar, Anda aktifkan pilihan <strong><em>I&rsquo;d rather post as gues</em></strong>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/disqus_comment1.png"></p>

<p>Untuk informasi email, sebaiknya Anda isikan dengan benar jika ingin mendapatkan notifikasi ketika saya me-replay pesan Anda.</p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Laporan Crystal Reports .NET Dengan Model Data-Push]]></title>
    <link href="http://coding4ever.net/blog/2015/04/12/membuat-laporan-crystal-reports-net-dengan-model-data-push/"/>
    <updated>2015-04-12T23:58:08+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/12/membuat-laporan-crystal-reports-net-dengan-model-data-push</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2015/04/sap-cr.jpg" width="120" height="100">Ketika memutuskan untuk menggunakan Crystal Reports‎ sebagai tool untuk membuat laporan, ada dua model yang bisa kita gunakan untuk menampilkan data.</p>

<ol>
<li>Pull model – kita mengeset koneksi ke database, mengirimkan perintah SQL, menentukan filter dan sisanya akan langsung ditangani oleh Crystal Reports. Cara yang pertama ini adalah cara umum yang biasanya digunakan untuk menampilkan data, dan rata-rata tutorial yang beredar juga menggunakan cara ini.</li>
<li>Push model – dengan cara yang kedua ini kita membuat tabel temporary dengan menggunakan objek DataSet kemudian mengirimkan data dengan format DataSet, DataTable, IDataReader atau IEnumerable dan sisanya akan langsung ditangani oleh Crystal Reports.</li>
</ol>


<!-- more -->


<p>Nah pada postingan kali ini kita akan menggunakan cara yang kedua yaitu Push Model dengan sumber datanya berupa object collection (IEnumerable).</p>

<p>Persiapan tool-tool yang akan digunakan :</p>

<ol>
<li><a href="http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-community">Visual Studio Community 2013</a>, Anda bisa saja menggunakan Visual Studio .NET versi sebelumnya (2010, 2012)</li>
<li><a href="http://coding4ever.net/blog/categories/nuget/">NuGet</a>, untuk memudahkan dalam menambahkan library pihak ketiga. Adapun library pihak ketiga yang digunakan dalam sample ini adalah <a href="http://coding4ever.net/blog/categories/dapper-net/">Dapper .NET</a> dan <a href="http://www.nuget.org/packages/System.Data.SQLite.Core/">System.Data.SQLite Core</a></li>
<li><a href="http://scn.sap.com/docs/DOC-7824">Crystal Reports SP 13</a></li>
<li>Database <a href="http://www.sqlite.org/">SQLite</a></li>
<li>Tipe project WinForm</li>
</ol>


<p>Untuk contoh postingan kali ini, kita hanya menggunakan satu buah tabel dengan struktur seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-01.png"></p>

<p>Setelah semua tool yang dibutuhkan tersedia kita lanjutkan dengan pembuatan project :</p>

<ul>
<li>Buat project baru dengan type WinForm</li>
</ul>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-02.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-03.png"></p>

<ul>
<li>Tambahkan empat folder baru masing-masing dengan nama DataSet, Model, Dao dan Report</li>
</ul>


<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-04.png"></p>

<p>Folder DataSet digunakan untuk mengelompokkan item-item DataSet yang berfungsi sebagai tabel temporary, folder Model untuk mengelompokkan class-class model atau entity, folder Dao untuk mengelompokkan class-class akses database (Data Acces Object) dan terakhir folder Report untuk mengelompokkan item-item Crystal Reports.</p>

<h3>Class Model/Entity</h3>

<p>Untuk menerapkan konsep OOP (Object-oriented programming) dalam pemrograman database kita perlu membuat sebuah class yang disebut dengan istilah class Model atau Entity. Class ini merupakan representasi dari tabel-tabel yang ada di dalam database. Tujuan dari membuat class ini adalah agar kita bisa melakukan mapping (pemetaan) baris/row dari tabel menjadi kumpulan objek (object collection).</p>

<p>Pemetaan bisa dilakukan secara manual atau bisa juga secara otomatis dengan menggunakan tool-tool ORM dari pihak ketiga seperti <a href="http://coding4ever.net/blog/categories/dapper-net/">Dapper .NET</a> dan <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a>. Untuk contoh kali ini kita menggunakan <a href="http://coding4ever.net/blog/categories/dapper-net/">Dapper .NET</a>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-05.png"></p>

<p>Setelah memahami apa itu class model dan bagaimana proses pemetaan record ke objek terjadi, langkah berikutnya adalah menambahkan class model Siswa yang mempunyai struktur sama persis dengan rancangan tabel di awal.</p>

<p>Untuk menambahkan class Model, klik kanan Project -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-06.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-07.png"></p>

<p>Kemudian lengkapi kode class Siswa, seperti gambar berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-08.png"></p>

<h3>Class DAO (Data Access Object)</h3>

<p>Class DAO adalah class yang bertugas untuk menangani operasi database yang dikenal dengan istilah operasi CRUD (Create, Read, Update dan Delete). Di dalam class inilah kita menuliskan perintah-perintah INSERT, UPDATE, DELETE dan SELECT. Sebagai contoh kode dibawah ini akan melakukan mapping (pemetaan) baris/row tabel menjadi kumpulan objek (object collection) secara otomatis.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-09.png"></p>

<p>Contoh pemanggilannya juga gampang :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-10.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-11.png"></p>

<h3>DataSet</h3>

<p>Dengan model data Push kita tidak langsung menghubungkan antara Crystal Reports dengan database, jadi sebagai solusinya kita menggunakan DataSet yang berfungsi sebagai tabel temporary dan menjadi sumber data bagi Crystal Reports.</p>

<p>Untuk menambahkan item DataSet, klik kanan Project -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-12.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-13.png"></p>

<p>Setelah menambahkan item DataSet (DsSiswa), langkah berikutnya adalah menambahkan item DataTable</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-14.png"></p>

<p>Kemudian input informasi DataTablenya seperti gambar berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-15.png"></p>

<p>Khusus untuk nama field dan tipe data dari DataTable yang kita buat, harus disesuaikan dengan nama field dan tipe data tabel.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-01.png"></p>

<h3>Crystal Reports</h3>

<p>Crystal Reports adalah tool yang kita gunakan untuk membuat laporan. Untuk menambahkan item Crystal Report, klik kanan Project -> Add -> New Item…</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-16.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-17.png"></p>

<p>Pilih &ldquo;As a Blank Report&rdquo; karena kita akan mendesain report secara manual.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-18.png"></p>

<p>Langkah berikutnya adalah menentukan sumber data yang kita arahkan ke item DataSet yang sudah kita buat pada langkah sebelumnya</p>

<p>Klik kanan Database Fields -> Database Expert …</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-19.png"></p>

<p>Pilih ADO.NET DataSet Siswa</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-20.png"></p>

<p>Drag satu-satu field siswa (nis, nama dan alamat) ke section detail, kemudian dirapikan.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-21.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-22.png"></p>

<h3>Crystal Report Viewer</h3>

<p>Setelah semua persiapan selesai, langkah berikutnya adalah menambahkan Crystal Report Viewer yang berfungsi sebagai container untuk untuk menampilkan report.</p>

<p>Aktifkan form kemudian tambahkan Crystal Report Viewer</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-23.png"></p>

<p>Kemudian tambahkan kode berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-24.png"></p>

<p>Dari kode di atas kita bisa melihat tidak ada lagi kode untuk mengeset koneksi database dan perintah SQL yang akan dikirimkan. Cara ini sangat cocok digunakan ketika kita akan membangun sistem dengan arsitektur <a href="http://coding4ever.net/blog/2012/02/01/pembuatan-aplikasi-client-server-dengan-arsitektur-3-tier-part-1/">N-Tier</a>, di mana aplikasi klien sudah tidak terkoneksi lagi secara langsung ke database.</p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti gambar di bawah ini.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2015/04/120415-25.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoCRPushModel">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog Lama Coding4ever Aktif Kembali]]></title>
    <link href="http://coding4ever.net/blog/2015/04/11/blog-lama-coding4ever-aktif-kembali/"/>
    <updated>2015-04-11T16:34:41+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/11/blog-lama-coding4ever-aktif-kembali</id>
    <content type="html"><![CDATA[<p>Blog lama coding4ever yang beralamat di <a href="http://coding4ever.wordpress.com/">http://coding4ever.wordpress.com/</a> saya aktifkan lagi dengan mode <strong>Read Only</strong> karena sudah banyak dokumentasi tanya jawabnya, agar pertanyaan yang sama tidak ditanyakan lagi di blog ini.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KR Pulsa Elektrik]]></title>
    <link href="http://coding4ever.net/blog/2014/11/06/kr-pulsa-elektrik/"/>
    <updated>2014-11-06T11:22:30+07:00</updated>
    <id>http://coding4ever.net/blog/2014/11/06/kr-pulsa-elektrik</id>
    <content type="html"><![CDATA[<p>Kangen juga udah lama enggak posting :D</p>

<p><img class="left" src="https://coding4ever.files.wordpress.com/2014/11/krpulsa12.png" width="120" height="100">Kali ini kita akan membahas aplikasi Android yang namanya <a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">KR Pulsa Elektrik</a>. Aplikasi ini digunakan untuk mempermudah transaksi penjualan pulsa, token PLN, pembayaran tagihan dan voucher game.</p>

<p>Aplikasi ini gratis dan 100% buatan saya :D, bisa dibilang sebagai pilot project untuk pengembangan project Android lainnya. Lumayan lah iseng-iseng berhadiah dolar :D.</p>

<!-- more -->


<p>Salah satu fitur andalan aplikasi ini adalah kemudahan dalam pembuatan format perintah yang bisa disesuaikan dengan format perintah masing-masing distributor pulsa.</p>

<p>Fitur andalan lainnya adalah tersedianya server data untuk mendownload data-data referensi seperti <em>data bank, format perintah, operator kartu, harga voucher</em> dan <em>sms center</em> masing-masing distributor, sehingga memudahkan Anda sebagai penjual pulsa untuk bisa langsung melakukan transaksi sesuai dengan pilihan distributor.</p>

<p>Aplikasi ini bisa Anda install secara langsung dengan mengakses link berikut menggunakan smartphone Android Anda.</p>

<p><a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik</a></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/krpulsa23.png"></p>

<p>Berikut cuplikan beberapa screenshoot <a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">KR Pulsa Elektrik</a>, untuk cara penggunaannya bisa Anda download di <a href="http://goo.gl/rV0AHP">sini</a>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/12.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/22.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/32.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/42.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/521.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/11/62.png"></p>

<p>Selamat <a href="https://play.google.com/store/apps/details?id=net.coding4ever.krpulsaelektrik">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 8]]></title>
    <link href="http://coding4ever.net/blog/2014/06/08/entity-framework-part-8/"/>
    <updated>2014-06-08T10:21:10+07:00</updated>
    <id>http://coding4ever.net/blog/2014/06/08/entity-framework-part-8</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/03/entity_image.png" width="120" height="100">Melanjutkan kembali pembahasan tentang <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a>.</p>

<p>Misalkan kita mempunyai struktur tabel seperti gambar di bawah ini.</p>

<!-- more -->


<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/11.png"></p>

<p>Jika kita buatkan class entity dari ketiga tabel di atas, class diagramnya akan terlihat seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/21.png"></p>

<p>Dari gambar class diagram di atas, kita bisa melihat bahwa class <code>Siswa</code>, <code>Guru</code> dan <code>Pegawai</code> mempunyai beberapa property yang sama yaitu <code>Jalan</code>, <code>Kota</code>, <code>Provinsi</code> dan <code>KodePos</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/31.png"></p>

<p>Untuk alasan desain class entity yang lebih baik sebaiknya kita pisahkan property <code>Jalan</code>, <code>Kota</code>, <code>Provinsi</code> dan <code>KodePos</code> ke dalam class tersendiri, misal dengan nama class <code>Alamat</code>, kemudian masing-masing class entity <code>Siswa</code>, <code>Guru</code> dan <code>Pegawai</code> menambahkan property baru dengan tipe <code>class Alamat</code>, sehingga class diagram kita akan menjadi seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/41.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/10.png"></p>

<p>Nah class baru (Alamat) inilah yang akan menjadi pembahasan kita pada postingan kali ini yang dikenal dengan istilah <code>Complex Types</code> atau <code>Value Types</code>.</p>

<p>Sejak awal <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a> sudah mendukung <code>Complex Types</code> atau yang dikenal juga dengan istilah <code>value types</code>.</p>

<p><code>Complex Types</code> atau <code>value types</code> bisa digunakan sebagai tipe data dari sebuah property sehingga ada kemiripan dengan class entity biasa yang sudah kita kenal, yang disebut dengan istilah <code>entity types</code>.</p>

<p>Lalu di mana perbedaannya ?</p>

<p>Di dalam <a href="http://coding4ever.net/blog/categories/entity-framework/">Entity Framework</a> setiap <code>entity types</code> harus mempunyai <code>property key</code> sedangkan <code>complex types</code> tidak.</p>

<p>Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/51.png"></p>

<h3>Mendefinisikan Complex Types</h3>

<p>Setelah mengetahui perbedaan antara <code>entity types</code> dan <code>complex types</code> kita juga harus mengetahui aturan dalam membuat <code>complex types</code>.</p>

<p>Berikut aturan-aturan yang harus kita penuhi untuk membuat <code>complex types</code>.</p>

<ol>
<li><code>Complex types</code> tidak boleh mempunyai <code>property key</code>.</li>
<li>Semua property yang dimiliki <code>complex types</code> harus bertipe <a href="http://en.wikipedia.org/wiki/Primitive_data_type">primitif</a>.</li>
<li>Ketika digunakan sebagai tipe data oleh class lain, tidak boleh sebagai <code>collection type</code> harus <code>single
instance</code></li>
</ol>


<p>Contoh :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/62.png"></p>

<h3>Konfigurasi Mapping (pemetaan) Complex Types</h3>

<p>Untuk menyederhanakan contoh kode program, konfigurasi mapping (pemetaan) <code>complex types</code> di bawah ini menggunakan konfigurasi <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>. Saya sendiri lebih senang menggunakan konfigurasi <a href="http://msdn.microsoft.com/en-us/data/jj591617.aspx">Fluent API</a> dengan tujuan agar class entity kita tetap bersih dari atribut-atribut <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>.</p>

<p>Caranya adalah dengan mengedit class Alamat, kemudian menambahkan atribut <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/71.png"></p>

<p>Terakhir kita coba untuk mengakses property dengan tipe <code>complex types</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/81.png"></p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti berikut :</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/91.png"></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework8">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manajemen Proyek Menggunakan Redmine Bagian 1]]></title>
    <link href="http://coding4ever.net/blog/2014/06/02/manajemen-proyek-menggunakan-redmine-bagian-1/"/>
    <updated>2014-06-02T11:27:10+07:00</updated>
    <id>http://coding4ever.net/blog/2014/06/02/manajemen-proyek-menggunakan-redmine-bagian-1</id>
    <content type="html"><![CDATA[<p><img class="left" src="https://coding4ever.files.wordpress.com/2014/06/redmine.png">Dalam pengembangan proyek, biasanya dibutuhkan aplikasi untuk mencatat hal-hal yang berhubungan dengan proyek yang sedang dikembangkan. Seperti daftar fitur, bug, dokumentasi dan seterusnya.</p>

<!-- more -->


<p>Selama ini ada beberapa aplikasi proyek manajemen yang biasa saya gunakan :</p>

<ul>
<li><a href="http://coding4ever.net/blog/2013/01/10/todo-list/">ToDo List</a> - Aplikasi berbasis windows yang gratis dan open source. Salah satu kekurangannya adalah aplikasi ini adalah aplikasi standalone, sehingga akan menyulitkan untuk mengelola proyek yang dikerjakan oleh tim.</li>
<li><a href="https://trello.com/">Trello</a> - Aplikasi berbasis web yang simple, gratis dan online. Ini adalah salah satu aplikasi andalan saya sampai saat ini.</li>
<li><a href="http://redmine.org/">Redmine</a> - Aplikasi berbasis web dengan fitur lengkap, gratis dan open source. Untuk menggunakan <a href="http://redmine.org/">Redmine</a> harus dilakukan instalasi terlebih dulu.</li>
</ul>


<p>Pada bagian pertama ini kita hanya akan membahas instalasi <a href="http://redmine.org/">Redmine</a> dengan target database <a href="http://dev.mysql.com/downloads/mysql/">MySQL</a>.</p>

<h3>Instalasi</h3>

<p><a href="http://redmine.org/">Redmine</a> adalah aplikasi proyek manajemen berbasis web yang dikembangkan menggunakan framework <code>Ruby on Rails</code>. Dukungan database pun lumayan banyak seperti <code>SQLite</code>, <code>MySQL</code>, <code>PostgreSQL</code> dan <code>SQL Server</code>.</p>

<p>Untuk menginstall aplikasi berbasis web yang dikembangkan menggunakan framework <code>Ruby on Rails</code> tentu berbeda dengan menginstall aplikasi berbasis web yang dikembangkan menggunakan <code>php</code>.</p>

<p>Untuk saat ini ada banyak tool yang mempermudah proses instalasi <a href="http://redmine.org/">Redmine</a> seperti <a href="http://www.helicontech.com/articles/installing-redmine-on-windows-in-production/">Web Platform Installer</a> dan <a href="http://bitnami.org/stack/redmine">BitNami Redmine Stack</a>. Tapi dipostingan kali ini kita akan melakukan instalasi secara manual.</p>

<p>Oke kita langsung saja, berikut adalah langkah-langkah instalasi <a href="http://redmine.org/">Redmine</a>.</p>

<h3>Prerequisites</h3>

<p>Hal-hal yang perlu kita siapkan sebelum masuk ke proses instalasi <a href="http://redmine.org/">Redmine</a>.</p>

<ul>
<li>Install <code>Ruby</code> dan <code>Development Kit</code>. Untuk mempermudah instalasi anda bisa menggunakan <a href="https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-2.2.3.exe">RailsInstaller</a> yang di dalamnya sudah diikutsertakan paket <code>Ruby</code> dan <code>Development Kit</code>.</li>
<li>Install <a href="http://dev.mysql.com/downloads/mysql/">MySQL</a>.</li>
<li><p>Download <a href="http://dev.mysql.com/downloads/connector/c/">MySQL Connector/C</a>, kemudian ekstrak ke folder <code>C:\mysql-connector</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/1.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/2.png"></p>

<p>kemudian copykan file <code>libmysql.dll</code> yang ada di folder <code>C:\mysql-connector\lib</code> ke folder <code>C:\RailsInstaller\Ruby1.9.3\bin</code></p></li>
<li><p>Install <a href="http://ftp.sunet.se/pub/multimedia/graphics/ImageMagick/binaries/ImageMagick-6.7.7-0-Q16-windows-dll.exe">ImageMagick</a> (optional).
Petunjuk instalasinya ada di<a href="http://www.redmine.org/projects/redmine/wiki/HowTo_install_rmagick_gem_on_Windows">sini</a>.
Tujuan menginstall library ini adalah agar laporan yang dihasilkan <a href="http://redmine.org/">Redmine</a> seperti <code>Gantt chart</code> bisa disimpan dalam format png dan pdf.</p></li>
</ul>


<h3>Instalasi Redmine</h3>

<ul>
<li><p>Download source code terakhir <a href="http://www.redmine.org/projects/redmine/wiki/Download">Redmine</a>, kemudian ekstrak ke folder yang sudah ditentukan misal <code>C:\Redmine</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/3.png"></p></li>
<li><p>Membuat database kosong dengan nama <code>redmine</code>
 <code>CREATE DATABASE redmine CHARACTER SET utf8;</code></p></li>
<li><p>Konfigurasi koneksi database</p>

<p>Copykan file <code>database.yml.example</code> yang ada di folder <code>config</code> ke folder yang sama dengan nama <code>database.yml</code>. Kemudian edit file <code>database.yml</code> menggunakan editor kesayangan anda setelah itu update informasi yang ada di bagian <code>production</code> (database, host, username dan password).</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>production:
</span><span class='line'>  adapter: mysql2
</span><span class='line'>  database: redmine
</span><span class='line'>  host: localhost
</span><span class='line'>  username: user_mysql
</span><span class='line'>  password: password_user_mysql</span></code></pre></td></tr></table></div></figure></p></li>
</ul>


<h4>Langkah-langkah berikut dijalankan melalui command prompt</h4>

<ul>
<li>Aktifkan command prompt</li>
<li><p>Set variabel environment CPATH dan LIBRARY_PATH ImageMagick (optional)
<code>set CPATH=C:\ImageMagick\include</code>  <br/>
<code>set LIBRARY_PATH=C:\ImageMagick\lib</code></p></li>
<li><p>Install library mysql
  <code>gem install mysql2 --platform=ruby -- '--with-mysql-dir="C:\mysql-connector"'</code></p></li>
<li><p>Install <a href="http://bundler.io/">bundler</a><br/>
  <code>gem install bundler</code></p></li>
<li><p>Install semua paket gem yang dibutuhkan   <br/>
  <code>bundle install --without development test</code></p></li>
<li><p>Mengenerate session store secret. Untuk menyimpan cookie dan variabel session        <br/>
  <code>rake generate_secret_token</code></p></li>
<li><p>Membuat objek database  <br/>
  <code>set RAILS_ENV=production</code>  <br/>
  <code>rake db:migrate</code></p></li>
<li><p>Set konfigurasi default  <br/>
  <code>set RAILS_ENV=production</code>  <br/>
  <code>set REDMINE_LANG=en</code>  <br/>
  <code>rake redmine:load_default_data</code></p></li>
</ul>


<p>Setelah instalasi selesai, kita bisa melakukan tes dengan mengetikan skrip berikut :
<code>ruby script/rails server webrick -e production</code></p>

<p>kemudian akses url : <code>http://localhost:3000/</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/5.png"></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/6.png"></p>

<p>Login dengan user dan password <code>admin</code>.</p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/7.png"></p>

<p>Sampai disini proses instalasi <a href="http://redmine.org/">Redmine</a> sudah berhasil :)</p>

<h3>Mendaftarkan service Redmine ke Windows Service</h3>

<p>Tentu enggak kren klo setiap ingin mengakses <a href="http://redmine.org/">Redmine</a>, kita harus selalu menjalankan skrip <code>ruby script/rails server webrick -e production</code>, jadi ada baiknya service Redminenya kita daftarkan sebagai service Windows.</p>

<p>Berikut langkah-langkah untuk mendaftarkan service <a href="http://redmine.org/">Redmine</a> sebagai Windows Service :</p>

<ul>
<li><p>Aktifkan command prompt kemudian ketik perintah berikut <br/>
  <code>gem install win32-service</code></p></li>
<li><p>Buat file dengan nama <code>service.rb</code> simpan di folder instalasi <code>redmine</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/8.png"></p>

<p>kemudian copas kode berikut :</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">REDMINE_DIR</span> <span class="o">=</span> <span class="s1">&#39;C:\redmine&#39;</span>
</span><span class='line'><span class="no">LOG_FILE</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">REDMINE_DIR</span><span class="si">}</span><span class="se">\\</span><span class="s2">log</span><span class="se">\\</span><span class="s2">service.log&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;win32/daemon&#39;</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Win32</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">RedmineService</span> <span class="o">&lt;</span> <span class="no">Daemon</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">service_init</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Initializing service </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="vi">@server_pid</span> <span class="o">=</span> <span class="no">Process</span><span class="o">.</span><span class="n">spawn</span> <span class="s1">&#39;ruby script/rails s -e production&#39;</span><span class="p">,</span> <span class="ss">:chdir</span> <span class="o">=&gt;</span> <span class="no">REDMINE_DIR</span><span class="p">,</span> <span class="ss">:err</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">service_main</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Service is running </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> with pid </span><span class="si">#{</span><span class="vi">@server_pid</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">while</span> <span class="n">running?</span>
</span><span class='line'>        <span class="nb">sleep</span> <span class="mi">10</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">service_stop</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Stopping server thread </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;taskkill /PID </span><span class="si">#{</span><span class="vi">@server_pid</span><span class="si">}</span><span class="s2"> /T /F&quot;</span>
</span><span class='line'>      <span class="no">Process</span><span class="o">.</span><span class="n">waitall</span>
</span><span class='line'>      <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;Service stopped </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">exit!</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">RedmineService</span><span class="o">.</span><span class="n">mainloop</span>
</span><span class='line'>
</span><span class='line'><span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">LOG_FILE</span><span class="p">,</span><span class="s1">&#39;a+&#39;</span><span class="p">){</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot; ***Daemon failure </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2"> exception=</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="se">\n</span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">backtrace</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="vg">$/</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">raise</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li><p>Kembali lagi ke command prompt kemudian ketik perintah berikut
 <code>sc create Redmine binPath= "C:\RailsInstaller\Ruby1.9.3\bin\rubyw -C C:\redmine\ service.rb"</code></p></li>
<li><p>Jalankan service redmine <br/>
  <code>net start Redmine</code></p>

<p><img class="center" src="https://coding4ever.files.wordpress.com/2014/06/9.png"></p></li>
</ul>


<p>Akhirnya selesai juga :), dan untuk langkah-langkah penggunaan <a href="http://redmine.org/">Redmine</a> insya Alloh akan kita bahas dilain kesempatan.</p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manajemen Password Menggunakan KeePass]]></title>
    <link href="http://coding4ever.net/blog/2014/05/21/manajemen-password-menggunakan-keepass/"/>
    <updated>2014-05-21T15:12:47+07:00</updated>
    <id>http://coding4ever.net/blog/2014/05/21/manajemen-password-menggunakan-keepass</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://coding4ever.files.wordpress.com/2014/05/keepass2.png">Hari ini kita dituntut untuk mengingat banyak password. Ada password Email, FTP, Facebook, Internet Banking, Remote Desktop dan lain sebagainya. Ditambah lagi pekerjaan kita sebagai <code>Software developer</code> berarti ada tambahan password lagi yang harus kita ingat seperti password SQL Server, MySQL, Firebird, Web hosting dan lain-lain.</p>

<!-- more -->


<p>Kita disarankan untuk menggunakan password yang berbeda untuk setiap user. Karena jika kita hanya menggunakan satu password untuk semuanya dan jika seseorang berhasil mendapatkan password kita, berarti kita mempunyai masalah&hellip; ya masalah yang serius, Anda bisa membayangkannya ? Orang tersebut akan memiliki akses ke akun email kita, facebook dan lain sebagainya.</p>

<p><a href="http://keepass.info/">KeePass</a> adalah aplikasi password manager gratis dan open source, yang membantu kita untuk mengelola password dengan cara yang aman. Kita bisa menyimpan semua password dalam satu database. Database ini sendiri dipassword dengan satu password master atau bisa juga dalam bentuk file kunci. Jadi kita hanya perlu mengingat satu password master atau menggunakan file kunci untuk membuka database.</p>

<p>Database <a href="http://keepass.info/">KeePass</a> dienkripsi menggunakan enkripsi yang terbaik dan paling aman untuk saat ini yaitu (<a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES</a> dan <a href="http://en.wikipedia.org/wiki/Twofish">Twofish</a>).</p>

<h3>Instalasi</h3>

<p>Langkah-langkah instalasi seperti berikut :</p>

<ol>
<li>Download <a href="http://keepass.info/download.html">KeePass</a></li>
<li>Lakukan instalasi, kita tinggal mengikuti langkah-langkah yang ada</li>
</ol>


<h3>Cara penggunaan</h3>

<p>Untuk menggunakan <a href="http://keepass.info/">KeePass</a> sangat mudah, berikut langkah-langkahnya :</p>

<ul>
<li>Jalankan aplikasi <a href="http://keepass.info/download.html">KeePass</a>, bisa melalui menu Start -> Programs -> KeePass 2 atau melalui desktop.</li>
<li>Hal pertama yang harus kita lakukan adalah membuat database <a href="http://keepass.info/download.html">KeePass</a>. Caranya dengan mengklik menu File -> New</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/31.png"></p>

<p>   Kemudian tentukan nama database misal <code>DbKeePass</code></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/41.png"></p>

<ul>
<li>Setelah itu kita diminta untuk menentukan password yang digunakan untuk membuka database <code>DbKeePass</code></li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/51.png"></p>

<p>   kemudian klik <code>OK</code> sekali lagi</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/6.png"></p>

<h3>Group Password</h3>

<p>Secara default <a href="http://keepass.info/">KeePass</a> sudah menyediakan beberapa group password seperti group password untuk <code>Windows</code>, <code>Network</code>, <code>Email</code> dan sebagainya.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/7.png"></p>

<p>Untuk menambahkan group baru, kita tinggal klik kanan pada node utama kemudian pilih Add Group</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/8.png"></p>

<p>Setelah itu kita inputkan nama group, misal <code>SQL Server</code></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/9.png"></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/10.png"></p>

<h3>Item Group</h3>

<p>Setelah semua group password yang diperlukan dibuat, berikutnya adalah menambahkan <code>user</code>, <code>password</code> dan <code>link URL</code> (jika halaman web) untuk masing-masing group password.</p>

<p>Misal kita akan menambahkan user dan password facebook di group Internet.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/111.png"></p>

<p>Caranya dengan memilih group Internet kemudian klik kanan area kosong di panel sebelah kanan kemudian pilih Add Entry&hellip;</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/12.png"></p>

<p>Setelah itu inputkan informasi <code>User Name</code>, <code>Password</code> dan <code>URL</code></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/13.png"></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/14.png"></p>

<p>Sampai disini kita bisa mengulangi langkah-langkah sebelumnya untuk mendaftarkan user name dan password lainnya.</p>

<h3>Plugin</h3>

<p><a href="http://keepass.info/">KeePass</a> mempunyai banyak sekali <a href="http://keepass.info/plugins.html">plugin</a> yang bermanfaat, salah satunya adalah <a href="https://github.com/pfn/passifox/">PassIFox</a>, plugin ini memudahkan kita untuk menginputkan secara otomatis <code>user</code> dan <code>password</code> ketika kita mengakses halaman web yang ada form user dan passwordnya.</p>

<p><a href="https://github.com/pfn/passifox/">PassIFox</a> khusus untuk browser <a href="http://www.mozilla.org/en-US/firefox/new/">Firefox</a>, bagi pengguna <a href="https://www.google.com/intl/en/chrome/browser/">Chrome</a> bisa menggunakan <a href="https://chrome.google.com/webstore/detail/chromeipass/ompiailgknfdndiefoaoiligalphfdae">ChromeIPass</a>.</p>

<p>Misal kita mengakses halaman web yang ada form user dan passwordnya seperti <a href="http://wordpress.com/">Wordpress</a>, setelah itu kita klik kanan di inputan <code>Username</code> atau <code>Password</code> kemudian pilih menu <code>Fill User &amp; Pass</code>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/11.png"></p>

<p>Secara otomatis user dan password akan diisikan sesuai dengan data user dan password yang ada pada database <a href="http://keepass.info/">KeePass</a>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/22.png"></p>

<p><a href="https://github.com/pfn/passifox/">PassIFox</a> sendiri membutuhkan plugin yang lain yaitu <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a>.</p>

<h3>Instalasi Plugin <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a> dan <a href="https://github.com/pfn/passifox/">PassIFox</a></h3>

<h4><a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a></h4>

<p>Berikut langkah-langkahnya :</p>

<ul>
<li>Jika aplikasi <a href="http://keepass.info/">KeePass</a> sedang dijalankan, tutup terlebih dulu.</li>
<li>Download <a href="https://passifox.appspot.com/KeePassHttp.plgx">KeePassHttp</a>.</li>
<li>Copykan ke folder instalasi KeePass.</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/15.png"></p>

<ul>
<li>Verifikasi apakah plugin <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a> sudah terinstall dengan benar melalui menu Tools -> Plugins</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/17.png"></p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/18.png"></p>

<h4><a href="https://github.com/pfn/passifox/">PassIFox</a></h4>

<p>Setelah instalasi plugin <a href="https://github.com/pfn/keepasshttp/">KeePassHttp</a> berhasil, kita lanjutkan dengan menginstall plugin <a href="https://github.com/pfn/passifox/">PassIFox</a>. Adapun langkah-langkahnya seperti berikut :</p>

<ul>
<li>Jika aplikasi <a href="http://keepass.info/">KeePass</a> sedang dijalankan, tutup terlebih dulu.</li>
<li>Aktifkan <code>Firefox Add-ons Manager</code></li>
<li>Pada kota pencarian ketik <code>PassIFox</code></li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/16.png"></p>

<ul>
<li>Setelah instalasi <a href="https://github.com/pfn/passifox/">PassIFox</a>, restart Firefoxnya.</li>
</ul>


<h3>Konfigurasi plugin <a href="https://github.com/pfn/passifox/">PassIFox</a></h3>

<ul>
<li>Jalankan aplikasi <a href="http://keepass.info/">KeePass</a></li>
<li>Buka halaman website yang ada form loginnya misal <a href="https://www.facebook.com/">Facebook</a>, kemudian klik tombol <code>Connect</code> yang ada dipojok kanan atas</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/19.png"></p>

<ul>
<li>Akan tampil dialog konfirmasi, isikan <code>KeePassHttpKey</code> kemudian klik tombol Save</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/20.png"></p>

<p>Langkah-langkah konfigurasi ini hanya sekali saja setelah instalasi awal plugin <a href="https://github.com/pfn/passifox/">PassIFox</a>.</p>

<h3>Uji coba plugin <a href="https://github.com/pfn/passifox/">PassIFox</a></h3>

<ul>
<li>Jalankan aplikasi <a href="http://keepass.info/">KeePass</a></li>
<li>Buka halaman website yang ada form loginnya misal <a href="https://www.facebook.com/">Facebook</a></li>
<li>Akan tampil konfirmasi, jangan lupa untuk mencontreng pilihan <code>Remember this decision</code> agar kotak konfirmasi ini tidak tampil lagi ketika kita mengakses halaman  web yang sama.</li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/211.png"></p>

<ul>
<li>Klik kanan inputan user atau password, kemudian pilih menu <code>Fill User &amp; Pass</code></li>
</ul>


<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/221.png"></p>

<p>dan secara otomatis user dan password akan diisikan sesuai dengan data user dan password yang ada pada database <a href="http://keepass.info/">KeePass</a>.</p>

<p><img class="center" src="http://coding4ever.files.wordpress.com/2014/05/23.png"></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
</feed>
