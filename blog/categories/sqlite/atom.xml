<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sqlite | Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/blog/categories/sqlite/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2016-01-10T11:10:38+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Membuat Sms Gateway Itu Gampang, Jangan Dipersulit !!!]]></title>
    <link href="http://coding4ever.net/blog/2010/07/12/membuat-sms-gateway-itu-gampang-jangan-dipersulit/"/>
    <updated>2010-07-12T07:01:35+07:00</updated>
    <id>http://coding4ever.net/blog/2010/07/12/membuat-sms-gateway-itu-gampang-jangan-dipersulit</id>
    <content type="html"><![CDATA[<p>Berhubung banyaknya pengunjung yang nyasar ke blog ini, gara-gara keyword &ldquo;<strong>sms gateway</strong>&rdquo; saya jadi merasa bersalah klo enggax ikut-ikutan membahas artikel yang satu ini he he he :D.</p>

<p>Walaupun sudah banyak blog yang membahas tentang masalah ini, tapi kayaxnya tema &ldquo;<strong>sms gateway</strong>&rdquo; masih hangat dan <strong>saru</strong> eh&hellip; seru untuk dibahas :D, dan tentunya dengan adanya artikel ini saya berharap lebih banyak lagi yang tersesat ke blog ini :D.</p>

<p>Oke jadi kasusnya apa nih, kita ambil aja sample sederhana yaitu &ldquo;<strong>pembuatan sms gateway untuk request nilai siswa</strong>&rdquo; dan untuk menyederhanakan pembahasan keywordnya kita batasi saja yaitu <strong>request</strong> <strong>nilai tugas</strong> dan <strong>ulangan</strong>.</p>

<p>Apa yang harus di persiapkan, pertama kita rancang dulu databasenya dan berhubung <a href="{{%20site.url%20}}/blog/2010/06/14/mengenal-lebih-dekat-database-sqlite/">artikel</a> saya yang membahas tentang database SQLite masih hangat jadi untuk databasenya kita menggunakan SQLite saja.</p>

<!-- more -->


<p>SQLite adalah database standalone yang kecil, mungil dan gratis. Bagaimana cara membuat database di SQLite sudah saya bahas di<a href="{{%20site.url%20}}/blog/2010/06/14/mengenal-lebih-dekat-database-sqlite/">sini</a> kemudian bagaimana mengaksesnya dari aplikasi juga sudah saya bahasa di<a href="{{%20site.url%20}}/blog/2010/07/05/mengakses-database-sqlite-menggunakan-library-dhsqlite/">sini</a>.</p>

<p>Berikut adalah rancangan sederhana database sms yang akan kita buat :</p>

<p><a href="http://coding4ever.files.wordpress.com/2010/07/12072010-1.png"><img src="http://coding4ever.files.wordpress.com/2010/07/12072010-1.png?w=300" alt="" /></a></p>

<p>Ada banyak cara untuk membaca sms masuk dan membalasanya, salah satunya adalah menggunakan perintah <a href="http://www.developershome.com/sms/atCommandsIntro.asp">AT COMMAND</a> dan Microsoft sendiri sudah menyediakan <a href="http://support.microsoft.com/kb/194922">komponen</a> yang bisa mengeksekusi perintah-perintah tersebut.</p>

<p>Tentunya cara ini (menggunakan <a href="http://www.developershome.com/sms/atCommandsIntro.asp">AT COMMAND</a>) bukan cara yang favorit dikalangan programmer instan seperti Anda dan Saya :D, jadi diartikel ini saya menggunakan <a href="http://www.activexperts.com/xmstoolkit/">komponen</a> pihak ketiga.</p>

<blockquote><p>Ingat komponen ini adalah shareware, segala resiko (kemudahan dalam membuat aplikasi sms gateway) ditanggung sendiri :D, saya disini hanya share dan tidak terikat kerja sama dengan pihak ketiga tersebut.</p></blockquote>

<p>Halah pernyataan ngawur :D</p>

<p>Berikut adalah cuplikan source code untuk membaca dan mengirim sms menggunakan komponen <a href="http://www.activexperts.com/xmstoolkit/">ActiveXpert SMS</a></p>

<p><strong>1. Membaca SMS Masuk</strong></p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdBacaSMS_Click()
    Dim objGsmIn        As ASmsCtrl.GsmIn</p>

<pre><code>Set objGsmIn = New ASmsCtrl.GsmIn
With objGsmIn
    .Activate "XXX-XXXX-XXXX-XXXXX"  'diisi serial number yg Anda dapatkan secara ilegal
    .Device = "COM1" 'disesuaikan dengan port COM yang digunakan
    .DeviceSpeed = 19200 'default = 0

    .Storage = 2 '0=sim 1=device 2=any
    .DeleteAfterReceive = True
    .Receive

    If .LastError = 0 Or .LastError = 23140 Then ' Success
        .GetFirstMessage

        While .LastError = 0
            Debug.Print "Pengirim : " &amp; .MessageSender
            Debug.Print "Isi SMS : " &amp; .MessageData

            'TODO : INSERT KE TABEL SMS_IN

            .GetNextMessage
        Wend
    End If
End With
Set objGsmIn = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p><strong>2. Mengirim sms</strong></p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdKirimSMS_Click()
    Dim objGsmOut       As ASmsCtrl.GsmOut
    Dim objConstants    As ASmsCtrl.Constants</p>

<pre><code>Set objGsmOut = New ASmsCtrl.GsmOut
Set objConstants = New ASmsCtrl.Constants

With objGsmOut
    .Activate "XXX-XXXX-XXXX-XXXXX"  'diisi serial number yg Anda dapatkan secara ilegal
    .Device = "COM1" 'disesuaikan dengan port COM yang digunakan
    .DeviceSpeed = 19200 'default = 0
    .RequestStatusReport = False

    .MessageType = objConstants.asMESSAGETYPE_TEXT 'mengirim pesan maksimal 160 karakter
    '.MessageType = objConstants.asMESSAGETYPE_TEXT_MULTIPART 'jika lebih dari 160 karakter gunakan opsi ini

    .MessageRecipient = "nomor tujuan" 'biasanya menggunakan prefix +62
    .MessageData = "isi pesan"
    .Send 'kirim
End With

Set objConstants = Nothing
Set objGsmOut = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>Jadi cukup dengan bermodalkan 2 cuplikan kode diatas kita akan menyelesaikan aplikasi yg dibahas pada artikel kali ini.</p>

<p>Adapun untuk keyword yang akan digunakan sebagai berikut :</p>

<p><strong>1. Request nilai tugas</strong></p>

<p>keyword : tgs#nis</p>

<p>contoh :
tgs#9941224165</p>

<p>balasan :
Nilai tugas (NAMA SISWA) : BI=95, IPA=75, IPS=80, MTK=85</p>

<p><strong>2. Request nilai ulangan harian</strong></p>

<p>keyword : uh#nis</p>

<p>contoh :
uh#9941224165</p>

<p>balasan :
Nilai ulangan (NAMA SISWA) : BI=95, IPA=75, IPS=80, MTK=85</p>

<p>Berikut penjelasan ringkas beberapa cuplikan source code yang digunakan dalam pembuatan aplikasi sms gateway ini.</p>

<p>{% codeblock lang:vbnet %}
Private Function connectToDevice(ByVal device As String) As Boolean
    Dim objGsm      As ASmsCtrl.GsmOut
    Dim manufaktur  As String</p>

<pre><code>On Error GoTo errHandle

Set objGsm = New ASmsCtrl.GsmOut
With objGsm
    .Activate SERIAL_NUMBER
    .device = device

    manufaktur = .SendCommand("AT+CGMI", 500)  'menampilkan informasi manufactur
    manufaktur = Replace$(manufaktur, vbCrLf, "")
    manufaktur = Replace$(manufaktur, "OK", "")
    manufaktur = Replace$(manufaktur, "ERROR", "")
    manufaktur = Replace$(manufaktur, "AT+CGMI", "")
End With
Set objGsm = Nothing

If Len(manufaktur) &gt; 0 Then
    txtModem.Text = manufaktur
    connectToDevice = True
End If

Exit Function
</code></pre>

<p>errHandle:
    connectToDevice = False
End Function
{% endcodeblock %}</p>

<p>Sesuai namanya fungsi connectToDevice digunakan untuk mengecek status modem sms yang terpasang, salah satu caranya adalah dengan mengirimkan <a href="http://www.developershome.com/sms/atCommandsIntro.asp">AT COMMAND</a> &ldquo;AT+CGM&rdquo;, <a href="http://www.developershome.com/sms/atCommandsIntro.asp">AT COMMAND</a> ini berfungsi untuk mendapatkan informasi manufaktur.</p>

<p>Sebagai contoh jika modem sms yg digunakan adalah hp siemens maka nilai yg dihasilkan dari perintah ini adalah &ldquo;SIEMENS&rdquo; dan tentunya hp yg bersangkutan juga harus mendukung AT COMMAND.</p>

<p>{% codeblock lang:vbnet %}
Private Sub readSMS()
    Dim objGsmIn        As ASmsCtrl.GsmIn
    Dim objConstants    As ASmsCtrl.Constants
    Dim cmd             As cCommand</p>

<pre><code>Dim keyword         As String
Dim phoneNumber     As String
Dim i               As Integer

On Error GoTo errHandle

Screen.MousePointer = vbHourglass
cmdStop.Enabled = False
tmrReceiveSms.Enabled = False

DoEvents

Set objGsmIn = New ASmsCtrl.GsmIn
Set objConstants = New ASmsCtrl.Constants

With objGsmIn
    .Activate SERIAL_NUMBER
    .device = cmbPORT.Text
    .DeviceSpeed = 0

    .Storage = cmbStorage.ItemData(cmbStorage.ListIndex)
    .DeleteAfterReceive = True 'hapus sms jika sudah dibaca
    .Receive

    If .LastError = 0 Or .LastError = 23140 Then 'baca sms sukses
        .GetFirstMessage

        strSql = "INSERT INTO sms_in (phone_number, sms_keyword, date_in, time_in) VALUES (?, ?, ?, ?)"
        Set cmd = conn.CreateCommand(strSql)
        conn.BeginTrans

        i = 1
        While .LastError = 0
            phoneNumber = rep0to62(.MessageSender)
            keyword = .MessageData

            cmd.SetText 1, phoneNumber
            cmd.SetText 2, keyword
            cmd.SetDate 3, Format(Now, "yyyy/MM/dd")
            cmd.SetTime 4, Format(Now, "hh:mm:ss")

            cmd.Execute

            If i Mod 10 = 0 Then
                conn.CommitTrans
                DoEvents

                conn.BeginTrans
            End If

            i = i + 1

            .GetNextMessage
        Wend

        conn.CommitTrans
        Set cmd = Nothing

    End If
End With
Set objGsmIn = Nothing

If cekSMSIn Then
    Call sendSMS
Else
    Call Wait(5000)
End If

cmdStop.Enabled = True
Screen.MousePointer = vbDefault

tmrReceiveSms.Enabled = True

Exit Sub
</code></pre>

<p>errHandle:
    tmrReceiveSms.Enabled = True
End Sub
{% endcodeblock %}</p>

<p>Prosedur readSMS digunakan untuk membaca sms masuk dan menyimpannya ke tabel sms_in, berhubung komponen ActiveXpert SMS tidak mempunyai event yg menandai adanya sms masuk maka sebagai gantinya kita menggunakan timer untuk memanggil prosedur readSMS.</p>

<p>Salah satu properties penting yang dimiliki oleh ActiveXpert SMS adalah DeleteAfterReceive, jika nilainya diset true maka sms yg masuk akan otomatis dihapus dan tentunya setelah smsnya dibaca.</p>

<p>{% codeblock lang:vbnet %}
Private Function cekSMSIn() As Boolean
    Dim ret As Integer</p>

<pre><code>strSql = "SELECT COUNT(*) FROM sms_in WHERE status = 0" 'jika status = 0 berarti sms masuk belum di proses
ret = CInt(dbGetValue(strSql, 0))
If ret &gt; 0 Then 'ada sms yg belum diproses
    cekSMSIn = True
End If
</code></pre>

<p>End Function
{% endcodeblock %}</p>

<p>Prosedur cekSMSIn dibutuhkan oleh prosedur readSMS, jadi dengan adanya prosedur cekSMSIn ini program akan mengetahui kapan waktu yg tepat untuk memanggil prosedur sendSMS.</p>

<p>{% codeblock lang:vbnet %}
Private Sub sendSMS()
    Dim rsSend          As cRecordset
    Dim cmd             As cCommand</p>

<pre><code>Dim objGsmOut       As ASmsCtrl.GsmOut
Dim objConstants    As ASmsCtrl.Constants

Dim phoneNumber     As String
Dim keyword         As String
Dim smsBalasan      As String

On Error GoTo errHandle

'cek sms yang belum di proses, ditandai dg status = 0
strSql = "SELECT id, phone_number, sms_keyword " &amp; _
         "FROM sms_in " &amp; _
         "WHERE status = 0 " &amp; _
         "ORDER BY id"
Set rsSend = conn.OpenRecordset(strSql)
If Not rsSend.EOF Then
    Set objGsmOut = New ASmsCtrl.GsmOut
    Set objConstants = New ASmsCtrl.Constants

    objGsmOut.Activate SERIAL_NUMBER
    objGsmOut.device = cmbPORT.Text
    objGsmOut.DeviceSpeed = 0
    objGsmOut.RequestStatusReport = False
    objGsmOut.MessageType = objConstants.asMESSAGETYPE_TEXT_MULTIPART

    Do While Not rsSend.EOF
        'ganti prefix nomor hp 0 -&gt; +62
        phoneNumber = rep0to62("" &amp; rsSend("phone_number").Value)
        keyword = rsSend("sms_keyword").Value

        smsBalasan = getBalasanSms(keyword, phoneNumber)

        objGsmOut.MessageRecipient = phoneNumber
        objGsmOut.MessageData = smsBalasan
        objGsmOut.Send

        If objGsmOut.LastError = 0 Or objGsmOut.LastError = 23140 Then 'sms sukses dikirim
            'update status sms -&gt; 1
            strSql = "UPDATE sms_in SET status = ?, no_ref = ? " &amp; _
                     "WHERE id = ?"
            Set cmd = conn.CreateCommand(strSql)
            With cmd
                .SetInt32 1, 1
                .SetInt32 2, objGsmOut.MessageReference
                .SetInt32 3, rsSend("id").Value

                .Execute
            End With
            Set cmd = Nothing

            'insert ke tabel sms_out, untuk histori sms keluar
            strSql = "INSERT INTO sms_out (phone_number, replay_msg, date_out, time_out) VALUES (?, ?, ?, ?)"
            Set cmd = conn.CreateCommand(strSql)
            With cmd
                .SetText 1, phoneNumber
                .SetText 2, smsBalasan
                .SetDate 3, Format(Now, "yyyy/MM/dd")
                .SetTime 4, Format(Now, "hh:mm:ss")

                .Execute
            End With
            Set cmd = Nothing

        Else 'sms gagal dikirim
            'update status sms -&gt; 1

            'ini masih bisa dikembangkan lagi dengan menambah kolom max_jumlah_kirim di tabel sms_in
            'jadi bisa diberi aturan sms yg gagal dikirim &gt; 3x baru status smsnya diupdate menjadi 1
            strSql = "UPDATE sms_in SET status = ?, no_ref = ? " &amp; _
                     "WHERE id = ?"
            Set cmd = conn.CreateCommand(strSql)
            With cmd
                .SetInt32 1, 1
                .SetInt32 2, objGsmOut.MessageReference
                .SetInt32 3, rsSend("id").Value

                .Execute
            End With
            Set cmd = Nothing
        End If

        Call Wait(5000)

        rsSend.MoveNext
    Loop
    Set objConstants = Nothing
    Set objGsmOut = Nothing
End If

Exit Sub
</code></pre>

<p>errHandle:
    Resume Next
End Sub
{% endcodeblock %}</p>

<p>Prosedur sendSMS akan mengolah sms masuk yg belum di proses (ditandai dengan status = 0), mengupdate statusnya menjadi 1 jika berhasil mengirimkan sms, kemudian menyimpannya ke tabel sms_out sebagai histori pengiriman sms.</p>

<p>{% codeblock lang:vbnet %}
Public Function rep0to62(ByVal phoneNumber As String) As String
    &lsquo;fungsi untuk mengganti prefix 0 -> +62</p>

<pre><code>rep0to62 = phoneNumber
If Left(phoneNumber, 1) = "0" Then rep0to62 = "+62" &amp; Right(phoneNumber, Len(phoneNumber) - 1)
</code></pre>

<p>End Function
{% endcodeblock %}</p>

<p>Sesuai namanya fungsi ini berguna untuk mengganti prefix nomor hp 0 menjadi +62 (kode indonesia).</p>

<p>Terakhir fungsi untuk memproses keyword sms yang masuk dan sekaligus sebagai balasan untuk sms keluar.</p>

<p>{% codeblock lang:vbnet %}
Public Function getBalasanSms(ByVal keywordSms As String, ByVal phoneNumber As String) As String
    Dim rs              As cRecordset
    Dim param1          As String
    Dim arrKeyword()    As String</p>

<pre><code>Dim prefix          As String
Dim nilai           As String
Dim nama            As String

Dim tha             As String
Dim semester        As String

If Len(keywordSms) &gt; 0 Then
    If InStr(1, keywordSms, "#") &gt; 0 Then 'karakter # -&gt; separator keyword
        arrKeyword = Split(keywordSms, "#")
        If Not (Len(arrKeyword(0)) &gt; 0) Then
            getBalasanSms = "Keyword sms salah"
            Exit Function

        Else
            'do nothing
        End If

    Else
        ReDim arrKeyword(0)
        arrKeyword(0) = keywordSms
    End If

Else
    getBalasanSms = "Keyword sms salah"
    Exit Function
End If

prefix = arrKeyword(0)
prefix = UCase$(prefix)

If UBound(arrKeyword) &gt; 0 Then param1 = arrKeyword(1) 'untuk contoh disini param1 bernilai nomor induk siswa

'untuk pengembangan lebih lanjut tahun ajaran dan semester dibuat settingan tersendiri
tha = "2009/2010"
semester = 2

Select Case prefix
    Case "TGS"
        'validasi nis siswa
        If Not isValidNIS(param1) Then getBalasanSms = Replace(NIS_SALAH, "&lt;nis&gt;", param1): Exit Function

        'validasi no hp siswa
        'nama sekolah sebaiknya disimpan didalam variabel
        If Not isValidHPSiswa(param1, phoneNumber) Then
            getBalasanSms = Replace(HP_UNREG, "&lt;nama_sekolah&gt;", "SMA Negeri Yogyakarta")
            getBalasanSms = Replace(getBalasanSms, "&lt;no_hp&gt;", phoneNumber): Exit Function
        End If

        strSql = "SELECT UPPER(nama) FROM siswa WHERE nis = '" &amp; param1 &amp; "'"
        nama = CStr(dbGetValue(strSql, ""))

        'mulai proses pencarian nilai
        strSql = "SELECT matapelajaran_kode, nilai " &amp; _
                 "FROM nilai_tugas " &amp; _
                 "WHERE siswa_nis = '" &amp; param1 &amp; "' AND tahun_ajaran = '" &amp; tha &amp; "' AND semester = " &amp; semester &amp; " " &amp; _
                 "ORDER BY matapelajaran_kode"
        Set rs = conn.OpenRecordset(strSql)
        If Not rs.EOF Then
            Do While Not rs.EOF
                nilai = nilai &amp; rs("matapelajaran_kode").Value &amp; "=" &amp; rs("nilai").Value &amp; ", "
                rs.MoveNext
            Loop
        End If

        If Len(nilai) &gt; 0 Then
            nilai = Left(nilai, Len(nilai) - 2)
            getBalasanSms = "Nilai tugas (" &amp; nama &amp; ") : " &amp; nilai

        Else
            getBalasanSms = "Nilai tugas (" &amp; nama &amp; ") sedang dalam proses pendataan"
        End If

    Case "UH"
        'validasi nis siswa
        If Not isValidNIS(param1) Then getBalasanSms = Replace(NIS_SALAH, "&lt;nis&gt;", param1): Exit Function

        'validasi no hp siswa
        'nama sekolah sebaiknya disimpan didalam variabel
        If Not isValidHPSiswa(param1, phoneNumber) Then
            getBalasanSms = Replace(HP_UNREG, "&lt;nama_sekolah&gt;", "SMA Negeri Yogyakarta")
            getBalasanSms = Replace(getBalasanSms, "&lt;no_hp&gt;", phoneNumber): Exit Function
        End If

        strSql = "SELECT UPPER(nama) FROM siswa WHERE nis = '" &amp; param1 &amp; "'"
        nama = CStr(dbGetValue(strSql, ""))

        'mulai proses pencarian nilai
        strSql = "SELECT matapelajaran_kode, nilai " &amp; _
                 "FROM nilai_ulangan " &amp; _
                 "WHERE siswa_nis = '" &amp; param1 &amp; "' AND tahun_ajaran = '" &amp; tha &amp; "' AND semester = " &amp; semester &amp; " " &amp; _
                 "ORDER BY matapelajaran_kode"
        Set rs = conn.OpenRecordset(strSql)
        If Not rs.EOF Then
            Do While Not rs.EOF
                nilai = nilai &amp; rs("matapelajaran_kode").Value &amp; "=" &amp; rs("nilai").Value &amp; ", "
                rs.MoveNext
            Loop
        End If

        If Len(nilai) &gt; 0 Then
            nilai = Left(nilai, Len(nilai) - 2)
            getBalasanSms = "Nilai ulangan (" &amp; nama &amp; ") : " &amp; nilai

        Else
            getBalasanSms = "Nilai ulangan (" &amp; nama &amp; ") sedang dalam proses pendataan"
        End If

    Case Else
        getBalasanSms = "Keyword sms salah"
End Select
</code></pre>

<p>End Function
{% endcodeblock %}</p>

<p><a href="http://coding4ever.files.wordpress.com/2010/07/12072010-2.jpg"><img src="http://coding4ever.files.wordpress.com/2010/07/12072010-2.jpg?w=300" alt="" /></a></p>

<p>Untuk mengetahui daftar hp/modem apa saja yang didukung, jangan sungkan dan malu-malu untuk mengklik link <a href="http://www.activexperts.com/xmstoolkit/gsmlist/">ini</a>.</p>

<p>Selamat <a href="https://github.com/k4m4r82/SMSGateway">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mengakses Database SQLite Menggunakan Library dhSQLite]]></title>
    <link href="http://coding4ever.net/blog/2010/07/05/mengakses-database-sqlite-menggunakan-library-dhsqlite/"/>
    <updated>2010-07-05T08:40:04+07:00</updated>
    <id>http://coding4ever.net/blog/2010/07/05/mengakses-database-sqlite-menggunakan-library-dhsqlite</id>
    <content type="html"><![CDATA[<p>Ada yang kurang di artikel <a href="{{%20site.url%20}}/blog/2010/06/14/mengenal-lebih-dekat-database-sqlite/">sebelumnya</a>, yaitu saya belum membahas bagaimana mengakses database SQLite dalam pembuatan aplikasi database.</p>

<p>Secara umum aksi yang sering dilakukan dalam pembuatan aplikasi database hanya seputar pernyataan DML (Insert, Update, Delete dan Select), jadi untuk menyederhanakan pembahasan saya pun membatasi artikel kali ini hanya seputar permasalahan tersebut.</p>

<p>Sebenarnya cukup dengan library ADO pun kita sudah bisa mengakses database SQLite, tetapi pada artikel kali ini saya menggunakan library <a href="http://www.thecommon.net/2.html">dhSQLite</a>.</p>

<p>Untuk mengakses database SQLite menggunakan <a href="http://www.thecommon.net/2.html">dhSQLite</a> kita cukup menggunakan 3 kelas yaitu :</p>

<ol>
<li><p> cConnection, sesuai namanya kelas ini digunakan untuk membuat koneksi ke database</p></li>
<li><p> cRecordset, digunakan untuk menampung pernyataan select</p></li>
<li><p> cCommand, digunakan untuk mengeksekusi pernyataan insert, update dan delete</p></li>
</ol>


<!-- more -->


<p>sedangkan untuk sample database bisa langsung Anda download di<a href="http://www.4shared.com/file/dlRPWLUx/dbpos.html">sini</a>.</p>

<p><strong>1. Membuat koneksi</strong></p>

<p>Tambahkan sebuah modul, kemudian ketik kode berikut :</p>

<p>{% codeblock lang:vbnet %}
Public Function openDb() As Boolean
    On Error GoTo errHandle</p>

<pre><code>Set conn = New cConnection
conn.openDb "C:\dbpos\dbpos.db3"
openDb = True

Exit Function
</code></pre>

<p>errHandle:
    openDb = False
End Function
{% endcodeblock %}</p>

<p>dengan asumsi database dbpos.db3 sudah ada di folder C:\dbpos.</p>

<p>Untuk mencoba fungsi <strong>openDb</strong> diatas, kita akan memanfaat prosedur Main berikut :</p>

<p>{% codeblock lang:vbnet %}
Public Sub Main()
    Dim ret As Boolean</p>

<pre><code>ret = openDb
If ret Then
    'TODO : tampilkan form utama
Else
    MsgBox "Koneksi gagal", vbExclamation, "Peringatan"
End If
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>Tentunya agar prosedur Main tersebut bisa dijalankan, kita harus merubah Startup Object menjadi Sub Main.</p>

<p><a href="http://coding4ever.files.wordpress.com/2010/07/05072010-2.jpg"><img src="http://coding4ever.files.wordpress.com/2010/07/05072010-2.jpg?w=300" alt="" /></a></p>

<p><strong>2. Menambahkan data</strong></p>

<p>Menambahkan data menggunakan objek cCommand sangat mudah sekali, lihat kode berikut :</p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdSimpan_Click()
    Dim cmd As cCommand</p>

<pre><code>strSql = "INSERT INTO barang (kode_barang, nama_barang, stok, harga_beli, harga_jual) VALUES (?, ?, ?, ?, ?)"
Set cmd = conn.CreateCommand(strSql)
With cmd
    .SetText 1, txtKodeBarang.Text
    .SetText 2, txtNamaBarang.Text
    .SetDouble 3, Val(txtStok.Text)
    .SetDouble 4, Val(txtHargaBeli.Text)
    .SetDouble 5, Val(txtHargaJual.Text)
    .Execute
End With
Set cmd = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>Mirip sekali bukan menambahkan data menggunakan interface <a href="http://www.herongyang.com/jdbc/Derby-PreparedStatement-Insert-Performance.html">PreparedStatement</a> di java :D</p>

<p>Angka 1,2 .. 5 merupakan urutkan field pada pernyataan dml, sedangkan method yang dipanggil setelah berhasil menciptakan objek cCommand sesuai dengan tipe data field.</p>

<p>Contoh kode barang bertipe varchar, maka method yang dipanggil adalah <strong>SetText</strong>, sedangkan stok, harga beli dan harga jual bertipe numeric makanya method <strong>SetDouble</strong> yang dipanggil dan jika bertipe integer tinggal panggil aja method <strong>SetInt32</strong> dan begitu seterusnya.</p>

<p>Oke kita lihat lagi pada pernyataan berikutnya.</p>

<p><strong>3. Mengedit data</strong></p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdEdit_Click()
    Dim cmd As cCommand</p>

<pre><code>strSql = "UPDATE barang SET nama_barang = ?, stok = ?, harga_beli = ?, harga_jual = ? " &amp; _
         "WHERE kode_barang = ?"
Set cmd = conn.CreateCommand(strSql)
With cmd
    .SetText 1, txtNamaBarang.Text
    .SetDouble 2, Val(txtStok.Text)
    .SetDouble 3, Val(txtHargaBeli.Text)
    .SetDouble 4, Val(txtHargaJual.Text)
    .SetText 5, txtKodeBarang.Text
    .Execute
End With
Set cmd = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p><strong>4. Menghapus data</strong></p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdHapus_Click()
    Dim cmd As cCommand</p>

<pre><code>strSql = "DELETE FROM barang WHERE kode_barang = ?"
Set cmd = conn.CreateCommand(strSql)
With cmd
    .SetText 1, txtKodeBarang.Text
    .Execute
End With
Set cmd = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p><strong>5. Menampilkan data</strong></p>

<p>Untuk menampilkan data kita menggunakan pernyataan SELECT, dan ingat pernyataan SELECT mengembalikan data dalam bentuk recordset, sehingga kita harus membuat objek dengan tipe cRecordset.</p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdTampilkan_Click()
    Dim rs  As cRecordset</p>

<pre><code>strSql = "SELECT kode_barang, nama_barang, stok, harga_beli, harga_jual " &amp; _
         "FROM barang " &amp; _
         "ORDER BY nama_barang"
Set rs = conn.OpenRecordset(strSql, True)
If Not rs.EOF Then
    Do While Not rs.EOF
        Debug.Print rs("kode_barang").Value &amp; ", " &amp; rs("nama_barang").Value
        rs.MoveNext
    Loop
End If
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p><strong>6. Insert, Update dan Delete dalam jumlah banyak</strong></p>

<p>Hati-hati jangan langsung mengunakan kode seperti berikut :</p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdTest1_Click()
    Dim cmd As cCommand
    Dim i   As Integer</p>

<pre><code>strSql = "INSERT INTO tabel_test (no_urut) VALUES (?)"

Set cmd = conn.CreateCommand(strSql)
For i = 1 To 1000
    cmd.SetInt32 1, i
    cmd.Execute
Next i
Set cmd = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>hasil uji coba di laptop saya membutuhkan waktu sekitar 1 menitan, tetapi bandingkan jika menggunakan <strong>transaction</strong></p>

<p>{% codeblock lang:vbnet %}
Private Sub cmdTest2_Click()
    Dim cmd As cCommand
    Dim i   As Integer</p>

<pre><code>strSql = "INSERT INTO tabel_test (no_urut) VALUES (?)"

Set cmd = conn.CreateCommand(strSql)
conn.BeginTrans
For i = 1 To 1000
    cmd.SetInt32 1, i
    cmd.Execute

    If i Mod 200 = 0 Then
        conn.CommitTrans
        DoEvents

        conn.BeginTrans
    End If
Next i
conn.CommitTrans
Set cmd = Nothing
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>hanya membutuhkan waktu 1 detik, wowww lumayan bedakan.</p>

<p>Oke terakhir untuk mencoba semua kode diatas, library <a href="http://www.thecommon.net/2.html">dhSQLite</a> harus sudah direferensikan di project kita.</p>

<p><a href="http://coding4ever.files.wordpress.com/2010/07/05072010.jpg"><img src="http://coding4ever.files.wordpress.com/2010/07/05072010.jpg?w=300" alt="" /></a></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mengenal Lebih Dekat database SQLite]]></title>
    <link href="http://coding4ever.net/blog/2010/06/14/mengenal-lebih-dekat-database-sqlite/"/>
    <updated>2010-06-14T07:01:34+07:00</updated>
    <id>http://coding4ever.net/blog/2010/06/14/mengenal-lebih-dekat-database-sqlite</id>
    <content type="html"><![CDATA[<p>Biasanya nih bagi kita yang udah sering nyemplung di dunia pemrograman bahkan sampe kelelep :grin: pasti udah kenal yang namanya Ms Access dari Microsoft atau Paradox dari Borland.</p>

<p>Itu adalah beberapa contoh database standalone yang sudah sering kita gunakan, nah sekarang saya mengajak Anda untuk mengenal lebih dekat database standalone lainnya yaitu <a href="http://www.sqlite.org">SQLite</a>.</p>

<p>Dan tahukah Anda bahwa firefox juga menggunakan <a href="http://www.sqlite.org">SQLite</a> untuk mengelola data bookmarks dan historynya.</p>

<p>Jadi klo mau tau, apa saja fitur dari <a href="http://www.sqlite.org">SQLite</a> jangan malu-malu untuk segera mengklik link <a href="http://www.sqlite.org/features.html">INI</a>.</p>

<p>Pada artikel kali ini kita akan mencoba membuat database dan beberapa tabel di SQLite sesuai rancangan berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2010/01/06012010-6.jpg"><img src="http://coding4ever.files.wordpress.com/2010/01/06012010-6.jpg?w=300" alt="" /></a></p>

<!-- more -->


<p><strong>Persiapan tool</strong></p>

<ol>
<li><p>Agar pembuatan database dan tabelnya lebih mudah dan menyenangkan, download dulu <a href="http://www.sqliteexpert.com">SQLite Managernya</a> di <a href="http://www.sqliteexpert.com/SQLiteExpertPersSetup.exe">sini</a>.</p></li>
<li><p>Klo udah, install dan jalankan SQLite Managernya.</p></li>
</ol>


<p><strong>Membuat database dan tabel</strong></p>

<ol>
<li>Klik menu File -> New Database</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-1.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-1.jpg" alt="" /></a></p>

<ol>
<li>Isikan lokasi penyimpan database dan alias pada kotak dialog Database Creation Properties</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-2.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-2.jpg?w=300" alt="" /></a></p>

<ol>
<li>Jika berhasil akan tampil nama database di node sebelah kiri, kemudian untuk membuat tabel baru klik menu Table -> New Table</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-3.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-3.jpg" alt="" /></a></p>

<ol>
<li>Selanjutnya isikan informasi nama tabel, field berikut tipe datanya.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-4.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-4.jpg?w=300" alt="" /></a></p>

<ol>
<li>Jika semua field yang dibutuhkan sudah lengkap, klik tombol Apply</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-5.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-5.jpg?w=300" alt="" /></a></p>

<ol>
<li>Jika berhasil nama tabel akan muncul di node sebelah kiri.</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-6.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-6.jpg?w=300" alt="" /></a></p>

<p><strong>Membuat tabel dengan field auto number</strong></p>

<p>Ada yang beda dengan SQLite dalam pembuatan field auto number, dimana SQLite mensyaratkan field auto numbernya harus bertipe <strong>INTEGER</strong>.</p>

<p>Oke kita akan ambil contoh pembuatan tabel ITEM_BELI, dimana tabel ini mempunyai field ID yang berfungsi untuk mencatat record transaksi pembelian.</p>

<ol>
<li>Buat tabel sama seperti langkah-langkah sebelumnya</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-7.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-7.jpg?w=300" alt="" /></a></p>

<ol>
<li>Jika field sudah ditambahkan (ex. field ID), klik tab Indexes kemudian klik tombol Add</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-8.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-8.jpg?w=300" alt="" /></a></p>

<ol>
<li>Pada dialog New Index atur setingan field sesuai gambar</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-9.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-9.jpg?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-10.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-10.jpg?w=300" alt="" /></a></p>

<ol>
<li>Balik ke dialog Desing tabel kemudian klik tombol Apply</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-11.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-11.jpg?w=300" alt="" /></a></p>

<p><strong>Membuat foreign key</strong></p>

<ol>
<li>Aktifkan tabel, klik tab Foreign Keys kemudian klik tombol Add</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-12.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-12.jpg?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-13.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-13.jpg?w=300" alt="" /></a></p>

<ol>
<li>Kembali ke dialog Design tabel kemudian klik tombol Apply</li>
</ol>


<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-141.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-141.jpg?w=300" alt="" /></a></p>

<p>Untuk pembuatan tabel lainnya tinggal ulangi langkah-langkah sebelumnya. Contoh hasil akhir pembuatan tabel :</p>

<p><a href="http://coding4ever.files.wordpress.com/2010/06/14062010-15.jpg"><img src="http://coding4ever.files.wordpress.com/2010/06/14062010-15.jpg?w=300" alt="" /></a></p>

<p><strong>Membuat Trigger</strong></p>

<p>Yang benar aja SQLite mendukung trigger ? Iya klo enggak percaya main-main aja ke <a href="http://www.sqlite.org/lang_createtrigger.html">sini</a>.</p>

<p>Sample database lengkap bisa di download di <a href="http://www.4shared.com/file/dlRPWLUx/dbpos.html">sini</a>.</p>

<p><strong>>> Update &lt;&lt;</strong></p>

<p>Ikuti juga artikel bagaimana cara mengakses database SQLite dari Visual Basic 6 di <a href="{{%20site.url%20}}/blog/2010/07/05/mengakses-database-sqlite-menggunakan-library-dhsqlite/">sini</a>.</p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
</feed>
