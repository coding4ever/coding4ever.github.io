<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Consul | Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/blog/categories/consul/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2019-08-31T09:38:09+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Menyimpan Konfigurasi Aplikasi Secara Terpusat Menggunakan Consul Key-Value Store Bagian #2]]></title>
    <link href="http://coding4ever.net/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2/"/>
    <updated>2019-08-31T09:26:47+07:00</updated>
    <id>http://coding4ever.net/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2019/08/consul-logo.jpg">https://coding4ever.files.wordpress.com/2019/08/consul-logo.jpg</a>&#8221; width=&#8221;85&#8221; height=&#8221;93&#8221;>Oke, hari ini saya ingin melanjutkan pembahasan <a href="/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/">postingan</a> saya sebelumnya tentang penyimpanan konfigurasi aplikasi secara terpusat menggunakan <a href="https://www.consul.io/">consul</a>. Jika pada <a href="/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/">postingan</a> sebelumnya fokus pembahasan pada instalasi kemudian dilanjutkan dengan demo cara mengakses data yang tersimpan pada <code>key-value store</code> menggunakan salah satu tool REST Client favorit saya yaitu <a href="https://www.getpostman.com/downloads/">Postman</a>, maka fokus pembahasan kali ini adalah bagaimana cara mengakses data <code>key-value store</code> menggunakan bahasa pemrograman Visual Basic 6 dan C# (.NET).</p>

<!-- more -->


<h3>Mengakses Data Key-Value Store</h3>

<p>Sebagai review untuk data yang tersimpan di <code>key-value store</code> bisa diakses via RESTful API (Web API) menggunakan <code>HTTP METHOD GET</code>. Adapun endpoint yang digunakan yaitu <code>/v1/kv/NAMA_KEY</code>. Contoh</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-01.png">https://coding4ever.files.wordpress.com/2019/08/20190829-01.png</a>&#8221;></p>

<p>Informasi <code>endpoint</code> dan <code>HTTP METHOD</code> ini penting untuk dicatat karena berhubungan dengan kode program yang akan kita tulis di pembahasan berikutnya.</p>

<h3>Mengakses Data Key-Value Store Dari Visual Basic 6</h3>

<p>Sebagai contoh kasus kita akan membuat form login, di mana form login ini selain membutuhkan <code>user</code> dan <code>password</code> juga membutuhkan informasi <code>server</code>, <code>database</code> dan <code>port</code>. Khusus untuk informasi <code>server</code>, <code>database</code> dan <code>port</code> secara otomatis akan membaca data yang tersimpan di dalam <code>Key-Value Store</code>.</p>

<p>Untuk tampilannya kita buat yang sederhana aja ya :-D</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-02.png">https://coding4ever.files.wordpress.com/2019/08/20190829-02.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-03.png">https://coding4ever.files.wordpress.com/2019/08/20190829-03.png</a>&#8221;></p>

<p>Karena data yang diakses berupa RESTful API (dokumen web), di Visual Basic 6 kita menggunakan library <code>Microsoft XML v6.0</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-04.png">https://coding4ever.files.wordpress.com/2019/08/20190829-04.png</a>&#8221;></p>

<p>Setelah itu kita buat sebuah method dengan nama <code>GetRequest</code> untuk mengakses RESTful API dengan menggunakan library <code>Microsoft XML v6.0</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-05.png">https://coding4ever.files.wordpress.com/2019/08/20190829-05.png</a>&#8221;></p>

<p>Kemudian tambahkan lagi sebuah method dengan nama <code>LoadAppConfig</code>, di dalam method ini kita memanggil method <code>GetRequest</code> dan menampilkan hasilnya ke console. Agar method ini bisa dipangil secara otomatis, kita panggil method ini di event form load.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-06.png">https://coding4ever.files.wordpress.com/2019/08/20190829-06.png</a>&#8221;></p>

<p>Jika berhasil, hasilnya seperti berikut:</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-07.png">https://coding4ever.files.wordpress.com/2019/08/20190829-07.png</a>&#8221;></p>

<p>Nah dari gambar di atas, kita lihat bahwa hasil pemanggilan endpoint <code>Key-Value Store</code> ini mengembalikan data string dengan format <a href="https://www.json.org/">JSON</a>. Secara built-in VB6 tidak menyediakan library untuk mengolah data dengan format <a href="https://www.json.org/">JSON</a>, tapi untungnya di luar sana sudah ada yang berbaik hati membuatkan <a href="http://www.ediy.co.nz/vbjson-json-parser-library-in-vb6-xidc55680.html">librarynya</a>, sehingga mempermudah kita untuk mengolah data dengan format <a href="https://www.json.org/">JSON</a> menggunakan Visual Basic 6.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-08.png">https://coding4ever.files.wordpress.com/2019/08/20190829-08.png</a>&#8221;></p>

<p>Setelah menambahkan library <a href="http://www.ediy.co.nz/vbjson-json-parser-library-in-vb6-xidc55680.html">VB-JSON</a> sekarang kita bisa langsung mengolah data <a href="https://www.json.org/">JSON</a>nya sebagai sebuah objek dan kemudian langsung menampilkan hasilnya ke dalam textbox <code>server</code>, <code>database</code> dan <code>port</code>. Berikut adalah hasil revisinya method <code>LoadAppConfig</code>nya:</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-09.png">https://coding4ever.files.wordpress.com/2019/08/20190829-09.png</a>&#8221;></p>

<p>Ok sampai di sini, kita bisa langsung menjalankan aplikasi untuk melihat hasilnya. Setelah form loginnya tampil aktifkan tab Connection, di mana informasi server, database dan port sudah otomatis terisi sesuai dengan informasi <code>Key-Value Store</code> yang tersimpan di server consul.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-10.png">https://coding4ever.files.wordpress.com/2019/08/20190829-10.png</a>&#8221;></p>

<p>Sudah tampil bukan?</p>

<p>Sekarang kita coba edit informasi db-confignya, melalui menu <code>Key/Value</code>, kemudian jalankan sekali lagi aplikasinya.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-11.png">https://coding4ever.files.wordpress.com/2019/08/20190829-11.png</a>&#8221;></p>

<p>Nah secara otomatis perubahan data yang tersimpan di <code>Key-Value Store</code> juga akan terbaca oleh aplikasi.</p>

<h3>Mengakses Data Key-Value Store Dari C# (.NET)</h3>

<p>Untuk contoh berikutnya kita akan mengakses data <code>Key-Value Store</code> menggunakan bahasa pemrograman C# (.NET). Di C# saya biasanya menggunakan library <a href="https://www.nuget.org/packages/RestSharp/">RestSharp</a> untuk mengakses web api, selain itu kita juga membutuhkan library <a href="https://www.nuget.org/packages/Newtonsoft.Json">Newtonsoft.Json</a>, kenapa? Karena hasil dari pemanggilan web apinya berupa string dengan format json. Jadi kita membutuhkan library ini untuk mengkonversi string json ke objek class. Untuk menginstall kedua library ini Anda bisa menggunakan  <a href="/blog/categories/nuget/">Nuget Package Manager Console</a> dengan perintah berikut:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Install-Package RestSharp -Version 105.2.3
</span><span class='line'>Install-Package Newtonsoft.Json -v 9.0.1
</span></code></pre></td></tr></table></div></figure></p>

<p>Setelah menginstall ke dua library di atas, langkah berikutnya adalah kita akan menambahkan class model terlebih dulu. Class model ini saya beri nama <code>AppConfig</code> agar nanti hasil dari pemanggilan webnya bisa langsung kita konversi ke objek class model ini dengan bantuan library <a href="https://www.nuget.org/packages/Newtonsoft.Json">Newtonsoft.Json</a>. Berikut contoh class model yang dibuat.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-15.png">https://coding4ever.files.wordpress.com/2019/08/20190829-15.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-12.png">https://coding4ever.files.wordpress.com/2019/08/20190829-12.png</a>&#8221;></p>

<p>Pada gambar di atas, kita bisa lihat untuk struktur class modelnya dibuat menyesuaikan struktur json yang ada di <code>Key-Value Store</code>.</p>

<p>Setelah itu tambahkan kode berikut untuk pemanggilan web apinya.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-13.png">https://coding4ever.files.wordpress.com/2019/08/20190829-13.png</a>&#8221;></p>

<p>Kemudian kita bisa langsung menjalankan aplikasi untuk melihat hasilnya. Setelah form loginnya tampil aktifkan tab Connection, di mana informasi server, database dan port sudah otomatis terisi sesuai dengan informasi <code>Key-Value Store</code> yang tersimpan di server consul.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190829-14.png">https://coding4ever.files.wordpress.com/2019/08/20190829-14.png</a>&#8221;></p>

<h3>Kesimpulan</h3>

<p>Dengan menggunakan <a href="https://www.consul.io/">consul</a> sebagai pusat penyimpanan konfigurasi aplikasi, akan mempermudah kita ketika terjadi perubahan konfigurasi aplikasi yang selama ini biasanya disimpan secara lokalan. Jadi kita tidak perlu merubah konfigurasi lokal aplikasi satu per satu di pc/lapton klien.</p>

<p>Selamat mencoba :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Menyimpan Konfigurasi Aplikasi Secara Terpusat Menggunakan Consul Key-Value Store Bagian #1]]></title>
    <link href="http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/"/>
    <updated>2019-08-02T15:13:39+07:00</updated>
    <id>http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2019/08/consul-logo.jpg">https://coding4ever.files.wordpress.com/2019/08/consul-logo.jpg</a>&#8221; width=&#8221;85&#8221; height=&#8221;93&#8221;>Cara apa yang biasa Anda gunakan untuk menyimpan konfigurasi aplikasi? Biasanya ada beberapa pilihan seperti menyimpan dalam format text (<a href="https://en.wikipedia.org/wiki/INI_file">INI</a>, <a href="https://en.wikipedia.org/wiki/XML">XML</a>, <a href="https://www.json.org/">JSON</a>), database atau langsung di hardcode di dalam kode program. Nah cara terakhir adalah yang paling ekstrim, jika terjadi perubahan konfigurasi berarti kita harus merubah kode program dan melakukan kompilasi ulang :-D.</p>

<!-- more -->


<p>Konfigurasi lokalan ini memang sedikit merepotkan bagai programmer desktop, karana aplikasinya biasanya diinstall dibeberapa tempat sesuai dengan jumlah klien yang ada.</p>

<p>Konfigurasi apa saja sih yang biasanya diperlukan oleh sebuah aplikasi? Ini juga tergantung kebutuhan, biasanya yang paling umum itu ya konfigurasi yang berhubungan dengan database seperti, <em>ip server</em>, <em>nama database</em> dan <em>port</em> yang digunakan. Contoh:</p>

<p><div><script src='https://gist.github.com/acd0b3a14f3830fff0c603909ef4a097.js'></script>
<noscript><pre><code>[database]
server=192.168.1.1
database=DbOpenRetail
port=5432</code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/817ed3721c9d6a62e2a17b1e58f51129.js'></script>
<noscript><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;configuration&gt;
  
  &lt;appSettings&gt;
    &lt;add key=&quot;server&quot; value=&quot;192.168.1.1&quot; /&gt;
    &lt;add key=&quot;database&quot; value=&quot;DbOpenRetail&quot; /&gt;
    &lt;add key=&quot;port&quot; value=&quot;5432&quot; /&gt;    
  &lt;/appSettings&gt;
  
&lt;/configuration&gt;</code></pre></noscript></div>
</p>

<p><div><script src='https://gist.github.com/872fa7d5e9775078e13c922c9e301cf4.js'></script>
<noscript><pre><code>{
  &quot;server&quot;: &quot;192.168.1.1&quot;,
  &quot;database&quot;: &quot;DbOpenRetail&quot;,
  &quot;port&quot;: 5432
}</code></pre></noscript></div>
</p>

<p>Pada contoh di atas konfigurasi aplikasi disimpan dengan berbagai format seperti <a href="https://en.wikipedia.org/wiki/INI_file">INI</a>, <a href="https://en.wikipedia.org/wiki/XML">XML</a> dan <a href="https://www.json.org/">JSON</a>.</p>

<p>Untuk aplikasi yang dibuat menggunakan VB6 biasanya akan menyimpan konfigurasi dengan format <a href="https://en.wikipedia.org/wiki/INI_file">INI</a>, sedangkan yang menggunakan .NET lebih senang menggunakan format <a href="https://en.wikipedia.org/wiki/XML">XML</a> atau <a href="https://www.json.org/">JSON</a>.</p>

<p>Jadi apapun pilihan format konfigurasi aplikasi yang Anda gunakan, ketika ada perubahan konfigurasi berarti kita harus merubah satu per satu konfigurasi lokal dari aplikasi kita yang sudah terinstall di pc/laptop klien, baik dilakukan secara langsung (datang ke lokasi) atau dengan bantuan tool remote seperti Radmin.  Anda bayangkan saja klo pengguna aplikasi kita sudah ratusan bahkan ribuan, tentu akan menjadi pekerjaan yang merepotkan alias buang-buang waktu :-D</p>

<h3>Apa itu Consul?</h3>

<p><a href="https://www.consul.io/">Consul</a> adalah tool yang digunakan untuk keperluan discovery dan konfigurasi service. Tool ini mempunyai beberapa fitur utama yaitu:</p>

<ul>
<li>Service Discovery</li>
<li>Health Checking</li>
<li>Key/Value Store</li>
<li>Multi Datacenter</li>
</ul>


<p>Saya sendiri mencoba tool ini ketika mempelajari arsitektur <a href="https://microservices.io/">microservices</a> untuk keperluan monitoring service. Nah salah satu fitur tool ini yaitu <code>Key/Value Store</code> yang bisa kita gunakan untuk keperluan menyimpan konfigurasi terpusat.</p>

<h3>Cara Menginstall Consul</h3>

<p>Cara installnya gampang, Anda tinggal <a href="https://www.consul.io/downloads.html">download</a> consul sesuai dengan versi OS yang Anda gunakan.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-01.png">https://coding4ever.files.wordpress.com/2019/08/20190802-01.png</a>&#8221;></p>

<p>Contoh di sini saya mendownload consul versi Windows dan menyimpannya di folder c:\consul.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-02.png">https://coding4ever.files.wordpress.com/2019/08/20190802-02.png</a>&#8221;></p>

<p>Setelah itu kita bisa langsung menjalankan consul dengan mode development.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-03.png">https://coding4ever.files.wordpress.com/2019/08/20190802-03.png</a>&#8221;></p>

<p>Setelah jalan, kita bisa langsung mengakses web administrasi consul di alamat localhost:8500</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-04.png">https://coding4ever.files.wordpress.com/2019/08/20190802-04.png</a>&#8221;></p>

<p>Menjalankan consul dengan mode development ini ada sedikit kekurangan yaitu perubahan data yang kita lakukan misal menambahkan data di menu <code>Key/Value</code> itu tidak tersimpan secara permanen, jadi kita akan menjalankan consul agent dengan mode production. Caranya adalah dengan menambahkan file konfigurasi, misal kita simpan di folder c:\consul\config dengan nama <code>consul.json</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-05.png">https://coding4ever.files.wordpress.com/2019/08/20190802-05.png</a>&#8221;></p>

<p>Kemudian untuk isinya seperti gambar berikut:</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-06-1.png">https://coding4ever.files.wordpress.com/2019/08/20190802-06-1.png</a>&#8221;></p>

<p>Untuk element <code>bind_addr</code> diisi dengan ip pc/server dimana consul dijalankan. Dan untuk informasi lebih lanjut tentang bagaimana cara mengkonfigurasi consul, bisa anda cek di link <a href="https://www.consul.io/docs/agent/options.html">ini</a>.</p>

<p>Setelah itu kita jalankan kembali consul dengan mode production.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-07.png">https://coding4ever.files.wordpress.com/2019/08/20190802-07.png</a>&#8221;></p>

<h3>Consul Key-Value Store</h3>

<p>Seperti yang sudah saya jelaskan di atas, salah satu fitur menarik yang dimiliki oleh consul yaitu <code>Key-Value Store</code>. Dengan fitur ini kita bisa menyimpan konfigurasi aplikasi secara terpusat di pc/server yang sudah terinstall consul. Jadi konfigurasi aplikasi kita yang awalnya tersimpan di lokalan, apakah itu menggunakan format <a href="https://en.wikipedia.org/wiki/INI_file">INI</a>, <a href="https://en.wikipedia.org/wiki/XML">XML</a> atau <a href="https://www.json.org/">JSON</a> bisa langsung kita pindah ke sini.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-08.png">https://coding4ever.files.wordpress.com/2019/08/20190802-08.png</a>&#8221;></p>

<h3>Mengakses Data Key-Value Store</h3>

<p>Data yang tersimpan di <code>Key-Value Store</code> bisa diakses via RESTful API, untuk postingan <a href="/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/">pertama</a> ini kita akan menggunakan salah satu tool  REST Client yaitu <a href="https://www.getpostman.com/downloads/">Postman</a> untuk mengakses data tersebut. Adapun endpoint yang digunakan yaitu <code>/v1/kv</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-09.png">https://coding4ever.files.wordpress.com/2019/08/20190802-09.png</a>&#8221;></p>

<p>Untuk response valuenya sudah diencoded menggunakan algoritma Base64, tapi jika ingin langsung menampilkan data aslinya kita tinggal tambahkan parameter <code>?raw=true</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-10.png">https://coding4ever.files.wordpress.com/2019/08/20190802-10.png</a>&#8221;></p>

<h3>Menambahkan token</h3>

<p>Kayaknya kurang aman klo semua orang bisa langsung mengakses endpoint <code>Key-Value Store</code> tersebut tanpa memasukan token terlebih dulu. Jadi kita bisa menambahkan token pada saat mengakses endpoint <code>Key-Value Store</code>. Caranya adalah dengan mengedit kembali file konfigurasi consulnya.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-11-1.png">https://coding4ever.files.wordpress.com/2019/08/20190802-11-1.png</a>&#8221;></p>

<p>Setelah itu kita coba akses kembali untuk mengakses endpoint <code>Key-Value Store</code>nya tanpa token. Apakah masih bisa?</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-12.png">https://coding4ever.files.wordpress.com/2019/08/20190802-12.png</a>&#8221;></p>

<p>Karna sudah tertolak, sekarang coba tambahkan parameter <code>?token</code>  untuk mengakses endpointya.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2019/08/20190802-13.png">https://coding4ever.files.wordpress.com/2019/08/20190802-13.png</a>&#8221;></p>

<p>Horeee berhasil :-)</p>

<p>Nah dengan adanya fitur <code>Key-Value Store</code> yang di miliki oleh <a href="https://www.consul.io/">Consul</a> ini, akan memudahkan kita jika terjadi perubahan konfigurasi aplikasi karena bisa dilakukan secara terpusat.</p>

<p>Mungkin cukup ya untuk postingan bagian <a href="/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/">pertama</a> ini, insyaAlloh di postingan <a href="/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2/">berikutnya</a> kita akan bahas bagaimana mengakses data <code>Key-Value Store</code> langsung dari aplikasi yang dibuat menggunakan VB6 dan .NET.</p>

<p>Oh iya ada yang kelupaan, gimana caranya agar consul bisa diinstall sebagai service (windows service)? Gampang, Anda tinggal ikuti langkah-langkah yang ada di <a href="https://learn.hashicorp.com/consul/datacenter-deploy/windows">sini</a> :-D.</p>

<p>Selamat mencoba :-)</p>
]]></content>
  </entry>
  
</feed>
