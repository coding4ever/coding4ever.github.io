<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Visual C# | Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/blog/categories/visual-c-number/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2015-05-02T12:34:29+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tutorial WCF Service Bagian #1]]></title>
    <link href="http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1/"/>
    <updated>2015-05-02T10:15:26+07:00</updated>
    <id>http://coding4ever.net/blog/2015/05/02/tutorial-wcf-service-bagian-number-1</id>
    <content type="html"><![CDATA[<h3>Apa itu WCF</h3>

<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-16.png">https://coding4ever.files.wordpress.com/2015/05/020515-16.png</a>&#8221; width=&#8221;100&#8221; height=&#8221;100&#8221;>WCF singkatan dari Windows Communication Foundation, merupakan salah satu teknologi Microsoft untuk membangun aplikasi berbasis layanan (service-oriented applications). Dengan kata lain WCF itu merupakan salah satu alternatif untuk membangun <a href="http://www.techopedia.com/definition/1622/web-service-net">web service</a> dan <a href="http://en.wikipedia.org/wiki/Distributed_computing">sistem terdistribusi</a> lainnya menggunakan teknologi Microsoft .NET.</p>

<blockquote><p>Dalam tutorial ini kita akan lebih banyak membahas hal-hal teknis untuk membuat web service menggunakan WCF. Untuk referensi lebih lanjut mengenai WCF bisa langsung Anda cari menggunakan layanan search engine favorit Anda :-)</p></blockquote>

<!-- more -->


<p>WCF merupakan gabungan dari beberapa teknologi <a href="http://en.wikipedia.org/wiki/Remote_procedure_call">RPC</a> lainnya seperti Web Service, <a href="/blog/categories/dot-net-remoting/">.NET Remoting</a>, MSMQ dan COM+</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-01.png">https://coding4ever.files.wordpress.com/2015/05/020515-01.png</a>&#8221;></p>

<p style="text-align:center">Sumber - <a href="http://wcftutorial.net/Introduction-to-WCF.aspx" target="_blank">WCF Tutorial</a></p>


<p>Sebagai langkah awal kita akan membuat aplikasi sederhana yang akan menerapkan teknologi WCF. Aplikasi yang akan kita buat yaitu Calculator, walaupun sederhana tetapi aplikasi ini membutuhkan 3 project untuk membuatnya.</p>

<ol>
<li><p><code>CalculatorLib</code> – Project CalculatorLib dibuat dengan memanfaatkan project bertipe Class Library yang isinya hanya berupa interface ICalculator dengan 4 buah method abstract yaitu : <code>Penambahan</code>, <code>Pengurangan</code>, <code>Perkalian</code> dan <code>Pembagian</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-02.png">https://coding4ever.files.wordpress.com/2015/05/020515-02.png</a>&#8221;></p>

<p>Project ini nantinya akan dicompile menjadi file dengan ekstensi .dll (CalculatorLib.dll), file CalculatorLib.dll ini akan dishare atau ditambahkan sebagai referensi untuk aplikasi CalculatorServer dan CalculatorClient.</p>

<p>Teknik ini dikenal dengan istilah <code>Shared Assembly</code> tujuannya adalah agar aplikasi server dan klien bisa berkomunikasi dengan cara yang sama.</p></li>
<li><p><code>CalculatorServer</code> – Project CalculatorServer dibuat dengan memanfaatkan project bertipe Class Library. Project ini akan dicompile menjadi file dengan ekstensi .dll (CalculatorServer.dll).</p>

<p>Project ini nantinya akan mengimplementasikan semua method-method abstract dari project CalculatorLib.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-03.png">https://coding4ever.files.wordpress.com/2015/05/020515-03.png</a>&#8221;></p>

<p>Agar class ini (CalculatorServer.dll) bisa dikenali sebagai WCF service, kita perlu meng-host-kannya terlebih dulu dengan beberapa cara yaitu :</p>

<ul>
<li>Hosting in Internet Information Services(IIS)</li>
<li>Hosting in Windows Activation Services(WAS)</li>
<li>Hosting in a Console or Desktop application(Self hosting)</li>
<li>Hosting in a Windows Service <br/>
<br></li>
</ul>
</li>
<li><p><code>CalculatorClient</code> – Project CalculatorClient dibuat dengan memanfaatkan project bertipe Windows Application, aplikasi ini hanya memanggil method-method abstract dari project CalculatorLib dengan memanfaatkan objek proxy sehingga method tersebut akan dieksekusi secara remote (dijalankan di sisi server).</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-04.png">https://coding4ever.files.wordpress.com/2015/05/020515-04.png</a>&#8221;></p>

<p><p style="text-align:center">Sumber - <a href="http://www.topwcftutorials.net/2014/06/3-ways-generate-proxy-wcf-service.html" target="_blank">Top WCF Tutorial</a></p></p>

<p>Berikut gambaran lengkap project yang akan kita buat</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-05.png">https://coding4ever.files.wordpress.com/2015/05/020515-05.png</a>&#8221;></p></li>
</ol>


<p>Oke kita sudahi dulu obrolannya dan kita langsung saja mulai dengan pembuatan project CalculatorLib, jangan lupa untuk mengaktifkan terlebih dulu Visual Studio .NET Anda.</p>

<h3>Membuat Project CalculatorLib</h3>

<ol>
<li><p>Klik menu File ->New -> Project …</p></li>
<li><p>Pada dialog New Project aktifkan pilihan Visual C# kemudian pada pilihan Templates pilih Class Library</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-06.png">https://coding4ever.files.wordpress.com/2015/05/020515-06.png</a>&#8221;></p>

<p>Pada isian Name isikan CalculatorLib, setelah itu klik tombol Ok.</p>

<p>Secara default pada saat pembuatan project sudah otomatis disediakan 1 buah class kosong dengan nama Class1, karena kita akan menambahkan class baru jadi class ini dihapus saja.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-07.png">https://coding4ever.files.wordpress.com/2015/05/020515-07.png</a>&#8221;></p></li>
</ol>


<h3>Menambahkan Interface ICalculator</h3>

<ol>
<li><p>Klik kanan project CalculatorLib -> Add -> New Item…</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-08.png">https://coding4ever.files.wordpress.com/2015/05/020515-08.png</a>&#8221;></p></li>
<li><p>Pada dialog add new item, pilih Interface dan untuk isian Name diisi ICalculator</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-09.png">https://coding4ever.files.wordpress.com/2015/05/020515-09.png</a>&#8221;></p>

<p>Setelah itu akan tampil editor code interface ICalculator</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-10.png">https://coding4ever.files.wordpress.com/2015/05/020515-10.png</a>&#8221;></p>

<p>Jangan lupa untuk menambahkan access modifier <code>public</code>.</p>

<p>Selanjutnya kita tinggal menambahkan 4 method abstractnya yaitu <code>Penambahan</code>, <code>Pengurangan</code>, <code>Perkalian</code> dan <code>Pembagian</code>.</p>

<p>Berikut kode lengkapnya :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-11.png">https://coding4ever.files.wordpress.com/2015/05/020515-11.png</a>&#8221;></p>

<p>Jika kita perhatikan kode di atas, ada tambahan attribute <code>ServiceContract</code> dan <code>OperationContract</code> pada nama interface dan method abstractnya.</p>

<p><code>ServiceContract</code> memberikan informasi service/layanan apa saja yang tersedia untuk bisa diakses sedangkan <code>OperationContract</code>  digunakan untuk memberikan tanda bahwa method tersebut merupakan operasi atau bagian dari <code>ServiceContract</code>.</p>

<p>Bagaimana jika kita lupa menambahkan attribut <code>ServiceContract</code> dan <code>OperationContract</code> ? Ya otomatis interface ICalculator berikut method tidak bisa diakses oleh client.</p>

<p>Untuk menambahkan attribut <code>ServiceContract</code> dan <code>OperationContract</code> kita perlu menambahkan namespace <code>System.ServiceModel</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-12.png">https://coding4ever.files.wordpress.com/2015/05/020515-12.png</a>&#8221;></p>

<p>Kemudian mendaftarkannya di bagian using</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-13.png">https://coding4ever.files.wordpress.com/2015/05/020515-13.png</a>&#8221;></p></li>
</ol>


<h3>Mengcompile project CalculatorLib</h3>

<p>Tujuannya adalah agar project CalculatorLib ini bisa digunakan sebagai referensi oleh aplikasi CalculatorServer dan CalculatorClient</p>

<ol>
<li><p>Klik kanan project CalculatorLib -> Build</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-14.png">https://coding4ever.files.wordpress.com/2015/05/020515-14.png</a>&#8221;></p>

<p>Setelah itu akan tampil hasil output dari proses Build</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/05/020515-15.png">https://coding4ever.files.wordpress.com/2015/05/020515-15.png</a>&#8221;></p></li>
</ol>


<p>Yuph cukup sampai disini, insya Alloh akan kita lanjutkan pada kesempatan berikutnya.</p>

<p>Selamat <a href="https://github.com/k4m4r82/Calculator">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paket NuGet Yang Wajib Dicoba Bagian #1 - CrashReporter.NET]]></title>
    <link href="http://coding4ever.net/blog/2015/04/14/paket-nuget-yang-wajib-dicoba-bagian-number-1-crashreporter-dot-net/"/>
    <updated>2015-04-14T14:41:34+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/14/paket-nuget-yang-wajib-dicoba-bagian-number-1-crashreporter-dot-net</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png">http://coding4ever.files.wordpress.com/2014/03/nuget-logo1.png</a>&#8221; width=&#8221;120&#8221; height=&#8221;100&#8221;>Apakah Anda percaya jika saya katakan aplikasi saya 100% bebas bug, tentu saja tidak. Seberapa keraspun kita mencoba pasti aplikasi yang kita buat ada bugnya.</p>

<p>Secara teknis kita tidak bisa melakukan pengetesan sebaik yang dilakukan oleh end-user. Mereka bisa melakukan hal-hal luar biasa diluar perkiraan dan skenario kita yang bisa menyebabkan error, dan bisa saja menyebabkan mereka menjadi <code>ilfil</code> menggunakan aplikasi kita he he :-D</p>

<!-- more -->


<p>Yang jelas, kita tidak dapat memperbaiki bug sampai kita tahu penyebabnya, sayangnya end-user biasanya kurang bisa menjelaskan masalah ini dengan baik.</p>

<p><a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a> adalah salah satu library gratis yang bisa menjadi solusi untuk masalah ini dengan konfigurasi mudah dan bisa mengirimkan laporan bug via email.</p>

<h3>Menambahkan Library CrashReporter.NET</h3>

<p>Untuk menambahkan library <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a> bisa kita lakukan via <a href="/blog/categories/nuget/">NuGet Package Manager</a>. Adapun caranya seperti berikut :</p>

<h4>Langkah – 1</h4>

<p>Klik kanan node <code>References</code> -> <code>Manage NuGet Packages...</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-12.png">https://coding4ever.files.wordpress.com/2015/04/140415-12.png</a>&#8221;></p>

<h4>Langkah – 2</h4>

<p>Cari <code>CrashReporter.NET</code> dan klik tombol Install</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-13.png">https://coding4ever.files.wordpress.com/2015/04/140415-13.png</a>&#8221;></p>

<p>Klik tombol Close, kemudian cek node <code>References</code>, seharusnya sudah ada tambahan library <code>CrashReporter.NET</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-14.png">https://coding4ever.files.wordpress.com/2015/04/140415-14.png</a>&#8221;></p>

<h3>Cara Penggunaan Library CrashReporter.NET</h3>

<p>Ada dua cara untuk menggunakan <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a></p>

<p><code>1. Global Exception</code></p>

<p>Jika kita ingin semua exception dihandle oleh <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a>, gunakan opsi ini. Caranya adalah dengan menambahkan kode konfigurasi di Main Method (Entry point dari program yang akan dijalankan pertama  kali).</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-01.png">https://coding4ever.files.wordpress.com/2015/04/140415-01.png</a>&#8221;></p>

<p><code>2. Individual Exception</code></p>

<p>Untuk opsi yang kedua ini berarti kita menambahkan kode konfigurasi hanya pada method-method tertentu saja yang kita anggap berpotensi menimbulkan <code>error</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-02.png">https://coding4ever.files.wordpress.com/2015/04/140415-02.png</a>&#8221;></p>

<p>Dua contoh kode di atas menggunakan class <code>ReportCrashConfig</code> yang kita bahas di bagian <em>konfigurasi CrashReporter.NET</em>.</p>

<h3>Konfigurasi CrashReporter.NET</h3>

<p>Untuk melakukan konfigurasi <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a>, cukup membuat objek dari class ReportCrash dan mengeset beberapa nilai property seperti <em>FromEmail, ToEmail</em>, dan property penting lainnya.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-03.png">https://coding4ever.files.wordpress.com/2015/04/140415-03.png</a>&#8221;></p>

<p>Secara default <a href="http://www.nuget.org/packages/CrashReporterdotNet/">CrashReporter.NET</a>  menggunakan service <a href="https://drdump.com/crash-reporting-system">Doctor Dump</a>, untuk mengirimkan email laporan bug ke email yang sudah kita tentukan melalui property <em>ToEmail</em>.</p>

<p>Jika kita ingin menggunakan email sendiri untuk mengirim laporan bug, berarti kita harus menyiapkan dua email misal dengan nama <em>pengirim.bug@gmail.com</em> dan <em>penerima.bug@gmail.com</em> yang masing-masing kita set untuk nilai property <em>FromEmail</em>, <em>ToEmail</em> dan  kemudian mengeset nilai property <em>AnalyzeWithDoctorDump = false</em>. Dan jangan lupa set property <em>UserName</em> = <em>FromEmail</em>, untuk <em>Password</em> email menyesuaikan dengan <em>FromEmail</em>.</p>

<p>Agar kode konfigurasi di atas bisa digunakan berulang-ulang, mungkin bisa kita <code>bungkus</code> ke dalam sebuah class tersendiri.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-04.png">https://coding4ever.files.wordpress.com/2015/04/140415-04.png</a>&#8221;></p>

<p>Sehingga ketika diperlukan kita cukup memanggilnya dengan perintah <code>new ReportCrashConfig(object exception)</code></p>

<h3>Demo CrashReporter.NET</h3>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-05.png">https://coding4ever.files.wordpress.com/2015/04/140415-05.png</a>&#8221;></p>

<p>Untuk demo disini kita akan memanfaatkan dua jenis error yaitu <em>DivideByZeroException</em> dan <em>FileNotFoundException</em>.</p>

<h4>DivideByZeroException</h4>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-06.png">https://coding4ever.files.wordpress.com/2015/04/140415-06.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-07.png">https://coding4ever.files.wordpress.com/2015/04/140415-07.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-08.png">https://coding4ever.files.wordpress.com/2015/04/140415-08.png</a>&#8221;></p>

<h4>FileNotFoundException</h4>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-09.png">https://coding4ever.files.wordpress.com/2015/04/140415-09.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-10.png">https://coding4ever.files.wordpress.com/2015/04/140415-10.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/140415-11.png">https://coding4ever.files.wordpress.com/2015/04/140415-11.png</a>&#8221;></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoCrashReporterDotNET">MENCOBA</a> :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Laporan Crystal Reports .NET Dengan Model Data-Push]]></title>
    <link href="http://coding4ever.net/blog/2015/04/12/membuat-laporan-crystal-reports-net-dengan-model-data-push/"/>
    <updated>2015-04-12T23:58:08+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/12/membuat-laporan-crystal-reports-net-dengan-model-data-push</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2015/04/sap-cr.jpg">https://coding4ever.files.wordpress.com/2015/04/sap-cr.jpg</a>&#8221; width=&#8221;120&#8221; height=&#8221;100&#8221;>Ketika memutuskan untuk menggunakan Crystal Reports‎ sebagai tool untuk membuat laporan, ada dua model yang bisa kita gunakan untuk menampilkan data.</p>

<ol>
<li>Pull model – kita mengeset koneksi ke database, mengirimkan perintah SQL, menentukan filter dan sisanya akan langsung ditangani oleh Crystal Reports. Cara yang pertama ini adalah cara umum yang biasanya digunakan untuk menampilkan data, dan rata-rata tutorial yang beredar juga menggunakan cara ini.</li>
<li>Push model – dengan cara yang kedua ini kita membuat tabel temporary dengan menggunakan objek DataSet kemudian mengirimkan data dengan format DataSet, DataTable, IDataReader atau IEnumerable dan sisanya akan langsung ditangani oleh Crystal Reports.</li>
</ol>


<!-- more -->


<p>Nah pada postingan kali ini kita akan menggunakan cara yang kedua yaitu Push Model dengan sumber datanya berupa object collection (IEnumerable).</p>

<p>Persiapan tool-tool yang akan digunakan :</p>

<ol>
<li><a href="http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-community">Visual Studio Community 2013</a>, Anda bisa saja menggunakan Visual Studio .NET versi sebelumnya (2010, 2012)</li>
<li><a href="/blog/categories/nuget/">NuGet</a>, untuk memudahkan dalam menambahkan library pihak ketiga. Adapun library pihak ketiga yang digunakan dalam sample ini adalah <a href="/blog/categories/dapper-net/">Dapper .NET</a> dan <a href="http://www.nuget.org/packages/System.Data.SQLite.Core/">System.Data.SQLite Core</a></li>
<li><a href="http://scn.sap.com/docs/DOC-7824">Crystal Reports SP 13</a></li>
<li>Database <a href="http://www.sqlite.org/">SQLite</a></li>
<li>Tipe project WinForm</li>
</ol>


<p>Untuk contoh postingan kali ini, kita hanya menggunakan satu buah tabel dengan struktur seperti berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-01.png">https://coding4ever.files.wordpress.com/2015/04/120415-01.png</a>&#8221;></p>

<p>Setelah semua tool yang dibutuhkan tersedia kita lanjutkan dengan pembuatan project :</p>

<ul>
<li>Buat project baru dengan type WinForm</li>
</ul>


<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-02.png">https://coding4ever.files.wordpress.com/2015/04/120415-02.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-03.png">https://coding4ever.files.wordpress.com/2015/04/120415-03.png</a>&#8221;></p>

<ul>
<li>Tambahkan empat folder baru masing-masing dengan nama DataSet, Model, Dao dan Report</li>
</ul>


<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-04.png">https://coding4ever.files.wordpress.com/2015/04/120415-04.png</a>&#8221;></p>

<p>Folder DataSet digunakan untuk mengelompokkan item-item DataSet yang berfungsi sebagai tabel temporary, folder Model untuk mengelompokkan class-class model atau entity, folder Dao untuk mengelompokkan class-class akses database (Data Acces Object) dan terakhir folder Report untuk mengelompokkan item-item Crystal Reports.</p>

<h3>Class Model/Entity</h3>

<p>Untuk menerapkan konsep OOP (Object-oriented programming) dalam pemrograman database kita perlu membuat sebuah class yang disebut dengan istilah class Model atau Entity. Class ini merupakan representasi dari tabel-tabel yang ada di dalam database. Tujuan dari membuat class ini adalah agar kita bisa melakukan mapping (pemetaan) baris/row dari tabel menjadi kumpulan objek (object collection).</p>

<p>Pemetaan bisa dilakukan secara manual atau bisa juga secara otomatis dengan menggunakan tool-tool ORM dari pihak ketiga seperti <a href="/blog/categories/dapper-net/">Dapper .NET</a> dan <a href="/blog/categories/entity-framework/">Entity Framework</a>. Untuk contoh kali ini kita menggunakan <a href="/blog/categories/dapper-net/">Dapper .NET</a>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-05.png">https://coding4ever.files.wordpress.com/2015/04/120415-05.png</a>&#8221;></p>

<p>Setelah memahami apa itu class model dan bagaimana proses pemetaan record ke objek terjadi, langkah berikutnya adalah menambahkan class model Siswa yang mempunyai struktur sama persis dengan rancangan tabel di awal.</p>

<p>Untuk menambahkan class Model, klik kanan Project -> Add -> New Item…</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-06.png">https://coding4ever.files.wordpress.com/2015/04/120415-06.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-07.png">https://coding4ever.files.wordpress.com/2015/04/120415-07.png</a>&#8221;></p>

<p>Kemudian lengkapi kode class Siswa, seperti gambar berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-08.png">https://coding4ever.files.wordpress.com/2015/04/120415-08.png</a>&#8221;></p>

<h3>Class DAO (Data Access Object)</h3>

<p>Class DAO adalah class yang bertugas untuk menangani operasi database yang dikenal dengan istilah operasi CRUD (Create, Read, Update dan Delete). Di dalam class inilah kita menuliskan perintah-perintah INSERT, UPDATE, DELETE dan SELECT. Sebagai contoh kode dibawah ini akan melakukan mapping (pemetaan) baris/row tabel menjadi kumpulan objek (object collection) secara otomatis.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-09.png">https://coding4ever.files.wordpress.com/2015/04/120415-09.png</a>&#8221;></p>

<p>Contoh pemanggilannya juga gampang :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-10.png">https://coding4ever.files.wordpress.com/2015/04/120415-10.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-11.png">https://coding4ever.files.wordpress.com/2015/04/120415-11.png</a>&#8221;></p>

<h3>DataSet</h3>

<p>Dengan model data Push kita tidak langsung menghubungkan antara Crystal Reports dengan database, jadi sebagai solusinya kita menggunakan DataSet yang berfungsi sebagai tabel temporary dan menjadi sumber data bagi Crystal Reports.</p>

<p>Untuk menambahkan item DataSet, klik kanan Project -> Add -> New Item…</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-12.png">https://coding4ever.files.wordpress.com/2015/04/120415-12.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-13.png">https://coding4ever.files.wordpress.com/2015/04/120415-13.png</a>&#8221;></p>

<p>Setelah menambahkan item DataSet (DsSiswa), langkah berikutnya adalah menambahkan item DataTable</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-14.png">https://coding4ever.files.wordpress.com/2015/04/120415-14.png</a>&#8221;></p>

<p>Kemudian input informasi DataTablenya seperti gambar berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-15.png">https://coding4ever.files.wordpress.com/2015/04/120415-15.png</a>&#8221;></p>

<p>Khusus untuk nama field dan tipe data dari DataTable yang kita buat, harus disesuaikan dengan nama field dan tipe data tabel.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-01.png">https://coding4ever.files.wordpress.com/2015/04/120415-01.png</a>&#8221;></p>

<h3>Crystal Reports</h3>

<p>Crystal Reports adalah tool yang kita gunakan untuk membuat laporan. Untuk menambahkan item Crystal Report, klik kanan Project -> Add -> New Item…</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-16.png">https://coding4ever.files.wordpress.com/2015/04/120415-16.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-17.png">https://coding4ever.files.wordpress.com/2015/04/120415-17.png</a>&#8221;></p>

<p>Pilih &ldquo;As a Blank Report&rdquo; karena kita akan mendesain report secara manual.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-18.png">https://coding4ever.files.wordpress.com/2015/04/120415-18.png</a>&#8221;></p>

<p>Langkah berikutnya adalah menentukan sumber data yang kita arahkan ke item DataSet yang sudah kita buat pada langkah sebelumnya</p>

<p>Klik kanan Database Fields -> Database Expert …</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-19.png">https://coding4ever.files.wordpress.com/2015/04/120415-19.png</a>&#8221;></p>

<p>Pilih ADO.NET DataSet Siswa</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-20.png">https://coding4ever.files.wordpress.com/2015/04/120415-20.png</a>&#8221;></p>

<p>Drag satu-satu field siswa (nis, nama dan alamat) ke section detail, kemudian dirapikan.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-21.png">https://coding4ever.files.wordpress.com/2015/04/120415-21.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-22.png">https://coding4ever.files.wordpress.com/2015/04/120415-22.png</a>&#8221;></p>

<h3>Crystal Report Viewer</h3>

<p>Setelah semua persiapan selesai, langkah berikutnya adalah menambahkan Crystal Report Viewer yang berfungsi sebagai container untuk untuk menampilkan report.</p>

<p>Aktifkan form kemudian tambahkan Crystal Report Viewer</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-23.png">https://coding4ever.files.wordpress.com/2015/04/120415-23.png</a>&#8221;></p>

<p>Kemudian tambahkan kode berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-24.png">https://coding4ever.files.wordpress.com/2015/04/120415-24.png</a>&#8221;></p>

<p>Dari kode di atas kita bisa melihat tidak ada lagi kode untuk mengeset koneksi database dan perintah SQL yang akan dikirimkan. Cara ini sangat cocok digunakan ketika kita akan membangun sistem dengan arsitektur <a href="/blog/2012/02/01/pembuatan-aplikasi-client-server-dengan-arsitektur-3-tier-part-1/">N-Tier</a>, di mana aplikasi klien sudah tidak terkoneksi lagi secara langsung ke database.</p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti gambar di bawah ini.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2015/04/120415-25.png">https://coding4ever.files.wordpress.com/2015/04/120415-25.png</a>&#8221;></p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoCRPushModel">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Entity Framework Part 8]]></title>
    <link href="http://coding4ever.net/blog/2014/06/08/entity-framework-part-8/"/>
    <updated>2014-06-08T10:21:10+07:00</updated>
    <id>http://coding4ever.net/blog/2014/06/08/entity-framework-part-8</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://coding4ever.files.wordpress.com/2014/03/entity_image.png">http://coding4ever.files.wordpress.com/2014/03/entity_image.png</a>&#8221; width=&#8221;120&#8221; height=&#8221;100&#8221;>Melanjutkan kembali pembahasan tentang <a href="/blog/categories/entity-framework/">Entity Framework</a>.</p>

<p>Misalkan kita mempunyai struktur tabel seperti gambar di bawah ini.</p>

<!-- more -->


<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/11.png">https://coding4ever.files.wordpress.com/2014/06/11.png</a>&#8221;></p>

<p>Jika kita buatkan class entity dari ketiga tabel di atas, class diagramnya akan terlihat seperti berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/21.png">https://coding4ever.files.wordpress.com/2014/06/21.png</a>&#8221;></p>

<p>Dari gambar class diagram di atas, kita bisa melihat bahwa class <code>Siswa</code>, <code>Guru</code> dan <code>Pegawai</code> mempunyai beberapa property yang sama yaitu <code>Jalan</code>, <code>Kota</code>, <code>Provinsi</code> dan <code>KodePos</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/31.png">https://coding4ever.files.wordpress.com/2014/06/31.png</a>&#8221;></p>

<p>Untuk alasan desain class entity yang lebih baik sebaiknya kita pisahkan property <code>Jalan</code>, <code>Kota</code>, <code>Provinsi</code> dan <code>KodePos</code> ke dalam class tersendiri, misal dengan nama class <code>Alamat</code>, kemudian masing-masing class entity <code>Siswa</code>, <code>Guru</code> dan <code>Pegawai</code> menambahkan property baru dengan tipe <code>class Alamat</code>, sehingga class diagram kita akan menjadi seperti berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/41.png">https://coding4ever.files.wordpress.com/2014/06/41.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/10.png">https://coding4ever.files.wordpress.com/2014/06/10.png</a>&#8221;></p>

<p>Nah class baru (Alamat) inilah yang akan menjadi pembahasan kita pada postingan kali ini yang dikenal dengan istilah <code>Complex Types</code> atau <code>Value Types</code>.</p>

<p>Sejak awal <a href="/blog/categories/entity-framework/">Entity Framework</a> sudah mendukung <code>Complex Types</code> atau yang dikenal juga dengan istilah <code>value types</code>.</p>

<p><code>Complex Types</code> atau <code>value types</code> bisa digunakan sebagai tipe data dari sebuah property sehingga ada kemiripan dengan class entity biasa yang sudah kita kenal, yang disebut dengan istilah <code>entity types</code>.</p>

<p>Lalu di mana perbedaannya ?</p>

<p>Di dalam <a href="/blog/categories/entity-framework/">Entity Framework</a> setiap <code>entity types</code> harus mempunyai <code>property key</code> sedangkan <code>complex types</code> tidak.</p>

<p>Contoh :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/51.png">https://coding4ever.files.wordpress.com/2014/06/51.png</a>&#8221;></p>

<h3>Mendefinisikan Complex Types</h3>

<p>Setelah mengetahui perbedaan antara <code>entity types</code> dan <code>complex types</code> kita juga harus mengetahui aturan dalam membuat <code>complex types</code>.</p>

<p>Berikut aturan-aturan yang harus kita penuhi untuk membuat <code>complex types</code>.</p>

<ol>
<li><code>Complex types</code> tidak boleh mempunyai <code>property key</code>.</li>
<li>Semua property yang dimiliki <code>complex types</code> harus bertipe <a href="http://en.wikipedia.org/wiki/Primitive_data_type">primitif</a>.</li>
<li>Ketika digunakan sebagai tipe data oleh class lain, tidak boleh sebagai <code>collection type</code> harus <code>single
instance</code></li>
</ol>


<p>Contoh :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/62.png">https://coding4ever.files.wordpress.com/2014/06/62.png</a>&#8221;></p>

<h3>Konfigurasi Mapping (pemetaan) Complex Types</h3>

<p>Untuk menyederhanakan contoh kode program, konfigurasi mapping (pemetaan) <code>complex types</code> di bawah ini menggunakan konfigurasi <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>. Saya sendiri lebih senang menggunakan konfigurasi <a href="http://msdn.microsoft.com/en-us/data/jj591617.aspx">Fluent API</a> dengan tujuan agar class entity kita tetap bersih dari atribut-atribut <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a>.</p>

<p>Caranya adalah dengan mengedit class Alamat, kemudian menambahkan atribut <a href="http://msdn.microsoft.com/en-us/data/jj591583.aspx">Data Annotations</a></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/71.png">https://coding4ever.files.wordpress.com/2014/06/71.png</a>&#8221;></p>

<p>Terakhir kita coba untuk mengakses property dengan tipe <code>complex types</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/81.png">https://coding4ever.files.wordpress.com/2014/06/81.png</a>&#8221;></p>

<p>Jika kode di atas dijalankan, akan menghasilkan output seperti berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2014/06/91.png">https://coding4ever.files.wordpress.com/2014/06/91.png</a>&#8221;></p>

<p>Selamat <a href="https://github.com/k4m4r82/EntityFramework8">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SMS Gateway Edisi .NET Part 1]]></title>
    <link href="http://coding4ever.net/blog/2014/05/10/sms-gateway-edisi-net-part-1/"/>
    <updated>2014-05-10T10:11:25+07:00</updated>
    <id>http://coding4ever.net/blog/2014/05/10/sms-gateway-edisi-net-part-1</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://coding4ever.files.wordpress.com/2014/05/sms_gateway.png">http://coding4ever.files.wordpress.com/2014/05/sms_gateway.png</a>&#8220;>Postingan pertama di <a href="">domain</a> yang baru :), saya ingin membahas lagi tentang pembuatan aplikasi SMS Gateway. Alasannya sederhana karna salah satu artikel yang paling banyak dibaca di blog ini adalah artikel <a href="/blog/2010/07/12/membuat-sms-gateway-itu-gampang-jangan-dipersulit/">Membuat Sms Gateway Itu Gampang, Jangan Dipersulit !!!</a>.</p>

<p>Jika pada artikel <a href="/blog/2010/07/12/membuat-sms-gateway-itu-gampang-jangan-dipersulit/">Membuat Sms Gateway Itu Gampang, Jangan Dipersulit !!!</a>, kita menggunakan bahasa pemrograman VB 6, untuk postingan kali ini kita akan menggunakan bahasa pemrograman C#.</p>

<!-- more -->


<p>Untuk membaca dan mengirim sms kita akan menggunakan library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a>, yang bisa diinstall via <a href="/blog/categories/nuget/">NuGet</a>.</p>

<p>Sebelum lanjut kita lihat dulu fitur dari library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a> :</p>

<ul>
<li>Manage SMS messages: Send, read, delete, store, import and export messages, get memory status, get/set SMSC.</li>
<li>Manage the phonebook: Create, find, delete, read, import and export phonebook entries, get memory status.</li>
<li>Manage the phone: Read general info, reset configuration, enter PIN</li>
<li>Supports notifications about new messages as well as forwarding them directly to the application.</li>
<li>Detect phone connection/disconnection.</li>
<li>Other SMS message variants also possible, such as alerts and notifications.</li>
<li>Support for Smart Messaging and related messages to create, locate and recombine concatenated text messages, and also to create operator logo messages.</li>
<li>Logging support with 4 levels to assist in troubleshooting.</li>
<li>Support for GSM 7-bit default alphabet and Unicode for the message text.</li>
<li>Supports some operator functions.</li>
<li>Remoting support for sending SMS messages.</li>
<li>SMS batch mode for faster sending of multiple messages.</li>
<li>Execution of custom commands that are not directly supported.</li>
</ul>


<p>Keren bukan untuk ukuran library gratis :)</p>

<p>Pada postingan bagian pertama ini kita hanya akan membahas perintah-perintah dasar yang dibutuhkan untuk membuat aplikasi SMS Gateway, seperti <code>koneksi ke device modem atau hp</code>, <code>membaca sms masuk</code>, dan <code>mengirim sms</code>.</p>

<h3>Membuat Project</h3>

<p>Project yang kita gunakan adalah project berbasis Windows Form.</p>

<p><img class="center <a" src="href="http://coding4ever.files.wordpress.com/2014/05/1.png">http://coding4ever.files.wordpress.com/2014/05/1.png</a>&#8221;></p>

<h3>Menambahkan Library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a> via <a href="/blog/categories/nuget/">NuGet</a></h3>

<ul>
<li><p>Klik kanan node References -> Manage NuGet Packages &hellip;</p>

<p><img class="center <a" src="href="http://coding4ever.files.wordpress.com/2014/05/21.png">http://coding4ever.files.wordpress.com/2014/05/21.png</a>&#8221;></p></li>
<li><p>Pada tab Online pilih nuget.org, pada kotak pencarian ketik <code>gsm</code>, kemudian klik tombol <code>Install</code>.</p>

<p><img class="center <a" src="href="http://coding4ever.files.wordpress.com/2014/05/3.png">http://coding4ever.files.wordpress.com/2014/05/3.png</a>&#8221;></p></li>
</ul>


<p>kemudian tunggu sampai proses instalasi selesai.</p>

<p><img class="center <a" src="href="http://coding4ever.files.wordpress.com/2014/05/4.png">http://coding4ever.files.wordpress.com/2014/05/4.png</a>&#8221;></p>

<p>Tutup dialog NuGet package, Kemudian cek node references, seharusnya ada empat library baru yang sudah ditambahkan yaitu <code>GSMCommServer</code>, <code>GSMCommShared</code>, <code>GSMCommunication</code> dan <code>PDUConverter</code>.</p>

<p><img class="center <a" src="href="http://coding4ever.files.wordpress.com/2014/05/5.png">http://coding4ever.files.wordpress.com/2014/05/5.png</a>&#8221;></p>

<p>Library <code>PDUConverter</code> bertanggung jawaban untuk melakukan proses <code>decoding</code> pesan sms, sedangkan yang bertugas untuk melakukan komunikasi ke modem atau hp adalah library <code>GSMCommunication</code>.</p>

<p>Untuk library <code>GSMCommServer</code> dan <code>GSMCommShared</code> hanya digunakan jika kita ingin mengaktifkan fitur <a href="/blog/categories/dot-net-remoting/">.NET Remoting</a> untuk mengirim sms.</p>

<p>Setelah semua persiapan selesai, kita bisa langsung mencoba perintah-perintah dasar yang diperlukan untuk pembuatan aplikasi sms gateway.</p>

<h3>1. Konek ke device modem atau hp</h3>

<p>Untuk melakukan koneksi ke modem atau hp, ada beberapa tahapan yang harus kita lakukan :</p>

<ul>
<li>Membuat objek dari class GsmCommMain</li>
<li>Mendaftarkan method ke event <code>MessageReceived</code>, yang dikenal dengan istilah <a href="http://www.codeproject.com/Articles/11657/Understanding-Delegates-in-C">delegate</a>    method.</li>
<li>Memanggil method <code>Open</code>.</li>
</ul>


<p><strong>Membuat objek dari class GsmCommMain</strong></p>

<p>Misal kita akan membuat sebuah objek dari class GsmCommMain dengan nama <code>comm</code>, maka perintahnya yang digunakan adalah :</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="kt">var</span> <span class="n">port</span> <span class="p">=</span> <span class="p">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">COM1</span><span class="p">&amp;</span><span class="n">rdquo</span><span class="p">;;</span> <span class="c1">// port yang digunakan menyesuaikan</span>
</span><span class='line'><span class="kt">var</span> <span class="n">baudRate</span> <span class="p">=</span> <span class="m">9600</span><span class="p">;</span>
</span><span class='line'><span class="kt">var</span> <span class="n">timeout</span> <span class="p">=</span> <span class="m">150</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="kt">var</span> <span class="n">comm</span> <span class="p">=</span> <span class="k">new</span> <span class="n">GsmCommMain</span><span class="p">(</span><span class="n">port</span><span class="p">,</span> <span class="n">baudRate</span><span class="p">,</span> <span class="n">timeout</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><strong>Mendaftarkan method ke event <code>MessageReceived</code> yang dikenal dengan istilah <a href="http://www.codeproject.com/Articles/11657/Understanding-Delegates-in-C">delegate</a>    method</strong></p>

<p>Salah satu fitur keren yang dimiliki oleh library <a href="http://www.nuget.org/packages/GSMComm/">GSMComm</a> adalah Event <code>MessageReceived</code>. Dengan adanya event ini kita tidak perlu menggunakan objek timer untuk mengecek apakah ada sms yang masuk.</p>

<p>Event ini tidak bisa kita akses secara langsung, yang perlu kita lakukan adalah membuat sebuah method kemudian mendaftarkannya ke event ini.</p>

<p>Contoh kita membuat sebuah method dengan nama <code>comm_MessageReceived</code>, method ini hanya akan menampilkan notifikasi sms masuk. Untuk selanjutnya method ini bisa kita kembangkan lagi, misal ketika ada sms masuk datanya langsung kita simpan ke database.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">comm_MessageReceived</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MessageReceivedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">obj</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="n">IndicationObject</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">obj</span> <span class="k">is</span> <span class="n">MemoryLocation</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">loc</span> <span class="p">=</span> <span class="p">(</span><span class="n">MemoryLocation</span><span class="p">)</span><span class="n">obj</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;New message received in storage \&quot;{0}\&quot;, index {1}.&quot;</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">loc</span><span class="p">.</span><span class="n">Storage</span><span class="p">,</span> <span class="n">loc</span><span class="p">.</span><span class="n">Index</span><span class="p">);</span>
</span><span class='line'>    <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">obj</span> <span class="k">is</span> <span class="n">ShortMessage</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="p">(</span><span class="n">ShortMessage</span><span class="p">)</span><span class="n">obj</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">pdu</span> <span class="p">=</span> <span class="n">comm</span><span class="p">.</span><span class="n">DecodeReceivedMessage</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&quot;New message received&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Kemudian kita daftarkan ke event <code>MessageReceived</code> dengan perintah :</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">comm</span><span class="p">.</span><span class="n">MessageReceived</span> <span class="p">+=</span> <span class="k">new</span> <span class="n">MessageReceivedEventHandler</span><span class="p">(</span><span class="n">comm_MessageReceived</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>sehingga ketika ada sms yang masuk method <code>comm_MessageReceived</code> akan otomatis dipanggil.</p>

<p><strong>Memanggil method <code>Open</code></strong></p>

<p>Setelah langkah pertama dan kedua selesai dikerjakan kita bisa langsung memanggil method <code>Open</code> untuk melakukan koneksi ke modem atau hp.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">comm</span><span class="p">.</span><span class="n">Open</span><span class="p">();&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="k">while</span> <span class="p">(!</span><span class="n">comm</span><span class="p">.</span><span class="n">IsConnected</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msgResult</span> <span class="p">=</span> <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="p">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">No</span> <span class="n">phone</span> <span class="n">connected</span><span class="p">.&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="p">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Connection</span> <span class="n">setup</span><span class="p">&amp;</span><span class="n">rdquo</span><span class="p">;,</span>
</span><span class='line'>                                        <span class="n">MessageBoxButtons</span><span class="p">.</span><span class="n">RetryCancel</span><span class="p">,</span> <span class="n">MessageBoxIcon</span><span class="p">.</span><span class="n">Exclamation</span><span class="p">);&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">msgResult</span> <span class="p">==</span> <span class="n">DialogResult</span><span class="p">.</span><span class="n">Cancel</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">comm</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">comm</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span><span class='line'>    <span class="n">comm</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>2. Membaca SMS Masuk</h3>

<p>Method yang digunakan untuk membaca sms adalah method <code>ReadMessages</code>, method ini mempunyai dua parameter yaitu <code>PhoneMessageStatus</code> dan <code>Storage</code>.</p>

<p>Untuk <code>PhoneMessageStatus</code> pilihannya adalah : <code>ReceivedUnread</code>, <code>ReceivedRead</code>, <code>StoredUnsent</code>, <code>StoredSent</code> dan <code>All</code>. Sedangkan <code>Storage</code> pilihannya hanya dua yaitu : <code>SM</code> dan <code>ME</code>.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'>  <span class="p">&lt;</span><span class="n">br</span><span class="p">/&gt;</span>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">btnBacaSMS_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">messages</span> <span class="p">=</span> <span class="n">comm</span><span class="p">.</span><span class="n">ReadMessages</span><span class="p">(</span><span class="n">PhoneMessageStatus</span><span class="p">.</span><span class="n">All</span><span class="p">,</span> <span class="n">PhoneStorageType</span><span class="p">.</span><span class="n">Sim</span><span class="p">);</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">message</span> <span class="k">in</span> <span class="n">messages</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">var</span> <span class="n">data</span> <span class="p">=</span> <span class="p">(</span><span class="n">SmsDeliverPdu</span><span class="p">)</span><span class="n">message</span><span class="p">.</span><span class="n">Data</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span>    <span class="kt">var</span> <span class="n">phoneNumber</span> <span class="p">=</span> <span class="n">data</span><span class="p">.</span><span class="n">OriginatingAddress</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="n">data</span><span class="p">.</span><span class="n">UserDataText</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">tanggal</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0:yyyy/MM/dd}&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">.</span><span class="n">SCTimestamp</span><span class="p">.</span><span class="n">ToDateTime</span><span class="p">());</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">jam</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0:HH:mm:ss}&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">.</span><span class="n">SCTimestamp</span><span class="p">.</span><span class="n">ToDateTime</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">lstDaftarSMS</span><span class="p">.</span><span class="n">Items</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&quot;{0}, {1}, {2}, {3}&quot;</span><span class="p">,</span> <span class="n">tanggal</span><span class="p">,</span> <span class="n">jam</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">,</span> <span class="n">msg</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h3>3. Mengirim SMS</h3>

<p>Untuk mengirim sms kita menggunakan method <code>SendMessage</code> yang membutuhkan objek <a href="http://en.wikipedia.org/wiki/Protocol_data_unit">pdu</a>.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">btnKirimSMS_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="n">txtPesan</span><span class="p">.</span><span class="n">Text</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">phoneNumber</span> <span class="p">=</span> <span class="n">txtNoHp</span><span class="p">.</span><span class="n">Text</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="kt">var</span> <span class="n">pdu</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SmsSubmitPdu</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">,</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">);</span>
</span><span class='line'><span class="n">comm</span><span class="p">.</span><span class="n">SendMessage</span><span class="p">(</span><span class="n">pdu</span><span class="p">);</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Kode di atas hanya bisa mengirim sms dengan jumlah karakter maksimal 160 karakter, jika ingin lebih kita harus merevisi kode di atas dengan menambahkan beberapa method baru yaitu <code>CreateConcatMessage</code> dan <code>SendMultiple</code>.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="n">OutgoingSmsPdu</span><span class="p">[]</span> <span class="nf">CreateConcatMessage</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">,</span> <span class="kt">string</span> <span class="n">number</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">OutgoingSmsPdu</span><span class="p">[]</span> <span class="n">pdus</span> <span class="p">=</span> <span class="k">null</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">try</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">pdus</span> <span class="p">=</span> <span class="n">SmartMessageFactory</span><span class="p">.</span><span class="n">CreateConcatTextMessage</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">number</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">pdus</span><span class="p">;</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">SendMultiple</span><span class="p">(</span><span class="n">OutgoingSmsPdu</span><span class="p">[]</span> <span class="n">pdus</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">num</span> <span class="p">=</span> <span class="n">pdus</span><span class="p">.</span><span class="n">Length</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">try</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Send the created messages</span>
</span><span class='line'>    <span class="n">comm</span><span class="p">.</span><span class="n">EnableTemporarySmsBatchMode</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="n">OutgoingSmsPdu</span> <span class="n">pdu</span> <span class="k">in</span> <span class="n">pdus</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">comm</span><span class="p">.</span><span class="n">SendMessage</span><span class="p">(</span><span class="n">pdu</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">catch</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Terakhir kode yang ada di method <code>btnKirimSMS_Click</code> juga harus di revisi :</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">btnKirimSMS_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">msg</span> <span class="p">=</span> <span class="n">txtPesan</span><span class="p">.</span><span class="n">Text</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">phoneNumber</span> <span class="p">=</span> <span class="n">txtNoHp</span><span class="p">.</span><span class="n">Text</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">Length</span> <span class="p">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">160</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">pdus</span> <span class="p">=</span> <span class="n">CreateConcatMessage</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pdus</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span> <span class="n">SendMultiple</span><span class="p">(</span><span class="n">pdus</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">pdu</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SmsSubmitPdu</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">phoneNumber</span><span class="p">,</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">);</span>
</span><span class='line'>    <span class="n">comm</span><span class="p">.</span><span class="n">SendMessage</span><span class="p">(</span><span class="n">pdu</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Yuph akhirnya selesai juga.</p>

<p>Selamat <a href="https://github.com/k4m4r82/SMSGatewayNET1">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
</feed>
