<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mysql | Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2015-07-01T10:51:57+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Membuat Jadwal Backup Database Otomatis]]></title>
    <link href="http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/"/>
    <updated>2015-04-30T15:33:59+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis</id>
    <content type="html"><![CDATA[<p>{% img left <a href="https://coding4ever.files.wordpress.com/2015/04/300415-14.png">https://coding4ever.files.wordpress.com/2015/04/300415-14.png</a> 100 100 %}Backup database merupakan salah satu hal penting, apalagi jika kita bekerja sebagai database administrator.</p>

<p>Semakin banyaknya data-data yang tersimpan seperti data keuangan, akademik dan data penting lainnya mengharuskan kita untuk meluangkan waktu khusus untuk melakukan backup database.</p>

<p>Backup secara manual tentu saja tidak disarankan, apalagi jika datanya sudah banyak, tentu saja sedikit banyaknya akan menyita waktu kita untuk melakukan hal penting lainnya.</p>

<!-- more -->


<p>Salah satu keuntungan menggunakan backup otomatis adalah, kita bisa mengset jadwal backup diluar jam-jam kantor. Misal jam 5 sore, jam 12 malam atau jam lainnya sesuai dengan kebutuhan.</p>

<h3>Database MySQL</h3>

<p>Adapun database yang kita gunakan untuk simulasi backup otomatis ini adalah database MySQL. Untuk membackup database MySQL kita bisa gunakan tool bawaan MySQL yaitu <code>mysqldump</code>.</p>

<p>Adapun perintahnya seperti berikut :</p>

<p>{% codeblock %}
&lsquo; backup
mysqldump -uUSER_NAME -pUSER_PASSWORD &ndash;routines NAMA_DATABASE > LOKASI_FILE_BACKUP.SQL
{% endcodeblock %}</p>

<p>Parameter <code>â€“routines</code> ditambahkan jika database mempunyai fungsi/trigger.</p>

<p>Karena data backupnya yang disimpan lebih dari satu, untuk nama database akan kita buat unik dengan format : <code>nama_database-tahun-bulan-hari_jam_menit</code>. Contoh :</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-01.png">https://coding4ever.files.wordpress.com/2015/04/300415-01.png</a> %}</p>

<p>Untuk mendapatkan informasi tahun, bulan, hari dan jam, kita bisa memanfaatkan batch command dengan perintah seperti berikut :</p>

<p>{% codeblock %}
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set year=%%c
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set month=%%a
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set day=%%b</p>

<p>for /f &ldquo;tokens=1 delims=: &rdquo; %%h in (&lsquo;time /T&rsquo;) do set hour=%%h
for /f &ldquo;tokens=2 delims=: &rdquo; %%m in (&lsquo;time /T&rsquo;) do set minutes=%%m
for /f &ldquo;tokens=3 delims=: &rdquo; %%a in (&lsquo;time /T&rsquo;) do set ampm=%%a</p>

<p>rem membuat file backup database dengan format nama_database-tahun-bulan-hari_jam_menit
set FILE_BACKUP=D:\backup\Chinook-%year%-%month%-%day%_%hour%-%minutes%-%ampm%</p>

<p>rem USER_NAME, USER_PASSWORD dan NAMA_DATABASE menyesuaikan
mysqldump -uroot -prahasia &ndash;routines Chinook > %FILE_BACKUP%.sql
{% endcodeblock %}</p>

<p>Setelah itu kode di atas kita simpan di folder <code>Instalasi MySQL\bin</code>, misal dengan nama <code>backup.cmd</code>.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-02.png">https://coding4ever.files.wordpress.com/2015/04/300415-02.png</a> %}</p>

<h3>Windows Task Scheduler</h3>

<p>Agar file <code>backup.cmd</code> ini bisa dijalankan secara berulang-ulang dan otomatis, kita bisa memanfaatkan tool yang sudah tersedia di Windows yaitu <code>Windows Task Scheduler</code>.</p>

<p>Untuk mengakses tool ini bisa dilakukan melalui menu Start -> Accessories -> System Tools -> Task Scheduler</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-03.png">https://coding4ever.files.wordpress.com/2015/04/300415-03.png</a> %}</p>

<p>Berikut langkah-langkah untuk menambahkan task baru.</p>

<ol>
<li><p>Klik <code>Create Basic Task</code> di panel Actions
{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-04.png">https://coding4ever.files.wordpress.com/2015/04/300415-04.png</a> %}
Kemudian isikan informasi <code>Name</code> dan <code>Description</code> kemudian klik tombol Next</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-05.png">https://coding4ever.files.wordpress.com/2015/04/300415-05.png</a> %}</p></li>
<li><p>Di dialog berikutnya kita akan menentukan kapan task ini akan di eksekusi. Contoh jika task ini akan dieksekusi setiap hari kita pilih <code>Daily</code>.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-06.png">https://coding4ever.files.wordpress.com/2015/04/300415-06.png</a> %}</p></li>
<li><p>Berikutnya kita akan menentukan jam berapa task ini akan dieksekusi</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-07.png">https://coding4ever.files.wordpress.com/2015/04/300415-07.png</a> %}
Pada gambar di atas, task ini akan dieksekusi setiap jam 5 sore.</p></li>
<li><p>Berikutnya kita akan menentukan apa yang akan dilakukan task ini, ketika dieksekusi. Sebagai contoh task ini akan menjalankan file <code>backup.cmd</code> yang tersimpan di folder bin MySQL</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-08.png">https://coding4ever.files.wordpress.com/2015/04/300415-08.png</a> %}
{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-09.png">https://coding4ever.files.wordpress.com/2015/04/300415-09.png</a> %}
Di bagian <code>Program/script</code> kita tentukan nama file <code>backup.cmd</code>, sedangkan untuk <code>Start in</code> kita tentukan lokasi/folder file <code>backup.cmd</code></p></li>
<li>Terakhir klik tombol Finish</li>
</ol>


<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-10.png">https://coding4ever.files.wordpress.com/2015/04/300415-10.png</a> %}</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-11.png">https://coding4ever.files.wordpress.com/2015/04/300415-11.png</a> %}</p>

<p>Untuk mencoba apakah backup berjalan dengan baik, klik kanan nama task <code>Backup Database Chinook</code> -> Run</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-12.png">https://coding4ever.files.wordpress.com/2015/04/300415-12.png</a> %}</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-13.png">https://coding4ever.files.wordpress.com/2015/04/300415-13.png</a> %}</p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mengakses Database MySQL Menggunakan C# Bagian 2]]></title>
    <link href="http://coding4ever.net/blog/2011/06/26/mengakses-database-mysql-menggunakan-c-bagian-2/"/>
    <updated>2011-06-26T11:04:42+07:00</updated>
    <id>http://coding4ever.net/blog/2011/06/26/mengakses-database-mysql-menggunakan-c-bagian-2</id>
    <content type="html"><![CDATA[<p>Seperti yang sudah saya janjikan pada <a href="{{%20site.url%20}}/blog/2011/06/25/mengakses-database-mysql-menggunakan-c-bagian-1/">postingan</a> sebelumnya, kali ini kita akan membahas bagaimana cara memanfaatkan class Mahasiswa dan MahasiswaDao pada Presentation layer</p>

<p>Sudah merupakan rahasia umum :D untuk melakukan koneksi ke database MySQL kita membutuhkan string koneksi berikut :</p>

<p>{% codeblock %}
SERVER=nama_server;DATABASE=nama_database;UID=user_database;PASSWORD=user_password
{% endcodeblock %}</p>

<!-- more -->


<p>Terlihat dengan jelas ada beberapa informasi yang tentunya tidak ingin kita hardcode di program, kita ambil contoh informasi <strong>nama_server</strong> dan <strong>nama_database</strong>.</p>

<p>Kalo dulu mungkin kita biasanya meyimpan informasi tersebut di registry windows atau file dengan format <a href="{{%20site.url%20}}/blog/2010/04/23/contoh-sederhana-memanipulasi-ini-file-untuk-menyimpan-informasi/">INI</a>, tapi kali ini kita akan memanfaatkan file XML yang sudah disediakan .NET</p>

<p>Bagaimana cara menambahkan file XML tersebut ikuti langkah-langkah berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-1.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-1.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-2.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-2.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-3.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-3.png?w=300" alt="" /></a></p>

<p>kemudian kita lengkapi kodenya seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-4.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-4.png?w=300" alt="" /></a></p>

<p>gampang bukan ??? :)</p>

<p>Cara mengakses informasi pada file XML tersebut akan kita bahas pada saat pembuat class DBConnection.</p>

<p>Class DBConnection dari namanya kita sudah ngerti kalo class ini tugasnya untuk melakukan koneksi ke database dalam hal ini database MySQL.</p>

<p>Oke langsung saja kita tambahkan class baru.</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-5.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-5.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-6.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-6.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-7.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-7.png?w=300" alt="" /></a></p>

<p>Namespace (package kalo istilah javanya) <strong>MySql.Data.MySqlClient</strong> kita butuhkan untuk bisa menggunakan class-class akses database MySQL.</p>

<p>Sedangkan namespace <strong>System.Configuration</strong> dibutuhkan agar kita bisa menggunakan classÂ ConfigurationSettings untuk mengakses file XML yang sudah kita buat pada langkah-langkah sebelumnya.</p>

<p>Berikut adalah kode lengkap class DBConnectionnya :</p>

<p>{% codeblock lang:c# %}
using MySql.Data.MySqlClient;
using System.Configuration;</p>

<p>namespace DemoDAO
{
    public class DBConnection
    {</p>

<pre><code>    private MySqlConnection conn = null;
    private static DBConnection dbConn = null;

    // constructor
    private DBConnection()
    {
        if (conn == null)
        {
            // cara membaca informasi yang ada pada file XML (App.config)
            string server = ConfigurationSettings.AppSettings["Server"];
            string database = ConfigurationSettings.AppSettings["Database"];

            string user = "root";
            string password = "rahasia";

            string strConn = "SERVER=" + server + ";DATABASE=" + database + ";UID=" + user + ";PASSWORD=" + password;

            conn = new MySqlConnection(strConn);
            conn.Open();
        }
    }

    public static DBConnection GetInstance()
    {
        if (dbConn == null) { dbConn = new DBConnection(); }

        return dbConn;
    }

    public MySqlConnection GetConnection()
    {
        return this.conn;
    }
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Sampai disini semua persiapan sudah oke, saatnya kita melengkapi kode program untuk Presentation layer dan untuk merefresh ingatan kita saya tampilkan kembali form mahasiswa yang sudah kita rancang pada <a href="{{%20site.url%20}}/blog/2011/06/25/mengakses-database-mysql-menggunakan-c-bagian-1/">postingan</a> sebelumnya.</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-31.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-31.png?w=300" alt="" /></a></p>

<p>Aktifkan terlebih dulu FrmMahasiswanya kemudian masuk kebagian editor codenya setelah itu tambahkan kode berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-8.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-8.png?w=300" alt="" /></a></p>

<p>Namespace DemoDAO.Model danÂ DemoDAO.Dao dibutuhkan agar bisa mengakses class Mahasiswa dan MahasiswaDao.</p>

<p><strong>1. Menyimpan Data</strong></p>

<p>{% codeblock lang:c# %}
private void btnSimpan_Click(object sender, EventArgs e)
{
    // buat objek mhs
    Mahasiswa mhs = new Mahasiswa();</p>

<pre><code>// isi nilai masing-masing property
mhs.NomorMahasiswa = txtNomorMahasiswa.Text;
mhs.Nama = txtNama.Text;
mhs.Alamat = txtAlamat.Text;

result = mhsDao.Save(mhs); // panggil method Save
if (result &gt; 0)
{
    MsgInfo("Data sudah disimpan");
    KosongkanInputan();

    txtNomorMahasiswa.Focus();
}
else
{
    MsgInfo("Data gagal disimpan");
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p><strong>2. Mengupdate Data</strong></p>

<p>{% codeblock lang:c# %}
private void btnPerbaiki_Click(object sender, EventArgs e)
{
    // buat objek mhs
    Mahasiswa mhs = new Mahasiswa();</p>

<pre><code>// isi nilai masing-masing property
mhs.NomorMahasiswa = txtNomorMahasiswa.Text;
mhs.Nama = txtNama.Text;
mhs.Alamat = txtAlamat.Text;

result = mhsDao.Update(mhs); // panggil method Update
if (result &gt; 0)
{
    MsgInfo("Data sudah disimpan");
    KosongkanInputan();

    txtNomorMahasiswa.Focus();
}
else
{
    MsgInfo("Data gagal disimpan");
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p><strong>3. Menghapus Data</strong></p>

<p>{% codeblock lang:c# %}
private void btnHapus_Click(object sender, EventArgs e)
{
    result = mhsDao.Delete(txtNomorMahasiswa.Text); // panggil method Delete
    if (result > 0)
    {
        MsgInfo(&ldquo;Data sudah dihapus&rdquo;);
        KosongkanInputan();</p>

<pre><code>    txtNomorMahasiswa.Focus();
}
else
{
    MsgInfo("Data gagal dihapus");
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p><strong>4. Menampilkan data</strong></p>

<p>Untuk menampilkan data kita membutuhkan 2 methode yaitu <strong>FillToListView</strong> untuk menambahkan objek mahasiswa ke ListView dan <strong>LoadDataMahasiswa</strong> untuk mengambil data mahasiswa dari database dan menyimpannya ke objek mahasiswa.</p>

<p>Karena data mahasiswa yang ditampilkan bisa lebih dari satu disini kita bisa menggunakan class List untuk menampung objeknya.</p>

<p>{% codeblock lang:c# %}
private void FillToListView(Mahasiswa mhs)
{</p>

<pre><code>int noUrut = lvwMahasiswa.Items.Count + 1;

ListViewItem item = new ListViewItem(noUrut.ToString());

item.SubItems.Add(mhs.NomorMahasiswa);
item.SubItems.Add(mhs.Nama);
item.SubItems.Add(mhs.Alamat);

lvwMahasiswa.Items.Add(item);
</code></pre>

<p>}</p>

<p>private void LoadDataMahasiswa()
{
    lvwMahasiswa.Items.Clear();</p>

<pre><code>List&lt;Mahasiswa&gt; daftarMhs = mhsDao.GetAll();
foreach (Mahasiswa mhs in daftarMhs)
{
    FillToListView(mhs); // panggil method FillToListView
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Setelah itu tinggal panggil method LoadDataMahasiswa di constructorÂ FrmMahasiswa</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-9.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-9.png?w=300" alt="" /></a></p>

<p><strong>5. Pencarian Data Berdasarkan Nama</strong></p>

<p>Untuk pencarian data kita tinggal mengoverload methodÂ  LoadDataMahasiswa dimana kita menambahkan parameter nama dengan tipe string, selain itu method MahasiswaDao yang kita panggil adalah GetByName</p>

<p>{% codeblock lang:c# %}
private void LoadDataMahasiswa(string nama)
{
    lvwMahasiswa.Items.Clear();</p>

<pre><code>List&lt;Mahasiswa&gt; daftarMhs = mhsDao.GetByName(nama);
foreach (Mahasiswa mhs in daftarMhs)
{
    FillToListView(mhs);
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Selanjutnya tinggal dipanggil di eventÂ btnCari_Click</p>

<p>{% codeblock lang:c# %}
private void btnCari_Click(object sender, EventArgs e)
{
    LoadDataMahasiswa(txtKeywordPencarian.Text);
}
{% endcodeblock %}</p>

<p>Sebagai bonus :) saya akan tambahkan satu lagi method untuk pencarian data berdasarkan nomor mahasiswa, untuk melakukan ini kita akan menambahkan method <strong>GetByNoMahasiswa</strong>, adapun kodenya sebgai berikut :</p>

<p>{% codeblock lang:c# %}
public Mahasiswa GetByNoMahasiswa(string nomorMahasiswa)
{
    Mahasiswa mhs = null;</p>

<pre><code>strSql = "SELECT nomor_mahasiswa, nama, alamat FROM mahasiswa " +
         "WHERE nomor_mahasiswa = @1";

using (MySqlCommand cmd = new MySqlCommand(strSql, conn))
{
    cmd.Parameters.AddWithValue("@1", nomorMahasiswa);

    using (MySqlDataReader dtr = cmd.ExecuteReader())
    {
        if (dtr.Read())
        {
            mhs = MappingRowToObject(dtr);
        }
    }
}

return mhs;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Method tersebut ditambahkan di class MahasiswaDao, selain itu kita juga menambahkan satu button lagi di FrmMahasiswa untuk memanggil method tersebut.</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/26062011-10.png"><img src="http://coding4ever.files.wordpress.com/2011/06/26062011-10.png?w=300" alt="" /></a></p>

<p>{% codeblock lang:c# %}
private void btnCariByNoMhs_Click(object sender, EventArgs e)
{
    Mahasiswa mhs = mhsDao.GetByNoMahasiswa(txtNomorMahasiswa.Text);
    if (mhs != null)
    {
        txtNomorMahasiswa.Text = mhs.NomorMahasiswa;
        txtNama.Text = mhs.Nama;
        txtAlamat.Text = mhs.Alamat;</p>

<pre><code>    MsgInfo("Data mahasiswa ditemukan");
}
else
{
    MsgInfo("Nomor mahasiswa tidak ditemukan");
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Akhirnya selesai juga, tapi mungkin saya butuh satu postingan lagi untuk menutup artikel berseri ini, insya Allah :).</p>

<p>Selamat <a href="http://www.4shared.com/file/MSyZd_nN/DemoDAO2.html">MENCOBA</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mengakses Database MySQL Menggunakan C# Bagian 1]]></title>
    <link href="http://coding4ever.net/blog/2011/06/25/mengakses-database-mysql-menggunakan-c-bagian-1/"/>
    <updated>2011-06-25T20:28:26+07:00</updated>
    <id>http://coding4ever.net/blog/2011/06/25/mengakses-database-mysql-menggunakan-c-bagian-1</id>
    <content type="html"><![CDATA[<p>Berhubung sudah mulai bosan bermain-main dengan Visual Basic 6 dan Visual Basic .NET kali ini kita akan menggunakan C# untuk mencoba membuat aplikasi sederhana mengakses database.</p>

<p>Database yang akan kita gunakan adalah MySQL versi 5.x dan untuk C# nya saya menggunakan versi .NET 2008.</p>

<p>Untuk menyederhanan postingan kali ini saya cukupkan dulu untuk mengakses 1 tabel yaitu tabel mahasiswa.</p>

<p>Adapun struktur tabelnya seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-0.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-0.png" alt="" /></a><!-- more --></p>

<p>Untuk akses database kali ini kita akan menggunakan konsep <a href="http://en.wikipedia.org/wiki/Data_access_object">DAO</a>, walaupun enggak 100% :D, dimana kita akan memisahkan modul program menjadi beberapa layer/lapisan yaitu :</p>

<ol>
<li><p> Presentation</p></li>
<li><p> Business Logic</p></li>
<li><p> Data Access</p></li>
</ol>


<p>Kok mirip <a href="http://en.wikipedia.org/wiki/Multitier_architecture">3-Tier Architecture</a> ya? :D</p>

<p>Untuk presentation layer berhubungan dengan UI (user interface) dalam artikel ini kita akan menggunakan Windows Form.</p>

<p>Business Logic biasanya berhubungannya dengan entity class dan entity class sendiri merupakan representasi tabel-tabel yang ada di database.</p>

<p>Terakhir Data Access yaitu bagian yang menangani urusan akses database.</p>

<p><strong>1. Memulai project baru</strong></p>

<p>Jalankan Visual Studio .NET kemudian aktifkan menu File -> New -> Project &hellip;</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-1.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-1.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-2.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-2.png?w=300" alt="" /></a></p>

<p><strong>2. Membuat Presentation Layer</strong></p>

<p>Presentation layer berhubungan dengan user interface atau tampilan, dan untuk tampilannya kita akan desain seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-31.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-31.png?w=300" alt="" /></a></p>

<p><strong>3. Membuat Business Logic</strong></p>

<p>Business Logic ada hubungannya dengan entity class yang merupakan representasi dari tabel-tabel yang ada didatabase.</p>

<p>Berdasarkan struktur tabel diatas kita akan menambahkan class baru dengan nama Mahasiswa yang memiliki tiga property yaitu NomorMahasiswa, Nama dan Alamat.</p>

<p>Jadi property ini sudah mewakili method mutator dan accessor yang sudah biasa kita kenal penggunakannya di Java.</p>

<p>Sebelum kita menambahkan class Mahasiswa kita tambahkan dulu folder untuk mengelompok ke tiga layer diatas, caranya dengan mengklik kan project -> Add -> New Folder</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-4.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-4.png?w=300" alt="" /></a></p>

<p>kita akan menambahkan 3 folder yaitu Dao, Model dan View</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-5.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-5.png?w=300" alt="" /></a></p>

<p>jika sudah kita klik kanan folder Model -> Add -> Class &hellip;</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-6.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-6.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-7.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-7.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-8.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-8.png?w=300" alt="" /></a></p>

<p>pada gambar diatas tambahkan access modifier public agar class Mahasiswa bisa digunakan antar namespace (package kalo istilah javanya).</p>

<p>Oke sampai disini kita tinggal melengkapi kode untuk class Mahasiswa diatas, kode lengkapnya sebagai berikut :</p>

<p>{% codeblock lang:c# %}
namespace DemoDAO.Model
{
    public class Mahasiswa
    {
        private string nomorMahasiswa;
        public string NomorMahasiswa
        {
            get { return nomorMahasiswa; }
            set { nomorMahasiswa = value; }
        }</p>

<pre><code>    private string nama;
    public string Nama
    {
        get { return nama; }
        set { nama = value; }
    }

    private string alamat;
    public string Alamat
    {
        get { return alamat; }
        set { alamat = value; }
    }
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p><strong>4. Membuat Data Access</strong></p>

<p>Lapisan ini biasanya berisi operasi CRUD (Create, Read, Update, Delete), tapi kita akan menggunakan istilah yang sedikit berbeda untuk nama operasinya yaitu :</p>

<ol>
<li><p> Save</p></li>
<li><p> Update</p></li>
<li><p> Delete</p></li>
<li><p> GetAll</p></li>
<li><p> GetByName</p></li>
</ol>


<p>Biasanya untuk penamaan classnya cukup menambahkan Akhiran (Suffixes) Dao untuk setiap class entitynya.</p>

<p>Contoh untuk class entity Mahasiswa, biasanya class Data Accessnya diberi nama MahasiswaDao.</p>

<p>Oke langsung aja kita klik kanan folder Dao -> Add -> Class &hellip;</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-9.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-9.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-10.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-10.png?w=300" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-11.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-11.png?w=300" alt="" /></a></p>

<p>jangan lupa tambahkan juga keyword public pada class MahasiswaDaonya.</p>

<p>jadi hasil akhir sementar project kita seperti berikut :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-12.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-12.png" alt="" /></a></p>

<p>Untuk mengakses database MySQL kita membutuhkan library MySql Connection yang bisa didownload di<a href="http://dev.mysql.com/downloads/connector/net/6.2.html">sini</a>.</p>

<p>Untuk tutorial kali ini saya menggunakan versi <a href="http://dev.mysql.com/downloads/connector/net/6.2.html">MySQL Connector/Net 6.2.4</a></p>

<p>Silahkan download library tersebut kemudian lakukan instalasi.</p>

<p>Adapun langkah-langkah untuk menambahkan library tersebut kedalam project adalah sebagi berikut :</p>

<p><strong>Klik kanan References -> Add References &hellip;</strong></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-13.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-13.png" alt="" /></a></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-14.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-14.png?w=300" alt="" /></a></p>

<p>Selanjutnya kita tinggal melengkapi class MahasiswaDaonya.</p>

<p><strong>1. Menambahkan namespace MySql.Data.MySqlClient dan DemoDAO.Model</strong></p>

<p><a href="http://coding4ever.files.wordpress.com/2011/06/25062011-15.png"><img src="http://coding4ever.files.wordpress.com/2011/06/25062011-15.png?w=300" alt="" /></a></p>

<p>namespace MySql.Data.MySqlClient dibutuhkan agar bisa menggunakan class-class untuk mengakses database MySQL sedangkan namespaceÂ DemoDAO.Model agar bisa mengakses class Mahasiswa dari class MahasiswaDao.</p>

<p><strong>2. Menambah beberapa variabel pendukung seperti conn, strSql dan sebuah constructor</strong></p>

<p>{% codeblock lang:c# %}
private MySqlConnection conn;
private string strSql = string.Empty;</p>

<p>// constructor
public MahasiswaDao(MySqlConnection conn)
{
    this.conn = conn;
}
{% endcodeblock %}</p>

<p><strong>3. Menambahkan method Save, Update dan Delete</strong></p>

<p>{% codeblock lang:c# %}
public int Save(Mahasiswa mhs)
{
    strSql = &ldquo;INSERT INTO mahasiswa (nomor_mahasiswa, nama, alamat) VALUES (@1, @2, @3)&rdquo;;</p>

<pre><code>using (MySqlCommand cmd = new MySqlCommand(strSql, conn))
{
    cmd.Parameters.AddWithValue("@1", mhs.NomorMahasiswa);
    cmd.Parameters.AddWithValue("@2", mhs.Nama);
    cmd.Parameters.AddWithValue("@3", mhs.Alamat);

    return cmd.ExecuteNonQuery();
}
</code></pre>

<p>}</p>

<p>public int Update(Mahasiswa mhs)
{
    strSql = &ldquo;UPDATE mahasiswa SET nama = @1, alamat = @2 WHERE nomor_mahasiswa = @3&rdquo;;</p>

<pre><code>using (MySqlCommand cmd = new MySqlCommand(strSql, conn))
{
    cmd.Parameters.AddWithValue("@1", mhs.Nama);
    cmd.Parameters.AddWithValue("@2", mhs.Alamat);
    cmd.Parameters.AddWithValue("@3", mhs.NomorMahasiswa);

    return cmd.ExecuteNonQuery();
}
</code></pre>

<p>}</p>

<p>public int Delete(string nomorMahasiswa)
{
    strSql = &ldquo;DELETE FROM mahasiswa WHERE nomor_mahasiswa = @1&rdquo;;</p>

<pre><code>using (MySqlCommand cmd = new MySqlCommand(strSql, conn))
{
    cmd.Parameters.AddWithValue("@1", nomorMahasiswa);

    return cmd.ExecuteNonQuery();
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p><strong>4. Menambahkan method GetAll dan GetByName</strong></p>

<p>{% codeblock lang:c# %}
private Mahasiswa MappingRowToObject(MySqlDataReader dtr)
{
    Mahasiswa mhs = new Mahasiswa();</p>

<pre><code>mhs.NomorMahasiswa = dtr["nomor_mahasiswa"] is DBNull ? string.Empty : dtr["nomor_mahasiswa"].ToString();
mhs.Nama = dtr["nama"] is DBNull ? string.Empty : dtr["nama"].ToString();
mhs.Alamat = dtr["alamat"] is DBNull ? string.Empty : dtr["alamat"].ToString();

return mhs;
</code></pre>

<p>}</p>

<p>public List<Mahasiswa> GetAll()
{
    List<Mahasiswa> daftarMhs = new List<Mahasiswa>();</p>

<pre><code>strSql = "SELECT nomor_mahasiswa, nama, alamat FROM mahasiswa " +
         "ORDER BY nama";

using (MySqlCommand cmd = new MySqlCommand(strSql, conn))
{
    using (MySqlDataReader dtr = cmd.ExecuteReader())
    {
        while (dtr.Read())
        {
            daftarMhs.Add(MappingRowToObject(dtr));
        }
    }
}

return daftarMhs;
</code></pre>

<p>}</p>

<p>public List<Mahasiswa> GetByName(string nama)
{
    List<Mahasiswa> daftarMhs = new List<Mahasiswa>();</p>

<pre><code>strSql = "SELECT nomor_mahasiswa, nama, alamat FROM mahasiswa " +
         "WHERE nama LIKE @1 " +
         "ORDER BY nama";

using (MySqlCommand cmd = new MySqlCommand(strSql, conn))
{
    cmd.Parameters.AddWithValue("@1", "%" + nama + "%");

    using (MySqlDataReader dtr = cmd.ExecuteReader())
    {
        while (dtr.Read())
        {
            daftarMhs.Add(MappingRowToObject(dtr));
        }
    }
}

return daftarMhs;
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Selesai sudah pembuatan class MahasiswaDaonya sekarang tinggal bagaimana cara menggunakan class Mahasiswa dan MahasiswaDao pada Presentation layer, tapi &hellip; akan saya bahas pada <a href="{{%20site.url%20}}/blog/2011/06/26/mengakses-database-mysql-menggunakan-c-bagian-2/">postingan</a> berikutnya :D insya Allah.</p>

<p>Selamat <a href="http://www.4shared.com/file/6vack9Yi/DemoDAO.html">MENCOBA</a> :)</p>

<p>Referensi : <a href="http://netindonesia.net/">Geeks Portal .NET Indonesia</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backup Dan Restore Database MySQL Dari Aplikasi]]></title>
    <link href="http://coding4ever.net/blog/2011/03/20/backup-dan-restore-database-mysql-dari-aplikasi/"/>
    <updated>2011-03-20T13:19:18+07:00</updated>
    <id>http://coding4ever.net/blog/2011/03/20/backup-dan-restore-database-mysql-dari-aplikasi</id>
    <content type="html"><![CDATA[<p>Artikel kali ini hanya posting ulang dari jawaban saya yang ada di artikel <a href="https://coding4ever.wordpress.com/2010/01/16/membuat-paket-instalasi-vb-mysql-dengan-nsis/">Membuat paket instalasi vb + mysql dengan NSIS</a>, karena masih ada beberapa pengunjung yang bertanya tentang masalah ini.</p>

<p>Untuk proses backup kita cukup menggunakan tool bawaan MySQL yaitu <strong>mysqldump</strong> dan untuk restorenya menggunakan <strong>mysql</strong>.</p>

<p>Adapun perintah dasar untuk melakukan backup dan restore adalah sebagai berikut :</p>

<p>{% codeblock %}
&lsquo; backup
mysqldump -uUSER_NAME -pUSER_PASSWORD &ndash;routines NAMA_DATABASE > LOKASI_FILE_BACKUP.SQL</p>

<p>&lsquo; restore
mysql -uUSER_NAME -pUSER_PASSWORD NAMA_DATABASE &lt; LOKASI_FILE_BACKUP.SQL
{% endcodeblock %}</p>

<!-- more -->


<p>parameter &ndash;routines ditambahkan jika database mempunyai fungsi/trigger</p>

<p>Sekarang tinggal kita siapkan kode berikut :</p>

<p>{% codeblock %}
Private Declare Function OpenProcess Lib &ldquo;kernel32&rdquo; (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As Long, ByVal dwProcessId As Long) As Long
Private Declare Function WaitForSingleObject Lib &ldquo;kernel32&rdquo; (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long
Private Declare Function CloseHandle Lib &ldquo;kernel32&rdquo; (ByVal hObject As Long) As Long</p>

<p>Private Const SYNCHRONIZE       As Long = &amp;H100000
Private Const INFINITE          As Long = &amp;HFFFF</p>

<p>Private Sub execCommand(ByVal cmd As String)
    Dim result  As Long
    Dim lPid    As Long
    Dim lHnd    As Long
    Dim lRet    As Long</p>

<pre><code>cmd = "cmd /c " &amp; cmd
result = Shell(cmd, vbHide)

lPid = result
If lPid &lt;&gt; 0 Then
    lHnd = OpenProcess(SYNCHRONIZE, 0, lPid)
    If lHnd &lt;&gt; 0 Then
        lRet = WaitForSingleObject(lHnd, INFINITE)
        CloseHandle (lHnd)
    End If
End If
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>kemudian tinggal panggil di masing-masing proses (backup dan restore)</p>

<p>{% codeblock %}
Dim cmd As String</p>

<p>Private Sub cmdBackup_Click()
    Screen.MousePointer = vbHourglass
    DoEvents</p>

<pre><code>cmd = Chr(34) &amp; "C:\Program Files\MySQL\MySQL Server 5.1\bin\mysqldump" &amp; Chr(34) &amp; " -uroot -prahasia --routines --comments nama_database &gt; c:\nama_database.sql"
Call execCommand(cmd)

Screen.MousePointer = vbDefault
MsgBox "done"
</code></pre>

<p>End Sub</p>

<p>Private Sub cmdRestore_Click()
    Screen.MousePointer = vbHourglass
    DoEvents</p>

<pre><code>cmd = Chr(34) &amp; "C:\Program Files\MySQL\MySQL Server 5.1\bin\mysql" &amp; Chr(34) &amp; " -uroot -prahasia --comments nama_database &lt; c:\nama_database.sql"
Call execCommand(cmd)

Screen.MousePointer = vbDefault
MsgBox "done"
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>kode diatas dengan asumsi direktori bin MySQL ada di folder &ldquo;C:\Program Files\MySQL\MySQL Server 5.1\bin&rdquo;.</p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Menyimpan Dan Menampilkan Gambar Di MySQL]]></title>
    <link href="http://coding4ever.net/blog/2011/03/15/menyimpan-dan-menampilkan-gambar-di-mysql/"/>
    <updated>2011-03-15T20:15:34+07:00</updated>
    <id>http://coding4ever.net/blog/2011/03/15/menyimpan-dan-menampilkan-gambar-di-mysql</id>
    <content type="html"><![CDATA[<p>Ternyata masih ada sebagian om2x :D yang masih kesulitan untuk melakukan hal ini, tapi oke lah berhubung udah lama enggax posting kayaxnya enggak salah juga membahas permasalahan yang satu ini.</p>

<p>Dengan asumsi MySQL dan Visual Basic .NET sudah terinstall dengan baik hal selanjutnya yang perlu disiapkan adalahÂ <a href="http://dev.mysql.com/downloads/connector/net/6.2.html#downloads">MySQL Connector/Net</a>, disini saya menggunakan versiÂ 6.2.4</p>

<p>Jadi silahkan download kemudian lakukan instalasi.</p>

<p>Selanjutnya kita akan menyiapkan sebuah tabel, misal dengan nama mahasiswa dengan struktur seperti berikut :</p>

<p>{% codeblock %}
CREATE TABLE mahasiswa (
    npm VARCHAR(10),
    nama VARCHAR(50),
    foto MEDIUMBLOB
)
{% endcodeblock %}</p>

<!-- more -->


<p>Gimana udah selesai ? Klo udah kita lanjutkan dengan membuat project baru kemudian tambahkan referensi MySql.Data (menu Project -> Add Reference&hellip;)</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/03/15032011-1.jpg"><img src="http://coding4ever.files.wordpress.com/2011/03/15032011-1.jpg?w=300" alt="" /></a></p>

<p>Apakah udah cukup ? Belum tambahkan juga namespace (package klo istilah javanya)Â MySql.Data pada bagian paling atas kode program</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/03/15032011-2.jpg"><img src="http://coding4ever.files.wordpress.com/2011/03/15032011-2.jpg?w=300" alt="" /></a></p>

<p>Perintah diatas berguna untuk menyingkat penulisan kode program contoh :</p>

<p>{% codeblock %}
Private conn As New MySql.Data.MySqlClient.MySqlConnection
{% endcodeblock %}</p>

<p>bisa disingkat menjadi</p>

<p>{% codeblock %}
Private conn As New MySqlClient.MySqlConnection
{% endcodeblock %}</p>

<p>Selanjutnya kita akan desain tampilan program seperti gambar dibawah ini</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/03/15032011-3.jpg"><img src="http://coding4ever.files.wordpress.com/2011/03/15032011-3.jpg?w=300" alt="" /></a></p>

<p>komponen yang yang dibutuhkan 1 buah PictureBox dan 2 buah Button.</p>

<p><strong>Melakukan koneksi</strong></p>

<p>Nah cara yang paling gampang kita tempatkan aja kodenya dibagian <a href="http://en.wikipedia.org/wiki/Constructor_(object-oriented_programming">constructor</a>)</p>

<p>{% codeblock %}
Private conn As New MySqlClient.MySqlConnection
Private strSql As String = String.Empty</p>

<p>Public Sub New()</p>

<pre><code>' This call is required by the Windows Form Designer.
InitializeComponent()

' Add any initialization after the InitializeComponent() call.

' kode untuk melakukan koneksi mulai dari sini
Dim strConn As String = "server=127.0.0.1;uid=root;pwd=rahasia;database=test"
conn.ConnectionString = strConn
conn.Open()
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p>Klo kelupaan lokasi constructornya dimana :D, caranya lihat gambar :</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/03/15032011-4.jpg"><img src="http://coding4ever.files.wordpress.com/2011/03/15032011-4.jpg?w=300" alt="" /></a></p>

<p><strong>Meyimpan gambar</strong></p>

<p>Kodenya sederhana banget, kita lihat cuplikannya</p>

<p>{% codeblock %}
Private Sub btnSimpan_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSimpan.Click
    &lsquo; untuk contoh disini lokasi gambarnya saya hardcode
    &rsquo; kita bisa kembangkan dengan memanfaatkan komponen OpenFileDialog
    Dim fileName As String = &ldquo;E:\Gambar\k4m4r82.jpg&rdquo;</p>

<pre><code>strSql = "INSERT INTO mahasiswa (npm, nama, foto) VALUES (@1, @2, @3)" ' ini perintah insert biasa
Using cmd As New MySqlClient.MySqlCommand(strSql, conn)
    With cmd
        .Parameters.Clear()
        .Parameters.AddWithValue("@1", "02.02.4114") ' npm
        .Parameters.AddWithValue("@2", "Kamarudin") ' nama
        .Parameters.AddWithValue("@3", IO.File.ReadAllBytes(fileName)) ' foto

        .ExecuteNonQuery()
    End With
End Using

MessageBox.Show("Data sudah disimpan", "Informasi", MessageBoxButtons.OK, MessageBoxIcon.Information)
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p><strong>Menampilkan gambar</strong></p>

<p>{% codeblock %}
Private Sub btnTampil_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnTampil.Click
    strSql = &ldquo;SELECT foto FROM mhs WHERE npm = @1&rdquo;</p>

<pre><code>Using cmd As New MySqlClient.MySqlCommand(strSql, conn)
    With cmd
        .Parameters.Clear()
        .Parameters.AddWithValue("@1", "02.02.4114") ' npm

        Using dtr As MySqlClient.MySqlDataReader = .ExecuteReader()
            If dtr.HasRows Then
                If dtr.Read() Then
                    Dim ms As New IO.MemoryStream(CType(dtr.Item("foto"), Byte()))
                    PictureBox1.Image = Image.FromStream(ms) ' tampilkan gambarnya
                End If
            End If
        End Using
    End With
End Using
</code></pre>

<p>End Sub
{% endcodeblock %}</p>

<p><a href="http://coding4ever.files.wordpress.com/2011/03/15032011-5.jpg"><img src="http://coding4ever.files.wordpress.com/2011/03/15032011-5.jpg?w=300" alt="" /></a></p>

<p>Selamat mencoba :)</p>
]]></content>
  </entry>
  
</feed>
