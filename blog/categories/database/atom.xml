<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Database | Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/blog/categories/database/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2016-02-15T07:42:23+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Online Backup Database]]></title>
    <link href="http://coding4ever.net/blog/2016/01/06/online-backup-database/"/>
    <updated>2016-01-06T14:42:52+07:00</updated>
    <id>http://coding4ever.net/blog/2016/01/06/online-backup-database</id>
    <content type="html"><![CDATA[<p>{% img left <a href="https://coding4ever.files.wordpress.com/2016/01/google-drive.png">https://coding4ever.files.wordpress.com/2016/01/google-drive.png</a> 100 100 %}<a href="{{%20site.url%20}}/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/">Backup database lokal</a> saja ternyata tidak cukup, paling tidak itu yang saya rasakan ketika salah satu klien saya hardisk servernya <code>tewas</code> :-D. Padahal dulu itu saya sudah menyarankan untuk menggunakan UPS, tapi katanya &ldquo;<em>kalo pake UPS, fitur  powerON di biosnya jadi gak jalan&hellip;</em>&rdquo; dan saya maklum karena servernya memang ON 24 jam dan memang tidak ada petugas khusus yang mengONkan servernya kalo pas lagi OFF.
Jadi kita memang dituntut untuk memberikan solusi untuk masalah ini, terutama solusi yang murah meriah he he :-D</p>

<!-- more -->


<p>Salah satu solusinya adalah dengan memanfaatkan media penyimpanan online yang memang sudah terbukti handal dan gratis yaitu <code>Google Drive</code>. Dengan <code>Google Drive</code> limit ukuran file yang bisa diupload adalah maksimal 5GB.</p>

<p>Kita langsung saja berikut adalah langkah-langkah untuk mengakses layanan/API dari <code>Google Drive</code> atau layanan Google lainnya.</p>

<h5>1. Membuat Client id</h5>

<p>Untuk membuat client id, kita bisa langsung mengakses link <a href="https://console.developers.google.com/">Google Developer Console</a> kemudian login menggunakan email google Anda</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-19.png">https://coding4ever.files.wordpress.com/2016/01/060116-19.png</a> %}</p>

<h5>2. Membuat project</h5>

<p>Klik menu Select a project -> Create a projectâ€¦</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-01.png">https://coding4ever.files.wordpress.com/2016/01/060116-01.png</a> %}</p>

<p>Kemudian isikan nama project, misal <code>OnlineBackup</code></p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-02.png">https://coding4ever.files.wordpress.com/2016/01/060116-02.png</a> %}</p>

<h5>3. Mengaktifkan Google API</h5>

<p>Dari menu dashboard klik link <code>Use Google APIs</code></p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-03.png">https://coding4ever.files.wordpress.com/2016/01/060116-03.png</a> %}</p>

<p>Secara default google sudah mengaktifkan beberapa API yang bisa kita akses dari aplikasi</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-04.png">https://coding4ever.files.wordpress.com/2016/01/060116-04.png</a> %}</p>

<p>Dari daftar api di atas kita belum menemukan API untuk mengakses google drive, sehingga API ini harus kita aktifkan secara manual dengan mengklik link <code>Google APIs</code> kemudian di kotak pencarian ketik <code>Drive API</code></p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-05.png">https://coding4ever.files.wordpress.com/2016/01/060116-05.png</a> %}</p>

<p>Selanjutnya klik link <code>Drive API</code> kemudian pilih <code>Enable API</code></p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-06.png">https://coding4ever.files.wordpress.com/2016/01/060116-06.png</a> %}</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-07.png">https://coding4ever.files.wordpress.com/2016/01/060116-07.png</a> %}</p>

<h5>4. Membuat Credential</h5>

<p>Sebelum layanan/API <code>Google Drive</code> ini bisa kita akses, kita harus membuat <code>Credential</code> terlebih dulu sebagai otorisasi bahwa kita adalah memang orang yang berhak untuk mengakses layanan ini.</p>

<p>Untuk membuat <code>Credential</code> klik menu <code>Credentials</code> kemudian pilih <code>OAuth client ID</code></p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-08.png">https://coding4ever.files.wordpress.com/2016/01/060116-08.png</a> %}</p>

<p>Kemudian klik menu <code>Configure consent screen</code></p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-09.png">https://coding4ever.files.wordpress.com/2016/01/060116-09.png</a> %}</p>

<p>Isikan datanya sesuai kebutuhan</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-10.png">https://coding4ever.files.wordpress.com/2016/01/060116-10.png</a> %}</p>

<p>Selanjutnya kita akan menentukan jenis aplikasi yang akan mengakses API ini. Untuk contoh disini saya menggunakan aplikasi console.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-11.png">https://coding4ever.files.wordpress.com/2016/01/060116-11.png</a> %}</p>

<p>Jika berhasil kita akan mendapatkan informasi <code>client ID</code> dan <code>client secret</code>. Informasi ini akan kita gunakan untuk mengakses layanan/API google drive ataupun layanan lainnya.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-12.png">https://coding4ever.files.wordpress.com/2016/01/060116-12.png</a> %}</p>

<h5>5. Menyiapkan folder backup</h5>

<p>Langkah berikutnya adalah masuk ke <code>Google Drive</code> kemudian kita buat folder untuk backup database. Setelah membuat folder ini, kita perlu mengetahui informasi <code>folder id</code> dari folder backup ini. Untuk mendapatkan <code>folder id</code> bisa kita lihat dibagian address bar.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-13.png">https://coding4ever.files.wordpress.com/2016/01/060116-13.png</a> %}</p>

<p>Pada gambar di atas <code>folder id</code> dari folder <code>Backup Database</code> ini adalah : <code>0B5aEAoHOGHqkelgzM2cxVncxNGM</code>.</p>

<p>Simpan informasi ini karena akan digunakan untuk mengakses folder Backup Database ini via aplikasi.</p>

<h5>6. Membuat aplikasi client</h5>

<p>Untuk contoh di sini kita akan menggunakan <code>aplikasi console</code> untuk mendemokan proses upload file ke Google Drive. Artinya aplikasi ini akan dijalankan via batch command atau command prompt.</p>

<p>Aplikasi ini juga membutuhkan dua library pihak ketiga yaitu <a href="https://www.nuget.org/packages/Google.Apis.Drive.v2/">Google.Apis.Drive.v2</a> dan <a href="https://www.nuget.org/packages/DotNetZip/">DotNetZip</a> yang bisa diinstall via <a href="{{%20site.url%20}}/blog/categories/nuget/">NuGet</a>.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-14.png">https://coding4ever.files.wordpress.com/2016/01/060116-14.png</a> %}</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-15.png">https://coding4ever.files.wordpress.com/2016/01/060116-15.png</a> %}</p>

<p>File backup database yang akan kita upload adalah file backup yang sudah kita buatkan versi kompresnya, disini kita menggunakan library <a href="https://www.nuget.org/packages/DotNetZip/">DotNetZip</a>.
Contoh kodenya  seperti berikut :</p>

<p>{% codeblock lang:c# %}
private static void CreateZip(string pathFileBackup, string fileBackup, string extension)
{
    var fileToZip = string.Format(@&ldquo;{0}{1}.zip&rdquo;, pathFileBackup, fileBackup);
    fileBackup = string.Format(@&ldquo;{0}{1}.{2}&rdquo;, pathFileBackup, fileBackup, extension);</p>

<pre><code>using (var zip = new ZipFile())
{
    Console.WriteLine("\nAdding {0}...", fileBackup);
    ZipEntry e = zip.AddFile(fileBackup, "");

    zip.Save(fileToZip);
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Setelah berhasil membuat file zipnya, tinggal upload ke google drive. Berikut contoh kodenya :</p>

<p>{% codeblock lang:c# %}
private static void UploadToGoogleDrive(string pathFileBackup, string fileBackup)
{
    // TODO : disesuaikan dengan nilai clientId dan clientSecret Anda
    //        setting ini juga bisa disimpan di file App.config
    var clientId = &ldquo;505165741497-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com&rdquo;;
    var clientSecret = &ldquo;6Nxxxxxx-xxxxxxxxxxxxxxx&rdquo;;</p>

<pre><code>var service = GoogleDriveHelper.AuthenticateOauth(clientId, clientSecret, Environment.UserName);

if (service == null)
{
    Console.WriteLine("Authentication error");
    Console.ReadLine();
}            

try
{
    Console.WriteLine("Sedang proses upload ...");

    // TODO : disesuaikan dengan nilai folder id Anda
    //        setting ini juga bisa disimpan di file App.config
    var folderId = "0B5xxxxxxxxxxxxxxxxxxxxxxxxx";                

    // upload file
    var fileToUpload = string.Format("{0}\\{1}.zip", pathFileBackup, fileBackup);
    File newFile = GoogleDriveHelper.UploadFile(service, fileToUpload, folderId);

}
catch
{
    Console.WriteLine("\nUpload file gagal !");
}
finally
{
    // hapus file yang berhasil diupload
    var fileToDelete = string.Format("{0}\\{1}.zip", pathFileBackup, fileBackup);
    System.IO.File.Delete(fileToDelete);
}
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>Method <code>UploadToGoogleDrive</code> di atas membutuhkan class <a href="https://github.com/k4m4r82/DemoOnlineBackup/blob/master/src/DemoOnlineBackup/GoogleDriveHelper.cs">GoogleDriveHelper</a> yang bisa Anda cek di <a href="https://github.com/k4m4r82/DemoOnlineBackup/blob/master/src/DemoOnlineBackup/GoogleDriveHelper.cs">sini</a>.</p>

<p>Method <code>CreateZip</code> dan <code>UploadToGoogleDrive</code> di atas mempunyai parameter seperti berikut :
{% codeblock lang:c# %}
void CreateZip(string pathFileBackup, string fileBackup, string extension)
void UploadToGoogleDrive(string pathFileBackup, string fileBackup)
{% endcodeblock %}</p>

<p>Nilai masing-masing parameter di atas kita isi pada saat memanggil aplikasi via batch command atau command prompt. Contoh :</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-16.png">https://coding4ever.files.wordpress.com/2016/01/060116-16.png</a> %}</p>

<p>Dan untuk mendapatkan nilainya, kita bisa mengakses parameter <code>args</code> dari method Main.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-17.png">https://coding4ever.files.wordpress.com/2016/01/060116-17.png</a> %}</p>

<h5>7. Menjalankan aplikasi client via batch command</h5>

<p>Untuk menjalankan aplikasi di atas kita bisa menggunakan batch command. Untuk contoh kodenya menggunakan database MySQL :</p>

<p>{% codeblock %}
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set year=%%c
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set month=%%a
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set day=%%b</p>

<p>for /f &ldquo;tokens=1 delims=: &rdquo; %%h in (&lsquo;time /T&rsquo;) do set hour=%%h
for /f &ldquo;tokens=2 delims=: &rdquo; %%m in (&lsquo;time /T&rsquo;) do set minutes=%%m
for /f &ldquo;tokens=3 delims=: &rdquo; %%a in (&lsquo;time /T&rsquo;) do set ampm=%%a</p>

<p>rem membuat file backup database dengan format nama_database-tahun-bulan-hari_jam_menit
set FILE_BACKUP=pulsa-%year%-%month%-%day%_%hour%-%minutes%-%ampm%
set LOKASI_BACKUP=D:\BackupDatabase\backups
set FILE_EXTENSION=sql</p>

<p>rem set user dan password mysql
set USER_MYSQL=root
set PASS_MYSQL=rahasia</p>

<p>rem USER_NAME, USER_PASSWORD dan NAMA_DATABASE menyesuaikan
mysqldump -u%USER_MYSQL% -p%PASS_MYSQL% pulsa > %LOKASI_BACKUP%\%FILE_BACKUP%.%FILE_EXTENSION%</p>

<p>D:\BackupDatabase\DemoOnlineBackup.exe %LOKASI_BACKUP% %FILE_BACKUP% %FILE_EXTENSION%
{% endcodeblock %}</p>

<p>Kemudian kode di atas kita simpan dengan nama <code>backup.cmd</code> di folder <code>Instalasi MySQL\bin</code>.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-18.png">https://coding4ever.files.wordpress.com/2016/01/060116-18.png</a> %}</p>

<p>Agar proses backup ini bisa otomatis dan terjadwal kita bisa memanfaatkan <a href="{{%20site.url%20}}/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/">Windows Task Scheduler</a>.</p>

<p>Terakhir hasil tes kode di atas berhasil mengupload file ke Google Drive dengan lancar :-)</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2016/01/060116-20.png">https://coding4ever.files.wordpress.com/2016/01/060116-20.png</a> %}</p>

<p>Selamat <a href="https://github.com/k4m4r82/DemoOnlineBackup">MENCOBA</a> :-)</p>

<p>Referensi :</p>

<ul>
<li><a href="http://www.daimto.com/google-drive-api-c-upload/">Google Drive API with C# .net â€“ Upload, update, patch, delete,trash</a></li>
<li><a href="https://github.com/LindaLawton/Google-Dotnet-Samples">Google-Dotnet-Samples</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Jadwal Backup Database Otomatis]]></title>
    <link href="http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis/"/>
    <updated>2015-04-30T15:33:59+07:00</updated>
    <id>http://coding4ever.net/blog/2015/04/30/membuat-jadwal-backup-database-otomatis</id>
    <content type="html"><![CDATA[<p>{% img left <a href="https://coding4ever.files.wordpress.com/2015/04/300415-14.png">https://coding4ever.files.wordpress.com/2015/04/300415-14.png</a> 100 100 %}Backup database merupakan salah satu hal penting, apalagi jika kita bekerja sebagai database administrator.</p>

<p>Semakin banyaknya data-data yang tersimpan seperti data keuangan, akademik dan data penting lainnya mengharuskan kita untuk meluangkan waktu khusus untuk melakukan backup database.</p>

<p>Backup secara manual tentu saja tidak disarankan, apalagi jika datanya sudah banyak, tentu saja sedikit banyaknya akan menyita waktu kita untuk melakukan hal penting lainnya.</p>

<!-- more -->


<p>Salah satu keuntungan menggunakan backup otomatis adalah, kita bisa mengset jadwal backup diluar jam-jam kantor. Misal jam 5 sore, jam 12 malam atau jam lainnya sesuai dengan kebutuhan.</p>

<h3>Database MySQL</h3>

<p>Adapun database yang kita gunakan untuk simulasi backup otomatis ini adalah database MySQL. Untuk membackup database MySQL kita bisa gunakan tool bawaan MySQL yaitu <code>mysqldump</code>.</p>

<p>Adapun perintahnya seperti berikut :</p>

<p>{% codeblock %}
&lsquo; backup
mysqldump -uUSER_NAME -pUSER_PASSWORD &ndash;routines NAMA_DATABASE > LOKASI_FILE_BACKUP.SQL
{% endcodeblock %}</p>

<p>Parameter <code>â€“routines</code> ditambahkan jika database mempunyai fungsi/trigger.</p>

<p>Karena data backupnya yang disimpan lebih dari satu, untuk nama database akan kita buat unik dengan format : <code>nama_database-tahun-bulan-hari_jam_menit</code>. Contoh :</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-01.png">https://coding4ever.files.wordpress.com/2015/04/300415-01.png</a> %}</p>

<p>Untuk mendapatkan informasi tahun, bulan, hari dan jam, kita bisa memanfaatkan batch command dengan perintah seperti berikut :</p>

<p>{% codeblock %}
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set year=%%c
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set month=%%a
for /f &ldquo;tokens=2-4 delims=/ &rdquo; %%a in (&lsquo;date /T&rsquo;) do set day=%%b</p>

<p>for /f &ldquo;tokens=1 delims=: &rdquo; %%h in (&lsquo;time /T&rsquo;) do set hour=%%h
for /f &ldquo;tokens=2 delims=: &rdquo; %%m in (&lsquo;time /T&rsquo;) do set minutes=%%m
for /f &ldquo;tokens=3 delims=: &rdquo; %%a in (&lsquo;time /T&rsquo;) do set ampm=%%a</p>

<p>rem membuat file backup database dengan format nama_database-tahun-bulan-hari_jam_menit
set FILE_BACKUP=D:\backup\Chinook-%year%-%month%-%day%_%hour%-%minutes%-%ampm%</p>

<p>rem USER_NAME, USER_PASSWORD dan NAMA_DATABASE menyesuaikan
mysqldump -uroot -prahasia &ndash;routines Chinook > %FILE_BACKUP%.sql
{% endcodeblock %}</p>

<p>Setelah itu kode di atas kita simpan di folder <code>Instalasi MySQL\bin</code>, misal dengan nama <code>backup.cmd</code>.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-02.png">https://coding4ever.files.wordpress.com/2015/04/300415-02.png</a> %}</p>

<h3>Windows Task Scheduler</h3>

<p>Agar file <code>backup.cmd</code> ini bisa dijalankan secara berulang-ulang dan otomatis, kita bisa memanfaatkan tool yang sudah tersedia di Windows yaitu <code>Windows Task Scheduler</code>.</p>

<p>Untuk mengakses tool ini bisa dilakukan melalui menu Start -> Accessories -> System Tools -> Task Scheduler</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-03.png">https://coding4ever.files.wordpress.com/2015/04/300415-03.png</a> %}</p>

<p>Berikut langkah-langkah untuk menambahkan task baru.</p>

<ol>
<li><p>Klik <code>Create Basic Task</code> di panel Actions
{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-04.png">https://coding4ever.files.wordpress.com/2015/04/300415-04.png</a> %}
Kemudian isikan informasi <code>Name</code> dan <code>Description</code> kemudian klik tombol Next</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-05.png">https://coding4ever.files.wordpress.com/2015/04/300415-05.png</a> %}</p></li>
<li><p>Di dialog berikutnya kita akan menentukan kapan task ini akan di eksekusi. Contoh jika task ini akan dieksekusi setiap hari kita pilih <code>Daily</code>.</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-06.png">https://coding4ever.files.wordpress.com/2015/04/300415-06.png</a> %}</p></li>
<li><p>Berikutnya kita akan menentukan jam berapa task ini akan dieksekusi</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-07.png">https://coding4ever.files.wordpress.com/2015/04/300415-07.png</a> %}
Pada gambar di atas, task ini akan dieksekusi setiap jam 5 sore.</p></li>
<li><p>Berikutnya kita akan menentukan apa yang akan dilakukan task ini, ketika dieksekusi. Sebagai contoh task ini akan menjalankan file <code>backup.cmd</code> yang tersimpan di folder bin MySQL</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-08.png">https://coding4ever.files.wordpress.com/2015/04/300415-08.png</a> %}
{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-09.png">https://coding4ever.files.wordpress.com/2015/04/300415-09.png</a> %}
Di bagian <code>Program/script</code> kita tentukan nama file <code>backup.cmd</code>, sedangkan untuk <code>Start in</code> kita tentukan lokasi/folder file <code>backup.cmd</code></p></li>
<li>Terakhir klik tombol Finish</li>
</ol>


<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-10.png">https://coding4ever.files.wordpress.com/2015/04/300415-10.png</a> %}</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-11.png">https://coding4ever.files.wordpress.com/2015/04/300415-11.png</a> %}</p>

<p>Untuk mencoba apakah backup berjalan dengan baik, klik kanan nama task <code>Backup Database Chinook</code> -> Run</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-12.png">https://coding4ever.files.wordpress.com/2015/04/300415-12.png</a> %}</p>

<p>{% img center <a href="https://coding4ever.files.wordpress.com/2015/04/300415-13.png">https://coding4ever.files.wordpress.com/2015/04/300415-13.png</a> %}</p>

<p>Selamat MENCOBA :)</p>
]]></content>
  </entry>
  
</feed>
