<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Continuous Integration | Coding4ever's Blog]]></title>
  <link href="http://coding4ever.net/blog/categories/continuous-integration/atom.xml" rel="self"/>
  <link href="http://coding4ever.net/"/>
  <updated>2016-12-14T06:50:31+07:00</updated>
  <id>http://coding4ever.net/</id>
  <author>
    <name><![CDATA[Admin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Membangun Server CI (Continuous Integration) Di Windows Untuk Platform .NET Menggunakan Jenkins Bagian #4]]></title>
    <link href="http://coding4ever.net/blog/2016/12/14/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-4/"/>
    <updated>2016-12-14T06:44:25+07:00</updated>
    <id>http://coding4ever.net/blog/2016/12/14/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-4</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png">https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png</a>&#8221; width=&#8221;109&#8221; height=&#8221;106&#8221;>Masih membahas tentang  manfaat dari <a href="/blog/categories/continuous-integration/">Server CI (Continuous Integration)</a> untuk kemudahan dalam melakukan proses build dan deploy secara terpusat. Jika dipostingan <a href="/blog/categories/jenkins/">sebelumnya</a> saya menggunakan contoh <a href="https://github.com/k4m4r82/Northwind">aplikasi desktop</a> maka kali ini kita akan membahas proses build dan deploy untuk aplikasi berbasis web seperti ASP.NET, ASP.NET MVC dan <a href="https://github.com/k4m4r82/NorthwindWebApi">ASP.NET  WEB API</a>.</p>

<!-- more -->


<p>Untuk kemudahan proses deploy ke web server IIS, Microsoft sudah menyediakan tool khusus untuk melakukan ini yaitu <a href="https://www.iis.net/downloads/microsoft/web-deploy">Web Deploy</a>. Tool ini akan kita kombinasikan dengan tool <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">Microsoft Build</a>.</p>

<h3>Environment Test</h3>

<p>Untuk keperluan postingan kali ini, saya menggunakan environment test sebagai berikut:</p>

<h5>Server CI (Continuous Integration)</h5>

<ul>
<li>Windows Server 2008 R2</li>
<li>Software CI (Continuous Integration) menggunakan <a href="https://jenkins.io/">Jenkins</a></li>
<li>.NET Framework 4.0, 4.5.x</li>
<li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">Microsoft Build 2015</a></li>
<li><a href="https://www.iis.net/downloads/microsoft/web-deploy">Web Deploy 3.6</a></li>
<li>Source/version control <a href="https://git-scm.com/">Git</a></li>
<li>Repository Git menggunakan <a href="https://bonobogitserver.com/">Bonobo Git Server</a></li>
<li><a href="https://www.nuget.org/">NuGet</a></li>
</ul>


<h5>Server Development/Production</h5>

<ul>
<li>Windows Server 2008 R2</li>
<li>Web Server IIS 7</li>
<li>.NET Framework 4.0, 4.5.x</li>
<li><a href="https://www.iis.net/downloads/microsoft/web-deploy">Web Deploy 3.6</a></li>
</ul>


<h5>PC/Laptop Development</h5>

<ul>
<li>Visual Studio .NET 2013 <a href="https://www.visualstudio.com/vs/community/">Community Edition</a></li>
<li>Source/version control <a href="https://git-scm.com/">Git</a></li>
<li><a href="https://tortoisegit.org/">TortoiseGit</a></li>
</ul>


<h3>Konfigurasi Server Development/Production</h3>

<p>Berikut langkah-langkahnya:</p>

<p><strong>Langkah 1</strong>: Aktifkan role Management Service (Server Manager -> Role -> Web Server (IIS))</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-01.png">https://coding4ever.files.wordpress.com/2016/12/261213-01.png</a>&#8221;></p>

<p>Setelah selesai dilanjutkan dengan pembuatan user windows/local user.</p>

<p><strong>Langkah 2</strong>: Menambahkan user windows/local non-admin untuk keperluan deploy (Server Manager -> Configuration -> Local Users and Groups -> Users</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-02.png">https://coding4ever.files.wordpress.com/2016/12/261213-02.png</a>&#8221;></p>

<p><strong>Langkah 3</strong>: <a href="https://www.iis.net/downloads/microsoft/web-deploy">Download</a> dan Install <a href="https://www.iis.net/downloads/microsoft/web-deploy">Web Deploy</a>. Pada saat instalasi pilih custome kemudian aktifkan semua pilihan.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-03.png">https://coding4ever.files.wordpress.com/2016/12/261213-03.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-04.png">https://coding4ever.files.wordpress.com/2016/12/261213-04.png</a>&#8221;></p>

<p><strong>Langkah 4</strong>: Konfigurasi Web Deploy Publishing (IIS Manager -> Site -> Deploy -> Configure Web Deploy Publishing …)</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-05.png">https://coding4ever.files.wordpress.com/2016/12/261213-05.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-06.png">https://coding4ever.files.wordpress.com/2016/12/261213-06.png</a>&#8221;></p>

<p><code>tukang_deploy</code> di atas adalah user windows/local <code>non-admin</code> yang sudah kita buat pada langkah sebelumnya.</p>

<p><strong>Langkah 5</strong>: Selesai</p>

<h3>Konfigurasi PC/Laptop Development</h3>

<p>Untuk konfigurasi pc/laptop development dilakukan dengan cara membuat <code>publish profile</code>.  Berikut langkah-langkahnya:</p>

<p><strong>Langkah 1:</strong> Aktifkan project Visual Studio.net, sebagai contoh bisa didownload di <a href="https://github.com/k4m4r82/NorthwindWebApi">sini</a></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-07.png">https://coding4ever.files.wordpress.com/2016/12/261213-07.png</a>&#8221;></p>

<p><strong>Langkah 2:</strong> Klik kanan project Web API -> Publish&hellip;, setelah itu akan tampil dialog publish web</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-08.png">https://coding4ever.files.wordpress.com/2016/12/261213-08.png</a>&#8221;></p>

<p><strong>Langkah 3:</strong> Kemudian pada tab Profile pilih Custome</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-09.png">https://coding4ever.files.wordpress.com/2016/12/261213-09.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-101.png">https://coding4ever.files.wordpress.com/2016/12/261213-101.png</a>&#8221;></p>

<p>Isikan nama profile</p>

<p><strong>Langkah 4:</strong> Pada tab Connection isikan konfigurasinya seperti berikut</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-112.png">https://coding4ever.files.wordpress.com/2016/12/261213-112.png</a>&#8221;></p>

<p>Contoh konfigurasi di atas menggunakan ip <code>192.168.56.2</code> untuk server development, jadi nilainya tinggal disesuaikan. Untuk user dan password dikosongkan dulu aja, nanti kita set pada saat proses <code>build</code> dan <code>deploy</code> di job/project jenkins.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-122.png">https://coding4ever.files.wordpress.com/2016/12/261213-122.png</a>&#8221;></p>

<p><strong>Langkah 5:</strong> Selanjutnya tinggal di Next aja</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-13.png">https://coding4ever.files.wordpress.com/2016/12/261213-13.png</a>&#8221;></p>

<p><strong>Langkah 6:</strong> Terakhir klik tombol Close</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-14.png">https://coding4ever.files.wordpress.com/2016/12/261213-14.png</a>&#8221;></p>

<h3>Konfigurasi Server CI (Continuous Integration)</h3>

<p>Dipostingan kali ini saya tidak lagi menjelaskan secara rinci bagaimana membuat dan melakukan konfigurasi job/project jenkins karena sudah saya bahas dipostingan <a href="/blog/categories/jenkins/">sebelumnya</a>. Berikut langkah-langkahnya:</p>

<p><strong>Langkah 1:</strong> Buat job/project baru, misal dengan nama <code>northwind-web-api-deploy</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-15.png">https://coding4ever.files.wordpress.com/2016/12/261213-15.png</a>&#8221;></p>

<p><strong>Langkah 2:</strong> Setting repository git</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-16.png">https://coding4ever.files.wordpress.com/2016/12/261213-16.png</a>&#8221;></p>

<p><strong>Langkah 3:</strong> Setting restore nuget package</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-17.png">https://coding4ever.files.wordpress.com/2016/12/261213-17.png</a>&#8221;></p>

<p><strong>Langkah 4:</strong> Setting MSBuild</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-181.png">https://coding4ever.files.wordpress.com/2016/12/261213-181.png</a>&#8221;></p>

<p><strong>Langkah 5:</strong> Terakhir tes build dan deploy</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-19.png">https://coding4ever.files.wordpress.com/2016/12/261213-19.png</a>&#8221;></p>

<p>Jika proses <code>build</code> dan <code>deploy</code> selesai, kita tinggal cek hasilnya di IIS Manager</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-201.png">https://coding4ever.files.wordpress.com/2016/12/261213-201.png</a>&#8221;></p>

<p>Setelah itu kita juga bisa langsung mencoba web servicenya menggunakan web browser.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/12/261213-21.png">https://coding4ever.files.wordpress.com/2016/12/261213-21.png</a>&#8221;></p>

<p>Selamat <a href="https://github.com/k4m4r82/NorthwindWebApi">MENCOBA</a> :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membangun Server CI (Continuous Integration) Di Windows Untuk Platform .NET Menggunakan Jenkins Bagian #3]]></title>
    <link href="http://coding4ever.net/blog/2016/11/07/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-3/"/>
    <updated>2016-11-07T09:44:00+07:00</updated>
    <id>http://coding4ever.net/blog/2016/11/07/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-3</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png">https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png</a>&#8221; width=&#8221;109&#8221; height=&#8221;106&#8221;>Melanjutkan pembahasan tentang <a href="/blog/categories/continuous-integration/">Server CI (Continuous Integration)</a>. Kita sudah berhasil membuat project/job untuk melakukan proses <code>build</code> dan <code>deploy</code> secara otomatis dan terpusat di satu server. Hanya saja, ada sedikit yang kurang yaitu project/job ini harus kita jalankan/eksekusi secara manual setelah proses <code>push</code> source code ke server repository kita lakukan, dan tentunya akan sangat merepotkan jika harus bolak-balik mengeksekusi project/job setiap selesai melakukan proses <code>push</code>.</p>

<!-- more -->


<p>Nah untuk solusi masalah ini, kita akan menambahkan sedikit skrip agar proses eksekusi project/job ini bisa berjalan secara otomatis setelah selesai melakukan proses <code>push</code>. Skrip ini dikenal dengan nama <code>hook script</code>. Jadi source control seperti Git, mempunyai sekumpulan skrip (hook script ) dengan nama tertentu yang akan di eksekusi oleh git sebelum atau sesudah event-event tertentu, seperti: commit, push, receive dan event-event lainnya. <code>Hook script</code> ini disimpan di folder <code>hooks</code> masing-masing folder repository.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-01.png">https://coding4ever.files.wordpress.com/2016/11/261107-01.png</a>&#8221;></p>

<p>Pada gambar di atas, saya menambahkan file <a href="https://git-scm.com/docs/githooks">hook script</a> dengan nama <code>post-receive</code>, file ini akan dieksekusi secara otomatis seteleh proses <code>push</code> selesai. Berikut contoh isi dari file <code>post-receive</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-021.png">https://coding4ever.files.wordpress.com/2016/11/261107-021.png</a>&#8221;></p>

<p>Skrip <code>post-receive</code> di atas akan mengakses URL/alamat yang di gunakan untuk proses <code>build</code> dan <code>deploy</code> yaitu :</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>JENKINS_URL/job/JOB_NAME/build?token=TOKEN_NAME</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li><code>JENKINS_URL</code> diisi dengan alamat dari server jenkins misal <code>http://localhost:8080</code></li>
<li><code>JOB_NAME</code> diisi dengan nama project/job jenkins misal  <code>northwind-build</code></li>
<li><code>TOKEN_NAME</code> diisi dengan sembarang nilai token, misal <code>cnwlhaUq6g5Uwzvg6ePI</code></li>
</ul>


<p>Selain itu untuk mengakses URL ini juga dibutuhkan informasi user dan APInya, misal menggunakan user <code>admin</code> dengan apinya <code>94a0428ca9d8d1d6c2e229fe1183f98</code>. Selain menggunakan user API kita juga bisa menggunakan langsung password dari user tapi tentunya cara yang kedua ini tidak disarankan.</p>

<h3>Mendapatkan Informasi User API</h3>

<p>Informasi user API bisa diakses melalui menu <code>Manage Jenkins</code> -> <code>Manage Users</code> -> <code>Configure</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-03.png">https://coding4ever.files.wordpress.com/2016/11/261107-03.png</a>&#8221;></p>

<p>Kemudian klik tombol <code>Show API Token…</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-04.png">https://coding4ever.files.wordpress.com/2016/11/261107-04.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-05.png">https://coding4ever.files.wordpress.com/2016/11/261107-05.png</a>&#8221;></p>

<h3>Mengaktifkan Project/Job Authentication Token</h3>

<p>Untuk bisa mengakses URL  <strong>JENKINS_URL/job/JOB_NAME/build?token=TOKEN_NAME</strong> selain membutuhkan <code>User</code> dan <code>User API</code>, kita juga perlu mengaktifkan project/job Authentication Token melalui link <code>Project</code> -> <code>Configure</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-06.png">https://coding4ever.files.wordpress.com/2016/11/261107-06.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-07.png">https://coding4ever.files.wordpress.com/2016/11/261107-07.png</a>&#8221;></p>

<p>Kemudian aktifkan pilihan <code>Trigger builds remotely</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-08.png">https://coding4ever.files.wordpress.com/2016/11/261107-08.png</a>&#8221;></p>

<p>Untuk nilai <code>Authentication Token</code> diisi sesuai keinginan, kalo saya biasanya menggunakan tool <a href="/blog/2014/05/21/manajemen-password-menggunakan-keepass/">KeePass</a> untuk mengenerate nilai tokennya.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-091.png">https://coding4ever.files.wordpress.com/2016/11/261107-091.png</a>&#8221;></p>

<h3>Testing Build Otomatis</h3>

<p>Setelah menyelesaikan konfigurasi di atas, saatnya melakukan pengetesan apakah konfigurasinya sudah benar atau belum. Berikut langkah-langkahnya :</p>

<ul>
<li>Aktifkan project <a href="https://github.com/k4m4r82/Northwind">Northwind</a></li>
<li><p>Tambahkan method abstract baru di interface <a href="https://github.com/k4m4r82/Northwind/blob/master/src/Northwind.Repository.Api/IProductRepository.cs">IProductRepository</a>, misal dengan nama <code>GetByCategoryName</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-10.png">https://coding4ever.files.wordpress.com/2016/11/261107-10.png</a>&#8221;></p></li>
<li><p>Kemudian lengkapi implementasinya method abstractnya di class <a href="https://github.com/k4m4r82/Northwind/blob/master/src/Northwind.Repository.Service/ProductRepositoryDapper.cs">ProductRepositoryDapper</a></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-11.png">https://coding4ever.files.wordpress.com/2016/11/261107-11.png</a>&#8221;></p></li>
<li><p>Terakhir lakukan <code>commit</code> dan <code>push</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-12.png">https://coding4ever.files.wordpress.com/2016/11/261107-12.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-13.png">https://coding4ever.files.wordpress.com/2016/11/261107-13.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-14.png">https://coding4ever.files.wordpress.com/2016/11/261107-14.png</a>&#8221;></p></li>
<li><p>Dan secara otomatis proses <code>build</code> dan <code>deploy</code> di server CI akan dijalankan</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/11/261107-15.png">https://coding4ever.files.wordpress.com/2016/11/261107-15.png</a>&#8221;></p></li>
</ul>


<h3>Kesimpulan</h3>

<p>Dengan memanfaatkan <code>hook script</code> proses <code>build</code> dan <code>deploy</code> bisa dibuat otomatis pada event- event-event tertentu, seperti: commit, push, receive dan event-event lainnya.</p>

<p>Selamat Mencoba :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membangun Server CI (Continuous Integration) Di Windows Untuk Platform .NET Menggunakan Jenkins Bagian #2]]></title>
    <link href="http://coding4ever.net/blog/2016/10/01/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-2/"/>
    <updated>2016-10-01T22:35:57+07:00</updated>
    <id>http://coding4ever.net/blog/2016/10/01/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-2</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png">https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png</a>&#8221; width=&#8221;109&#8221; height=&#8221;106&#8221;>Pada <a href="/blog/2016/09/29/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-1/">postingan</a> sebelumnya kita sudah membuat project/job sederhana menggunakan <a href="https://jenkins.io/">Jenkins</a> untuk melakukan proses build, dan untuk postingan kali ini kita akan menambahkan proses deploy. Kalo masih bingung dengan istilah <code>deploy</code> di sini, anggap saja seperti kita membuat paket installer yang akan didistribusikan ke komputer klien. Nah dengan menggunakan CI semua proses ini bisa dilakukan secara otomatis dan terpusat, sehingga kita mempunyai histori hasil build dan deploy dari waktu ke waktu. Jadi untuk mencari file setup/paket installer terakhir enggak usah lagi nanya ke developer karena bisa langsung kita download dari server CI-nya.</p>

<!-- more -->


<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-01.png">https://coding4ever.files.wordpress.com/2016/10/261001-01.png</a>&#8221;></p>

<h3>Inno Setup</h3>

<p><a href="http://jrsoftware.org/">Inno Setup</a> adalah tool untuk membuat <a href="/blog/categories/tools-installer/">paket installer</a> yang gratis dan open source. Selain itu kita juga bisa menggunakan <a href="/blog/categories/tools-installer/">tool installer</a> lainnya seperti <a href="http://nsis.sourceforge.net/">NSIS</a>. Untuk informasi lebih lanjut tentang <a href="http://jrsoftware.org/">Inno Setup</a> dan <a href="http://nsis.sourceforge.net/">NSIS</a> bisa langsung ke <a href="/blog/categories/inno-setup/">sini</a> dan <a href="/blog/categories/nsis/">sini</a>.</p>

<p>Jadi di postingan kali ini kita akan menggunakan <a href="http://jrsoftware.org/">Inno Setup</a> untuk keperluan proses <code>deploy</code>. Sebagai contoh berikut adalah skrip <a href="http://jrsoftware.org/">Inno Setup</a> untuk project <a href="https://github.com/k4m4r82/Northwind">Northwind</a> yang kita gunakan sebagai contoh project.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppName &lsquo;Northwind App&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppDir &lsquo;Northwind&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppExeName &lsquo;Northwind.WinFormApp.exe&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppVendorName &lsquo;KR Software&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppCopyright &lsquo;Copyright © 2016. &rsquo; + AppVendorName&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppURL &lsquo;http://coding4ever.net/&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppVersion GetFileVersion(&lsquo;bin\&rsquo; + AppExeName)&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define AppMainIcon &lsquo;mainIcon.ico&rsquo;&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>[Setup]
</span><span class='line'>AppName={#AppName}
</span><span class='line'>AppVerName={#AppName} Versi {#AppVersion}
</span><span class='line'>AppPublisher={#AppVendorName}
</span><span class='line'>AppVersion={#AppVersion}
</span><span class='line'>AllowCancelDuringInstall = yes
</span><span class='line'>DefaultDirName={pf}{#AppVendorName}{#AppDir}
</span><span class='line'>DefaultGroupName={#AppVendorName}
</span><span class='line'>Compression = lzma
</span><span class='line'>SolidCompression = yes
</span><span class='line'>OutputDir=new-release
</span><span class='line'>OutputBaseFilename=Setup-v{#AppVersion}
</span><span class='line'>AllowNoIcons = yes
</span><span class='line'>AlwaysRestart = no
</span><span class='line'>AlwaysShowComponentsList = no
</span><span class='line'>DisableProgramGroupPage = yes
</span><span class='line'>AppendDefaultDirName = yes
</span><span class='line'>CreateUninstallRegKey = yes
</span><span class='line'>DisableStartupPrompt = yes
</span><span class='line'>LanguageDetectionMethod=none
</span><span class='line'>ShowLanguageDialog=no
</span><span class='line'>UsePreviousLanguage=no
</span><span class='line'>Uninstallable = yes
</span><span class='line'>UninstallFilesDir={app}\uninst
</span><span class='line'>UninstallDisplayIcon={app}{#AppExeName},0
</span><span class='line'>UninstallDisplayName={#AppName}
</span><span class='line'>WindowVisible = no
</span><span class='line'>AppCopyright={#AppCopyright}
</span><span class='line'>FlatComponentsList = yes
</span><span class='line'>PrivilegesRequired = admin
</span><span class='line'>VersionInfoVersion={#AppVersion}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>[Tasks]
</span><span class='line'>Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: checkedonce
</span><span class='line'>Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>[Files]
</span><span class='line'>;My Application Runtime
</span><span class='line'>Source: bin*.exe; DestDir: {app}; Flags: ignoreversion
</span><span class='line'>Source: bin*.dll; DestDir: {app}; Flags: ignoreversion&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>[Icons]
</span><span class='line'>Name: {group}{#AppName}; Filename: {app}{#AppExeName}; WorkingDir: {app}; IconFilename: {app}{#AppMainIcon}
</span><span class='line'>Name: {userdesktop}{#AppName}; Filename: {app}{#AppExeName}; WorkingDir: {app}; IconFilename: {app}{#AppMainIcon}; Tasks: desktopicon&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>[Code]
</span><span class='line'>procedure AboutButtonOnClick(Sender: TObject);
</span><span class='line'>begin
</span><span class='line'>  MsgBox(&lsquo;{#AppName}&rsquo; #13#13 &lsquo;{#AppCopyright}&rsquo; #13 &lsquo;{#AppURL}&rsquo;, mbInformation, mb_Ok);
</span><span class='line'>end;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>procedure CreateAboutButtonAndURLLabel(ParentForm: TSetupForm; CancelButton: TNewButton);
</span><span class='line'>var
</span><span class='line'>  AboutButton: TNewButton;
</span><span class='line'>begin
</span><span class='line'>  AboutButton := TNewButton.Create(ParentForm);
</span><span class='line'>  AboutButton.Left := ParentForm.ClientWidth - CancelButton.Left - CancelButton.Width;
</span><span class='line'>  AboutButton.Top := CancelButton.Top;
</span><span class='line'>  AboutButton.Width := CancelButton.Width;
</span><span class='line'>  AboutButton.Height := CancelButton.Height;
</span><span class='line'>  AboutButton.Caption := &lsquo;&amp;About&hellip;&rsquo;;
</span><span class='line'>  AboutButton.OnClick := @AboutButtonOnClick;
</span><span class='line'>  AboutButton.Parent := ParentForm;&lt;br/>
</span><span class='line'>end;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>procedure InitializeWizard();
</span><span class='line'>begin
</span><span class='line'>  CreateAboutButtonAndURLLabel(WizardForm, WizardForm.CancelButton);&lt;br/>
</span><span class='line'>end;</span></code></pre></td></tr></table></div></figure></p>

<p>Kemudian simpan skrip di atas di folder <code>workspace\deploy</code>. Workspace adalah folder di mana project atau job disimpan.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-02.png">https://coding4ever.files.wordpress.com/2016/10/261001-02.png</a>&#8221;></p>

<h3>Menambahkan Proses Deploy</h3>

<ul>
<li>Akses link : <a href="http://localhost:8080/,">http://localhost:8080/,</a> kemudian login</li>
<li><p>Klik link project <code>northwind-build</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-03.png">https://coding4ever.files.wordpress.com/2016/10/261001-03.png</a>&#8221;></p></li>
<li><p>Di halaman project <code>northwind-build</code>, klik link <code>Configure</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-04.png">https://coding4ever.files.wordpress.com/2016/10/261001-04.png</a>&#8221;></p></li>
<li><p>Berikutnya aktifkan tab <code>Build</code>, klik <code>Add build step</code> kemudian pilih <code>Execute Windows batch command</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-051.png">https://coding4ever.files.wordpress.com/2016/10/261001-051.png</a>&#8221;></p>

<p>Kemudian isikan skripnya seperti berikut</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-06.png">https://coding4ever.files.wordpress.com/2016/10/261001-06.png</a>&#8221;></p>

<p>Tidak ada yang aneh dengan skrip di atas, hanya sekumpulan <a href="http://www.robvanderwoude.com/batchcommands.php">batch commands</a> yang tentunya Anda dan Saya sudah familiar dengannya. Coba perhatikan lagi skrip di atas, di sana ada variabel <code>%WORKSPACE%</code> yang merupakan variabel built-innya Jenkins, dan jika mengacu pada project <code>northwind-build</code>  di atas maka isinya adalah “C:\Program Files (x86)\Jenkins\workspace\northwind-build”.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-07.png">https://coding4ever.files.wordpress.com/2016/10/261001-07.png</a>&#8221;></p></li>
</ul>


<h3>Menambahkan Artifact</h3>

<p>Artifact adalah output dari proses build, bisa berupa file exe, dll atau file dengan ekstensi lainnya. File-file artifact ini nantinya akan tersedia untuk di download di halaman project. Berikut langkah-langkah untuk menambahkan artifact :</p>

<ul>
<li><p>Masih di halaman <code>Configure</code>, aktifkan tab <code>Post-build Actions</code> klik <code>Add post-build action</code> kemudian pilih <code>Archive the artifacts</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-08.png">https://coding4ever.files.wordpress.com/2016/10/261001-08.png</a>&#8221;></p></li>
<li><p>Isikan nama-nama file artifact yang perlu di arsipkan, misal kita hanya mengarsipkan file Setup.exe</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-09.png">https://coding4ever.files.wordpress.com/2016/10/261001-09.png</a>&#8221;></p>

<p>Jika file artifactnya lebih dari satu pisahkan dengan tanda koma, contoh : <code>deploy\new-release\Setup*.exe</code>, <code>deploy\help\file_bantuan.chm</code>, <code>deploy\help\video_tutorial.avi</code>.</p></li>
<li><p>Terakhir klik Save</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-10.png">https://coding4ever.files.wordpress.com/2016/10/261001-10.png</a>&#8221;></p></li>
</ul>


<h3>Testing Build dan Deploy</h3>

<p>Setelah menyelesaikan tambahan konfigurasi <code>deploy</code>, saatnya melakukan pengetesan apakah konfigurasinya sudah benar. Berikut langkah-langkahnya :</p>

<ul>
<li><p>Kembali ke halaman project <code>northwind-build</code>, kemudian klik link <code>Build Now</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-11.png">https://coding4ever.files.wordpress.com/2016/10/261001-11.png</a>&#8221;></p></li>
<li><p>Di informasi <code>Build History</code> akan terlihat progress build dengan nama #1, #2, &hellip; dst</p>

<p> <img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-12.png">https://coding4ever.files.wordpress.com/2016/10/261001-12.png</a>&#8221;></p></li>
<li><p>Jika proses build-nya sukses penanda bulat-nya berwarna biru, jika warna merah berarti gagal</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-13.png">https://coding4ever.files.wordpress.com/2016/10/261001-13.png</a>&#8221;></p></li>
<li><p>Setelah build selesai, di halaman project <code>northwind-build</code> akan tersedia link download file artifact</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/10/261001-14.png">https://coding4ever.files.wordpress.com/2016/10/261001-14.png</a>&#8221;></p></li>
</ul>


<p>Selamat Mencoba :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membangun Server CI (Continuous Integration) Di Windows Untuk Platform .NET Menggunakan Jenkins Bagian #1]]></title>
    <link href="http://coding4ever.net/blog/2016/09/29/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-1/"/>
    <updated>2016-09-29T14:46:00+07:00</updated>
    <id>http://coding4ever.net/blog/2016/09/29/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-1</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png">https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png</a>&#8221; width=&#8221;109&#8221; height=&#8221;106&#8221;>Melanjutkan pembahasan tentang <a href="/blog/categories/continuous-integration/">Server CI (Continuous Integration)</a>, di mana persiapan awal sudah saya bahas di postingan saya yang berjudul &ldquo;Persiapan Membangun Server CI (Continuous Integration) di Windows untuk Platform .NET&rdquo; bagian <a href="/blog/2016/09/24/persiapan-membangun-server-ci-continuous-integration-pada-windows-untuk-platform-net-bagian-number-1/">satu</a> dan <a href="/blog/2016/09/26/persiapan-membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-bagian-number-2/">dua</a>.</p>

<p><a href="/blog/categories/continuous-integration/">Continuous Integration</a>, untuk selanjutnya kita sebut CI saja, merupakan salah satu kegiatan untuk meningkatkan produktivitas dalam pengembangan aplikasi di mana seluruh hasil kerja (source code) dari masing-masing developer digabungkan (push) ke dalam satu wadah (server repository source code). Bisa sekali sehari, bisa juga beberapa kali dalam sehari. Setiap penggabungan source code akan diverifikasi secara otomatis oleh server CI, yang memungkinkan tim untuk mendeteksi secara dini jika ada masalah/konflik/error pada saat penggabungan source code.</p>

<!-- more -->


<p>Setelah penggabungan hasil kerja (source code) selesai, server CI otomatis akan melakukan proses <code>build</code> untuk memastikan tidak ada kode yang merusak/membuat proses <code>build</code> gagal. Jadi semakin cepat kegagalan <code>build</code> ini diketahui semakin cepat pula kita meresponnya.  Dan jika proses <code>build</code>-nya berhasil akan dilanjutkan dengan proses <code>deploy</code>. Selain itu server CI juga bisa dikonfigurasi untuk melakukan proses lain seperti menjalankan <a href="/blog/2016/07/20/unit-testing-menggunakan-nunit/">unit testing</a>, <a href="/blog/2016/07/28/integration-testing-menggunakan-nunit/">integration testing</a> dan <a href="/blog/categories/software-testing/">testing otomatis</a> lainnya.</p>

<p>Sebagai .NET developer kita sudah biasa melakukan proses <code>build</code> dengan menekan tombol F5 (Start Debugging) atau Ctrl+F5 (Start Without Debugging) baik pada waktu development atau perbaikan bug. Sedangkan untuk contoh <code>deploy</code> anggap saja seperti kita membuat paket installer yang akan didistribusikan ke komputer/server klien. Nah dengan menggunakan CI semua proses ini bisa dilakukan secara otomatis dan terpusat, sehingga kita mempunyai arsip hasil <code>build</code> dan <code>deploy</code> dari waktu ke waktu. Jadi untuk mencari file setup/paket installer terakhir enggak usah lagi nanya ke developer karena bisa langsung kita download dari server CI-nya.</p>

<p>Proses <code>build</code> ini selain bisa dibuat otomatis setiap kita mem-<code>push</code> source code ke server repository bisa juga kita buatkan jadwalnya, misal pas jam makan siang atau jam pulang kantor. Jadi di kantor dibuat kesepakatan/aturan klo ada yang merusak <code>build</code> pas jam makan siang enggak boleh makan siang sampai proses <code>build</code>-nya berhasil atau yang merusak <code>build</code> pas jam pulang kantor enggak boleh pulang sampai proses <code>build</code>-nya  berhasil :-D</p>

<p>Jadi dengan menggunakan CI, alur kerja kita lebih kurang seperti berikut :</p>

<ul>
<li>Menulis kode, build dan tes di komputer masing-masing (seperti biasa).</li>
<li>Commit dan push kode ke server repository/source control seperti GIT atau SVN.
Di masing-masing repository kita pasang <code>hook script</code> untuk memanggil job/project yang sudah kita buat dan konfigurasi di server CI.</li>
<li>Server CI akan meng-clone repository kemudian melakukan build, menjalankan <a href="/blog/categories/software-testing/">tes otomatis</a> (jika ada) dan deploy secara otomatis. Jika buildnya gagal ulangi lagi langkah pertama</li>
</ul>


<p>Cukup ya intronya, berikutnya akan kita bahas tool/software yang bisa kita gunakan untuk mengimplementasikan CI, salah satunya adalah <a href="https://jenkins.io">Jenkins</a>.</p>

<p><a href="https://jenkins.io">Jenkins</a> adalah salah satu software continuous integration (CI) open source yang dibuat menggunakan Java. Untuk sejarah <a href="https://jenkins.io">Jenkins</a> silahkan digoogle sendiri ya :-)</p>

<p>Selain <a href="https://jenkins.io">Jenkins</a>, ada tool-tool lain yang harus kita siapkan agar implementasi CI menggunakan <a href="https://jenkins.io">Jenkins</a> ini bisa berhasil. Berikut daftar lengkapnya :</p>

<ul>
<li><a href="https://jenkins.io">Jenkins</a></li>
<li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">MSBuild</a> – untuk keperluan proses build</li>
<li><a href="https://dist.nuget.org/index.html">NuGet</a> – untuk merestore package nuget sebelum proses build dijalankan</li>
<li>Source Control menggunakan <a href="https://git-scm.com/downloads">Git</a>, Anda bisa juga menggunakan <a href="https://subversion.apache.org/download.cgi">SVN</a></li>
<li><a href="https://tortoisegit.org/">TortoiseGit</a> – aplikasi git client</li>
<li><a href="https://bonobogitserver.com/">Bonobo Git Server</a> (server Git gratis berbasis Windows/IIS)</li>
<li><a href="http://www.jrsoftware.org/">Inno Setup</a> atau <a href="http://nsis.sourceforge.net/">NSIS</a> – untuk keperluan proses deploy/pembuatan paket installer</li>
</ul>


<p>Tool-tool di atas selain perlu disiapkan juga harus tau cara penggunaannya, klo belum ya silahkan mampir dulu ke <a href="/blog/2016/09/24/persiapan-membangun-server-ci-continuous-integration-pada-windows-untuk-platform-net-bagian-number-1/">sini</a> dan <a href="/blog/2016/09/26/persiapan-membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-bagian-number-2/">sini</a>.</p>

<p>Sebelum kita lanjut ke pembahasan, kita lihat tool/software untuk <code>Environment Test</code> yang saya gunakan baik di sisi server (Server CI) dan client (developer).</p>

<h3>Environment Test Server</h3>

<ul>
<li>Windows Server 2008 R2</li>
<li>Automation server <a href="https://jenkins.io/">Jenkins</a></li>
<li>.NET Framework 4.0, 4.5.x</li>
<li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">Microsoft Build 2015</a></li>
<li>Source/version control <a href="https://git-scm.com/">Git</a></li>
<li><a href="https://bonobogitserver.com/">Server Repository Git</a></li>
<li>Package Installer <a href="/blog/categories/inno-setup/">Inno Setup</a></li>
<li><a href="https://dist.nuget.org/index.html">NuGet</a></li>
</ul>


<h3>Environment Test Client</h3>

<ul>
<li>Visual Studio .NET 2013 Community Edition</li>
<li>Source/version control <a href="https://git-scm.com/">Git</a></li>
<li><a href="https://tortoisegit.org/">TortoiseGit</a></li>
</ul>


<h3>Fokus Pembahasan</h3>

<p>Untuk postingan pertama ini, kita akan membahas:</p>

<ul>
<li>Konfigurasi <a href="https://jenkins.io">Jenkins</a></li>
<li>Plugin tambahan yang perlu diinstall</li>
<li>Pembuatan Project (Job)</li>
<li>Tes clone repository, restore library nuget dan  build dalam satu langkah/klik</li>
</ul>


<h3>Instalasi Jenkins</h3>

<p>Download dan install Jenkins di <a href="https://jenkins-ci.org/">sini</a>, setelah instalasi <a href="https://jenkins-ci.org/">Jenkins</a> bisa diakses di link <a href="http://localhost:8080">http://localhost:8080</a></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-01.png">https://coding4ever.files.wordpress.com/2016/09/260929-01.png</a>&#8221;></p>

<h3>Konfigurasi Jenkins</h3>

<p><a href="https://jenkins.io">Jenkins</a> mempunyai banyak plugin yang mudah dikonfigurasi seperti plugin Git, MSBuild dan lainnya. Berikut adalah daftar plugin yang akan kita install.</p>

<ul>
<li>Git plugin</li>
<li>MSBuild plugin</li>
<li>NUnit plugin</li>
<li>Cobertura plugin</li>
<li>PowerShell plugin</li>
</ul>


<p>Sebagai contoh kita akan menginstall plugin Git dan MSBuild, berikut langkah-langkahnya :</p>

<h5>Menginstall plugin Git</h5>

<ul>
<li>Akses link : <a href="http://localhost:8080/">http://localhost:8080/</a></li>
<li>Klik link Manage Jenkins, pilih Manage Plugins</li>
<li>Aktifkan tab <code>Available</code>, ketik <code>Git plugin</code> di filter box, dari daftar pilihan plugin yang tersedia pilih <code>Git plugin</code></li>
<li>Klik tombol <code>Install without restart</code></li>
</ul>


<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-02.png">https://coding4ever.files.wordpress.com/2016/09/260929-02.png</a>&#8221;></p>

<h5>Menginstall plugin MSBuild</h5>

<p>Masih sama dengan langkah-langkah sebelumnya, hanya saja kali ini plugin yang perlu difilter adalah <code>MSBuild</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-03.png">https://coding4ever.files.wordpress.com/2016/09/260929-03.png</a>&#8221;></p>

<p>Ulangi langkah-langkah di atas untuk menginstall plugin lainnya seperti NUnit, Cobertura dan PowerShell.</p>

<h5>Konfigurasi Git dan MSBuild</h5>

<p>Setelah instalasi plugin Git dan MSBuild, kita perlu menambahkan konfigurasinya di halaman <code>Global Tool Configuration</code>, berikut langkah-langkahnya :</p>

<ul>
<li>Akses link : <a href="http://localhost:8080/">http://localhost:8080/</a></li>
<li>Klik link Manage Jenkins, pilih Global Tool Configuration</li>
<li><p>Scroll ke bawah sampai menemukan tulisan <code>Git/Git installations</code>, untuk isian <code>Path to Git executable</code> isikan lokasi instalasi git secara absolute</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-04.png">https://coding4ever.files.wordpress.com/2016/09/260929-04.png</a>&#8221;></p>

<p>Untuk lokasi Git disesuaikan dengan lokasi instalasi Git di mesin Anda.</p></li>
<li>Kemudian scroll kebawah lagi sampai menemukan tulisan <code>MSBuild</code>, kemudian klik tombol <code>Add MSBuild</code></li>
<li><p>Isikan konfigurasinya seperti gambar berikut :</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-05.png">https://coding4ever.files.wordpress.com/2016/09/260929-05.png</a>&#8221;></p>

<p>Untuk lokasi MSBuild juga disesuaikan dengan lokasi instalasi MSBuild di mesin Anda. Terakhir klik tombol Save.</p></li>
</ul>


<h3>Pembuatan Project (Job)</h3>

<p>Berikutnya kita akan membuat project sederhana untuk mencoba proses build, berikut langkah-langkahnya:</p>

<ul>
<li>Akses link : <a href="http://localhost:8080/">http://localhost:8080/</a></li>
<li>Klik link New Item</li>
<li>Isikan nama project, misal northwind-build</li>
<li>Pilih Freestyle project</li>
<li><p>Pilih Ok</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-06.png">https://coding4ever.files.wordpress.com/2016/09/260929-06.png</a>&#8221;></p></li>
<li><p>Aktifkan tab <code>Source Code Management</code>, kemudian pilih <code>Git</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-07.png">https://coding4ever.files.wordpress.com/2016/09/260929-07.png</a>&#8221;></p></li>
<li><p>Kemudian lengkapi isian <code>Repository URL</code> dan <code>Credentials</code> seperti contoh berikut:</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-08.png">https://coding4ever.files.wordpress.com/2016/09/260929-08.png</a>&#8221;></p>

<p>Untuk contoh di atas dengan asumsi instalasi <a href="https://jenkins.io">Jenkins</a> dan <a href="/blog/2016/09/24/persiapan-membangun-server-ci-continuous-integration-pada-windows-untuk-platform-net-bagian-number-1/">server repository Git</a> di mesin yang sama.</p>

<p><a href="https://jenkins.io">Jenkins</a> selalu bekerja dengan <code>branch</code> dan secara default menggunakan branch <code>master</code>.</p></li>
<li><p>Berikutnya aktifkan tab <code>Build</code>, klik <code>Add build step</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-09.png">https://coding4ever.files.wordpress.com/2016/09/260929-09.png</a>&#8221;></p></li>
<li><p>Pilih <code>Build a Visual Studio project or solution using MSBuild</code></p>

<p>Disini kita perlu mengisikan beberapa nilai:</p>

<ul>
<li>MSBuild Version diisi dengan <code>MSBuild</code> (yang sudah kita konfigurasi pada langkah sebelumnya)</li>
<li>MSBuild Build File diisi dengan nama solution atau project</li>
<li>Command Line Arguments (optional) diisi dengan parameter MSBuild
<img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-10.png">https://coding4ever.files.wordpress.com/2016/09/260929-10.png</a>&#8221;></li>
</ul>
</li>
<li><p>Karena project kita menggunakan library NuGet, kita juga perlu menambahkan konfigurasi untuk me-restore library NuGet. Masih di tab Build, klik <code>Add build step</code> kemudian pilih <code>Execute Windows batch command</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-11.png">https://coding4ever.files.wordpress.com/2016/09/260929-11.png</a>&#8221;></p>

<p>Untuk isian <code>Command</code> isikan perintah/skrip seperti berikut:</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-12.png">https://coding4ever.files.wordpress.com/2016/09/260929-12.png</a>&#8221;></p>

<p>Perintah/skrip di atas dengan asumsi Anda sudah mendownload tool <a href="https://dist.nuget.org/index.html">NuGet</a> dan menyimpannya di folder <code>D:\Development Tools</code>.</p>

<p>Seperti yang sudah pernah saya bahas di postingan <a href="xx">Persiapan Membangun Server CI Bagian #2</a>, proses <code>build</code> dilakukan setelah me-restore library nuget. Jadi kita harus merubah urutan prioritas agar konfigurasi &ldquo;Execute Windows batch command&rdquo; dijalankan terlebih dulu sebelum konfigurasi &ldquo;Build a Visual Studio project or solution using MSBuild&rdquo; dengan cara men-drag-nya ke atas.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-13.png">https://coding4ever.files.wordpress.com/2016/09/260929-13.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-14.png">https://coding4ever.files.wordpress.com/2016/09/260929-14.png</a>&#8221;></p>

<p>Pada gambar di atas terlihat konfigurasi &ldquo;Execute Windows batch command&rdquo; dan &ldquo;Build a Visual Studio project or solution using MSBuild&rdquo; sudah berganti posisi. Terakhir klik tombol Save</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-15.png">https://coding4ever.files.wordpress.com/2016/09/260929-15.png</a>&#8221;></p></li>
</ul>


<h3>Testing Build</h3>

<p>Setelah menyelesaikan beberapa konfigurasi, saatnya melakukan pengetesan apakah konfigurasi sebelumnya sudah benar. Berikut langkah-langkahnya :</p>

<ul>
<li><p>Klik link project <code>northwind-build</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-16.png">https://coding4ever.files.wordpress.com/2016/09/260929-16.png</a>&#8221;></p></li>
<li><p>Di halaman project <code>northwind-build</code>, klik link <code>Build Now</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-17.png">https://coding4ever.files.wordpress.com/2016/09/260929-17.png</a>&#8221;></p></li>
<li><p>Di informasi <code>Build History</code> akan terlihat progress build dengan nama <code>#1</code>, <code>#2</code>,&hellip; dst</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-18.png">https://coding4ever.files.wordpress.com/2016/09/260929-18.png</a>&#8221;></p></li>
<li><p>Jika proses build-nya sukses penanda <code>bulat</code>-nya berwarna biru, jika warna merah berarti gagal</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-19.png">https://coding4ever.files.wordpress.com/2016/09/260929-19.png</a>&#8221;></p></li>
<li><p>Untuk melihat detil <code>build</code>, klik link build number, misal <code>#1</code>, <code>#2</code>,&hellip; dst</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-20.png">https://coding4ever.files.wordpress.com/2016/09/260929-20.png</a>&#8221;></p></li>
<li><p>Kemudian klik link <code>Console Output</code></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-211.png">https://coding4ever.files.wordpress.com/2016/09/260929-211.png</a>&#8221;></p>

<p>Catatan penting dari <code>output</code> di atas adalah lokasi dari <code>workspace</code> di mana source code/hasil clone dari repository dan proses build dilakukan. Informasi ini tentu akan sangat membantu kita dalam melakukan <code>debuging</code> konfigurasi/setup CI.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260929-22.png">https://coding4ever.files.wordpress.com/2016/09/260929-22.png</a>&#8221;></p></li>
</ul>


<p>Kesimpulan dari proses build di atas dan tentunya berdasarkan konfigurasi yang kita lakukan, jenkins melakukan hal-hal berikut :</p>

<ol>
<li>Meng-clone repository git</li>
<li>Me-restore library nuget</li>
<li>Melakukan proses build</li>
</ol>


<p>Selamat Mencoba :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Persiapan Membangun Server CI (Continuous Integration) Di Windows Untuk Platform .NET Bagian #2]]></title>
    <link href="http://coding4ever.net/blog/2016/09/26/persiapan-membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-bagian-number-2/"/>
    <updated>2016-09-26T11:01:00+07:00</updated>
    <id>http://coding4ever.net/blog/2016/09/26/persiapan-membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-bagian-number-2</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png">https://coding4ever.files.wordpress.com/2016/09/logo-ci1.png</a>&#8221; width=&#8221;109&#8221; height=&#8221;106&#8221;>Persiapan <a href="/blog/2016/09/24/persiapan-membangun-server-ci-continuous-integration-pada-windows-untuk-platform-net-bagian-number-1/">awal</a> untuk membangun Server CI (Continuous Integration) sudah kita selesaikan yaitu <a href="/blog/2016/09/24/persiapan-membangun-server-ci-continuous-integration-pada-windows-untuk-platform-net-bagian-number-1/">membuat sendiri server repository Git</a> untuk keperluan internal kantor yang berfungsi sebagai wadah untuk menampung source code dari masing-masing developer.</p>

<p>Masih tersisa beberapa tool yang harus kita pelajari penggunaannya agar proses membangun server CInya berjalan mulus yaitu :</p>

<!-- more -->


<ul>
<li><a href="/blog/categories/tools-installer/">Package Installer</a></li>
<li><a href="http://nunit.org/">NUnit</a></li>
<li><a href="https://www.nuget.org/">NuGet</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/dd393574.aspx">MSBuild</a></li>
</ul>


<h3>Package Installer</h3>

<p>Tool ini digunakan untuk membuat <a href="/blog/categories/tools-installer/">paket instalasi</a> biasanya digunakan untuk aplikasi desktop seperti winform, console atau windows service. Tujuannya jelas untuk mempermudah distribusi/instalasi aplikasi ke klien. <a href="/blog/categories/tools-installer/">Package Installer</a> ini nantinya digunakan untuk proses <code>deploy</code> yang dilakukan secara otomatis oleh server CI.</p>

<p>Jadi alurnya adalah ketika kita mem-push source code ke server repository git, ini akan men-trigger server CI untuk melakukan build, menjalankan tes otomatis (jika ada) kemudian membuat paket instalasi  untuk aplikasi desktop atau rilis/upload kode ke server produksi untuk aplikasi web.</p>

<p>Untuk membuat <a href="/blog/categories/tools-installer/">paket instalasi</a>, kita bisa menggunakan yang gratis seperti <a href="/blog/categories/inno-setup/">Inno Setup</a> atau <a href="/blog/categories/nsis/">NSIS</a>.</p>

<h3>NUnit</h3>

<p>Tool ini digunakan untuk keperluan <a href="/blog/categories/software-testing/">testing otomatis</a>, saya sudah membahas penggunaan tool ini di kategori <a href="/blog/categories/software-testing/">Software Testing</a>.</p>

<h3>MSBuild</h3>

<p>Dari nama toolnya aja udah jelas, klo tool ini digunakan untuk proses <a href="https://www.techopedia.com/definition/3759/build">build</a> solution/project yang sedang kita kembangkan. Sadar atau tidak sebenarnya kita <code>sudah sering</code> menggunakan MSBuild ketika menggunakan IDE Visual Studio .NET untuk menulis kode. Setelah selesai menulis kode, biasanya kitakan menekan tombol F5 (Start Debugging) atau Ctrl+F5 (Start Without Debugging) untuk menjalankan/mengetes kode yang baru selesai kita tulis. Nah pada saat kita menekan tombol F5/Ctrl+F5, IDE Visual Studio .NET akan menjalankan/mengeksekusi MSBuild sesuai dengan pengaturan yang sudah kita set di bagian <code>Configuration Manager</code> atau <code>Project -&gt; Properties -&gt; Build</code>.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-01.png">https://coding4ever.files.wordpress.com/2016/09/260916-01.png</a>&#8221;></p>

<p style="text-align:center;"> Configuration Manager</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-02.png">https://coding4ever.files.wordpress.com/2016/09/260916-02.png</a>&#8221;></p>

<p style="text-align:center;"> Setting Build di Project Properties</p>

<p>Menekan tombol F5/Ctrl+F5 inikan dari sisi developer ketika akan mem-<a href="https://www.techopedia.com/definition/3759/build">build</a> solution/project sedangkan dari sisi server (server CI) karena kita tidak menginstall Visual Studio.NET, kita cukup menginstall tool <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">MSBuild</a> secara terpisah. Sehingga untuk menjalankan tool <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">MSBuild</a> kita lakukan via command prompt. Tapi untuk contoh di sini kita akan menggunakan Visual Studio .NET Command Prompt untuk menjalankan tool <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48159">MSBuild</a>, caranya adalah dengan mengaktifkan Visual Studio .NET Command Prompt sesuai dengan versi Visual Studio .NET Anda.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-03.png">https://coding4ever.files.wordpress.com/2016/09/260916-03.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-04.png">https://coding4ever.files.wordpress.com/2016/09/260916-04.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-05.png">https://coding4ever.files.wordpress.com/2016/09/260916-05.png</a>&#8221;></p>

<p>Kemudian ketik perintah MSBuild dengan format seperti berikut:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MSBuild.exe [Switches] [ProjectFile]</span></code></pre></td></tr></table></div></figure></p>

<p>Contoh :</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MSBuild.exe /t:Clean,Build /p:Configuration=Release /p:Platform=&ldquo;Any CPU&rdquo; &ldquo;D:\DemoContinuousIntegration\src\Northwind.sln&rdquo;</span></code></pre></td></tr></table></div></figure></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-06.png">https://coding4ever.files.wordpress.com/2016/09/260916-06.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-07.png">https://coding4ever.files.wordpress.com/2016/09/260916-07.png</a>&#8221;></p>

<p>Untuk referensi lengkap MSBuild Command, bisa Anda cek di <a href="https://msdn.microsoft.com/en-us/library/ms164311.aspx">sini</a>.</p>

<p>Di server CI kita akan menuliskan perintah MSBuild seperti di atas untuk keperluan <code>build</code> otomatis.</p>

<h3>NuGet</h3>

<p><a href="/blog/categories/nuget/">NuGet</a> adalah tool package manager yang berfungsi untuk mempermudah kita menginstall library pihak ketiga (3rd party libraries), seperti <a href="https://www.nuget.org/packages/Dapper/">Dapper .NET</a>, <a href="https://www.nuget.org/packages/EntityFramework/">Entity Framework</a>, <a href="https://www.nuget.org/packages/Newtonsoft.Json/">Json .NET</a> dan masih banyak lagi library pihak ketiga yang memang sudah terbukti ampuh dan bermanfaat untuk project yang kita kembangkan.</p>

<p>Penggunaan tool ini juga sudah saya bahas di kategori <a href="/blog/categories/nuget/">NuGet</a> tetapi pembahasannya dari sisi developer sedangkan untuk sisi server (server CI), <a href="/blog/categories/nuget/">NuGet</a> digunakan untuk me-restore library nuget yang digunakan oleh project/aplikasi yang kita kembangkan, karena jika tidak di-restore, server CI akan <code>gagal</code> melakukan proses build.</p>

<p>Sebagai contoh kita akan mem-build ulang project <a href="https://github.com/k4m4r82/Northwind">Northwind</a> di atas, tetapi dengan menghapus library nugetnya terlebih dulu yang ada di dalam folder lib.</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-08.png">https://coding4ever.files.wordpress.com/2016/09/260916-08.png</a>&#8221;></p>

<p>Kemudian kita build ulang</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-09.png">https://coding4ever.files.wordpress.com/2016/09/260916-09.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-10.png">https://coding4ever.files.wordpress.com/2016/09/260916-10.png</a>&#8221;></p>

<p>Nah dari gambar di atas kan terlihat hasil buildnya gagal karena project Northwindnya membutuhkan library <code>Dapper</code> dan <code>System.Data.SQLite.Core</code>.</p>

<p>Sekarang kita coba menambahkan perintah untuk me-restore library nugetnya terlebih dulu sebelum melakukan proses build, tapi sebelumnya download terlebih dulu tool nugetnya di <a href="https://dist.nuget.org/index.html">sini</a> kemudian simpan di folder misal dengan nama <code>D:\Development Tools</code>, kemudian ketik perintah berikut :</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&ldquo;D:\Development Tools\nuget.exe&rdquo; restore &ldquo;D:\DemoContinuousIntegration\src&rdquo;</span></code></pre></td></tr></table></div></figure></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-111.png">https://coding4ever.files.wordpress.com/2016/09/260916-111.png</a>&#8221;></p>

<p>Setelah me-restore library nugetnya berhasil, baru kita build ulang</p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-12.png">https://coding4ever.files.wordpress.com/2016/09/260916-12.png</a>&#8221;></p>

<p><img class="center <a" src="href="https://coding4ever.files.wordpress.com/2016/09/260916-13.png">https://coding4ever.files.wordpress.com/2016/09/260916-13.png</a>&#8221;></p>

<p>Sampai di sini persiapan untuk membangun Server CI (Continuous Integration) sudah selesai, insya Allah di postingan berikutnya kita akan membahas <a href="/blog/2016/09/29/membangun-server-ci-continuous-integration-di-windows-untuk-platform-net-menggunakan-jenkins-bagian-number-1/">Bagaimana Membangun Server CI (Continuous Integration) di Windows untuk Platform .NET Menggunakan Jenkins</a>.</p>

<p>Selamat Mencoba :-)</p>
]]></content>
  </entry>
  
</feed>
